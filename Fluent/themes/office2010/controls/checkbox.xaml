<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Fluent="clr-namespace:Fluent">
  <Style x:Key="EmptyCheckBoxFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="1" SnapsToDevicePixels="true" Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="CheckRadioFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="Black" StrokeDashArray="1 2"
                     StrokeThickness="1"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type Fluent:CheckBox}">
    <Setter Property="ToolTipService.ShowDuration" Value="30000"/>
    <Setter Property="FrameworkElement.FocusVisualStyle">
      <Setter.Value>
        <Style>
          <Setter Property="Control.Template">
            <Setter.Value>
              <ControlTemplate>
                <Rectangle Margin="1" SnapsToDevicePixels="true" Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1"/>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Fluent:CheckBox}">
          <BulletDecorator x:Name="bulletDecorator" SnapsToDevicePixels="true" Background="Transparent" Height="22">
            <BulletDecorator.Bullet>
              <Grid Width="13" Height="13" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="4,4,0,0">
                <Rectangle x:Name="rectangle" Fill="{DynamicResource CheckBoxOutterBackgroundBrush}"
                           Stroke="{DynamicResource CheckBoxOutterBorderBrush}"/>
                <Rectangle x:Name="rectangle1" Margin="1,1,1,1" Stroke="{DynamicResource CheckBoxOutterBackgroundBrush}"
                           HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="{x:Null}"/>
                <Rectangle x:Name="defaultRect" Margin="2,2,2,2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                           Opacity="1" Stroke="{DynamicResource CheckBoxInnerBorderBrush}"
                           Fill="{DynamicResource CheckBoxInnerBackgroundBrush}"/>
                <Rectangle x:Name="rectangle2" StrokeThickness="0" Margin="2" Opacity="0">
                  <Shape.Fill>
                    <RadialGradientBrush Center="0.496,1.004" GradientOrigin="0.496,1.004">
                      <GradientStop Color="White"/>
                      <GradientStop Offset="1"/>
                    </RadialGradientBrush>
                  </Shape.Fill>
                </Rectangle>
                <Path x:Name="path" Margin="3,3,3,3" VerticalAlignment="Stretch" Stretch="Fill"
                      Data="M 2.0594839,6.6033333 L 5.8330001,9.4978325 10.00636,1.7586203 " Stroke="#FF6E7071"
                      StrokeEndLineCap="Triangle" StrokeDashCap="Square" StrokeThickness="2"
                      StrokeStartLineCap="Triangle" Fill="{x:Null}">
                  <UIElement.BitmapEffect>
                    <OuterGlowBitmapEffect GlowColor="#BFFFFFFF" GlowSize="1" Opacity="1"/>
                  </UIElement.BitmapEffect>
                </Path>
              </Grid>
            </BulletDecorator.Bullet>
            <TextBlock Text="{TemplateBinding Fluent:CheckBox.Header}" Margin="8,3,4,0"/>
          </BulletDecorator>
          <ControlTemplate.Triggers>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsMouseOver" Value="true"/>
                <Condition Property="ButtonBase.IsPressed" Value="false"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="rectangle" Value="{DynamicResource CheckBoxHoverOutterBorderBrush}"
                      Property="Shape.Stroke"/>
              <Setter TargetName="rectangle" Value="{DynamicResource CheckBoxHoverOutterBackgroundBrush}"
                      Property="Shape.Fill"/>
              <Setter TargetName="rectangle1" Value="{DynamicResource CheckBoxHoverOutterBackgroundBrush}"
                      Property="Shape.Stroke"/>
              <Setter TargetName="defaultRect" Value="{DynamicResource CheckBoxHoverInnerBorderBrush}"
                      Property="Shape.Stroke"/>
              <Setter TargetName="defaultRect" Value="{DynamicResource CheckBoxHoverInnerBackgroundBrush}"
                      Property="Shape.Fill"/>
              <Setter TargetName="path" Property="Shape.Stroke" Value="Black"/>
              <Setter TargetName="rectangle2" Property="UIElement.Opacity" Value="0.25"/>
            </MultiTrigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <Setter TargetName="rectangle" Value="{DynamicResource CheckBoxPressedOutterBorderBrush}"
                      Property="Shape.Stroke"/>
              <Setter TargetName="rectangle" Value="{DynamicResource CheckBoxPressedOutterBackgroundBrush}"
                      Property="Shape.Fill"/>
              <Setter TargetName="rectangle1" Value="{DynamicResource CheckBoxPressedOutterBackgroundBrush}"
                      Property="Shape.Stroke"/>
              <Setter TargetName="defaultRect" Value="{DynamicResource CheckBoxPressedInnerBorderBrush}"
                      Property="Shape.Stroke"/>
              <Setter TargetName="defaultRect" Value="{DynamicResource CheckBoxPressedInnerBackgroundBrush}"
                      Property="Shape.Fill"/>
              <Setter TargetName="path" Property="Shape.Stroke" Value="Black"/>
              <Setter TargetName="rectangle2" Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="False">
              <Setter TargetName="path" Property="UIElement.Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="bulletDecorator" Property="UIElement.Opacity" Value="0.3"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.Foreground" Value="#FF464646"/>
  </Style>
</ResourceDictionary>