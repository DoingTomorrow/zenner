<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Fluent="clr-namespace:Fluent">
  <Style x:Key="ColorGalleryListBox" TargetType="{x:Type ListBox}">
    <Setter Property="Control.Background" Value="{DynamicResource GalleryBackgroundBrush}"/>
    <Setter Property="ItemsControl.ItemTemplate">
      <Setter.Value>
        <DataTemplate>
          <Rectangle Stroke="{DynamicResource RibbonTopBorderBrush}">
            <Shape.Fill>
              <SolidColorBrush Color="{Binding}"/>
            </Shape.Fill>
          </Rectangle>
        </DataTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBox}">
          <Border Background="{TemplateBinding Control.Background}" HorizontalAlignment="Stretch">
            <UniformGrid Rows="1" HorizontalAlignment="Left" IsItemsHost="true"
                         Columns="{Binding Columns, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Fluent:ColorGallery}}}"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ItemsControl.ItemContainerStyle">
      <Setter.Value>
        <Style TargetType="{x:Type ListBoxItem}">
          <Setter Property="Control.Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type ListBoxItem}">
                <Grid Background="Transparent">
                  <ContentPresenter Margin="2"
                                    Width="{Binding ChipWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Fluent:ColorGallery}}, FallbackValue=13}"
                                    Height="{Binding ChipHeight, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Fluent:ColorGallery}}, FallbackValue=13}"/>
                  <Border x:Name="hoverBorder" BorderThickness="1"
                          BorderBrush="{DynamicResource ButtonHoverOuterBorderBrush}" Visibility="Collapsed" Margin="2">
                    <Border BorderThickness="1" BorderBrush="{DynamicResource ButtonHoverInnerBorderBrush}"/>
                  </Border>
                  <Border x:Name="selectedBorder" BorderThickness="1"
                          BorderBrush="{DynamicResource ButtonPressedOuterBorderBrush}" Visibility="Collapsed" Margin="2">
                    <Border BorderThickness="1" BorderBrush="{DynamicResource ButtonPressedInnerBorderBrush}"/>
                  </Border>
                </Grid>
                <ControlTemplate.Triggers>
                  <Trigger Property="UIElement.IsMouseOver" Value="true">
                    <Setter TargetName="hoverBorder" Property="UIElement.Visibility" Value="Visible"/>
                  </Trigger>
                  <Trigger Property="ListBoxItem.IsSelected" Value="true">
                    <Setter TargetName="selectedBorder" Property="UIElement.Visibility" Value="Visible"/>
                  </Trigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="HightlightColorGalleryListBox" TargetType="{x:Type ListBox}">
    <Setter Property="Control.Background" Value="{DynamicResource GalleryBackgroundBrush}"/>
    <Setter Property="ItemsControl.ItemTemplate">
      <Setter.Value>
        <DataTemplate>
          <Rectangle Stroke="{DynamicResource RibbonTopBorderBrush}">
            <Shape.Fill>
              <SolidColorBrush Color="{Binding}"/>
            </Shape.Fill>
          </Rectangle>
        </DataTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBox}">
          <Border Background="{TemplateBinding Control.Background}" HorizontalAlignment="Stretch">
            <UniformGrid HorizontalAlignment="Left" IsItemsHost="true"
                         Columns="{Binding Columns, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Fluent:ColorGallery}}}"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ItemsControl.ItemContainerStyle">
      <Setter.Value>
        <Style TargetType="{x:Type ListBoxItem}">
          <Setter Property="Control.Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type ListBoxItem}">
                <Grid Background="Transparent">
                  <ContentPresenter Margin="2"
                                    Width="{Binding ChipWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Fluent:ColorGallery}}, FallbackValue=13}"
                                    Height="{Binding ChipHeight, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Fluent:ColorGallery}}, FallbackValue=13}"/>
                  <Border x:Name="hoverBorder" BorderThickness="1"
                          BorderBrush="{DynamicResource ButtonHoverOuterBorderBrush}" Visibility="Collapsed" Margin="2">
                    <Border BorderThickness="1" BorderBrush="{DynamicResource ButtonHoverInnerBorderBrush}"/>
                  </Border>
                  <Border x:Name="selectedBorder" BorderThickness="1"
                          BorderBrush="{DynamicResource ButtonPressedOuterBorderBrush}" Visibility="Collapsed" Margin="2">
                    <Border BorderThickness="1" BorderBrush="{DynamicResource ButtonPressedInnerBorderBrush}"/>
                  </Border>
                </Grid>
                <ControlTemplate.Triggers>
                  <Trigger Property="UIElement.IsMouseOver" Value="true">
                    <Setter TargetName="hoverBorder" Property="UIElement.Visibility" Value="Visible"/>
                  </Trigger>
                  <Trigger Property="ListBoxItem.IsSelected" Value="true">
                    <Setter TargetName="selectedBorder" Property="UIElement.Visibility" Value="Visible"/>
                  </Trigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </Setter.Value>
    </Setter>
  </Style>
  <Fluent:ColorGradientItemTemplateSelector x:Key="ColorGradientItemTemplateSelect"/>
  <DataTemplate x:Key="GradientColorCenterDataTemplate">
    <Border BorderBrush="{DynamicResource RibbonTopBorderBrush}" BorderThickness="1,0,1,0">
      <Border.Background>
        <SolidColorBrush Color="{Binding}"/>
      </Border.Background>
    </Border>
  </DataTemplate>
  <DataTemplate x:Key="GradientColorTopDataTemplate">
    <Border BorderBrush="{DynamicResource RibbonTopBorderBrush}" BorderThickness="1,1,1,0">
      <Border.Background>
        <SolidColorBrush Color="{Binding}"/>
      </Border.Background>
    </Border>
  </DataTemplate>
  <DataTemplate x:Key="GradientColorBottomDataTemplate">
    <Border BorderBrush="{DynamicResource RibbonTopBorderBrush}" BorderThickness="1,0,1,1">
      <Border.Background>
        <SolidColorBrush Color="{Binding}"/>
      </Border.Background>
    </Border>
  </DataTemplate>
  <Style x:Key="ColorGalleryGradientListBox" TargetType="{x:Type ListBox}">
    <Setter Property="Control.Background" Value="{DynamicResource GalleryBackgroundBrush}"/>
    <Setter Property="ItemsControl.ItemTemplateSelector"
            Value="{StaticResource ColorGradientItemTemplateSelect}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBox}">
          <Border Background="{TemplateBinding Control.Background}" HorizontalAlignment="Stretch">
            <UniformGrid HorizontalAlignment="Left" IsItemsHost="true"
                         Columns="{Binding Columns, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Fluent:ColorGallery}}}"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ItemsControl.ItemContainerStyle">
      <Setter.Value>
        <Style TargetType="{x:Type ListBoxItem}">
          <Setter Property="Control.Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type ListBoxItem}">
                <Grid Background="Transparent">
                  <ContentPresenter Margin="2,0,2,0"
                                    Width="{Binding ChipWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Fluent:ColorGallery}}, FallbackValue=13}"
                                    Height="{Binding ChipHeight, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Fluent:ColorGallery}}, FallbackValue=13}"/>
                  <Border x:Name="hoverBorder" BorderThickness="1"
                          BorderBrush="{DynamicResource ButtonHoverOuterBorderBrush}" Visibility="Collapsed" Margin="2,0,2,0">
                    <Border BorderThickness="1" BorderBrush="{DynamicResource ButtonHoverInnerBorderBrush}"/>
                  </Border>
                  <Border x:Name="selectedBorder" BorderThickness="1"
                          BorderBrush="{DynamicResource ButtonPressedOuterBorderBrush}" Visibility="Collapsed"
                          Margin="2,0,2,0">
                    <Border BorderThickness="1" BorderBrush="{DynamicResource ButtonPressedInnerBorderBrush}"/>
                  </Border>
                </Grid>
                <ControlTemplate.Triggers>
                  <Trigger Property="UIElement.IsMouseOver" Value="true">
                    <Setter TargetName="hoverBorder" Property="UIElement.Visibility" Value="Visible"/>
                  </Trigger>
                  <Trigger Property="ListBoxItem.IsSelected" Value="true">
                    <Setter TargetName="selectedBorder" Property="UIElement.Visibility" Value="Visible"/>
                  </Trigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
          <Style.Triggers>
            <Trigger Property="ContentControl.Content">
              <Trigger.Value>
                <Color/>
              </Trigger.Value>
              <Setter Property="UIElement.Opacity" Value="0"/>
              <Setter Property="UIElement.IsHitTestVisible" Value="false"/>
            </Trigger>
          </Style.Triggers>
        </Style>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type Fluent:ColorGallery}">
    <Setter Property="Fluent:ColorGallery.ChipWidth" Value="13"/>
    <Setter Property="Fluent:ColorGallery.ChipHeight" Value="13"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Fluent:ColorGallery}">
          <StackPanel KeyboardNavigation.DirectionalNavigation="Contained">
            <Fluent:MenuItem x:Name="PART_AutomaticColor" Header="Automatic">
              <MenuItem.Icon>
                <Rectangle Width="16" Height="16" Stroke="{DynamicResource RibbonTopBorderBrush}" Fill="Black"
                           Margin="-2,0,0,0"/>
              </MenuItem.Icon>
            </Fluent:MenuItem>
            <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
              <StackPanel Background="{TemplateBinding Control.Background}" ClipToBounds="true" Margin="0,1,0,1"
                          KeyboardNavigation.DirectionalNavigation="Contained">
                <Fluent:GroupSeparatorMenuItem x:Name="themeColorsSeparator" Header="Theme Colors"/>
                <ListBox x:Name="PART_ThemeColorsListBox" KeyboardNavigation.DirectionalNavigation="Contained"
                         Style="{StaticResource ColorGalleryListBox}"
                         ItemsSource="{Binding ThemeColors, RelativeSource={RelativeSource TemplatedParent}}"/>
                <ListBox x:Name="PART_ThemeGradientColorsListBox" KeyboardNavigation.DirectionalNavigation="Contained"
                         Style="{StaticResource ColorGalleryGradientListBox}"
                         ItemsSource="{Binding ThemeGradients, RelativeSource={RelativeSource TemplatedParent}}"/>
                <Fluent:GroupSeparatorMenuItem x:Name="standardColorsSeparator" Header="Standard Colors"/>
                <ListBox x:Name="PART_StandardColorsListBox" KeyboardNavigation.DirectionalNavigation="Contained"
                         ItemsSource="{x:Static Fluent:ColorGallery.StandardThemeColors}"
                         Style="{StaticResource ColorGalleryListBox}"/>
                <ListBox x:Name="PART_StandardGradientColorsListBox" KeyboardNavigation.DirectionalNavigation="Contained"
                         Style="{StaticResource ColorGalleryGradientListBox}"
                         ItemsSource="{Binding StandardGradients, RelativeSource={RelativeSource TemplatedParent}}"/>
                <Fluent:GroupSeparatorMenuItem x:Name="recentColorsSeparator" Header="Recent Colors"/>
                <ListBox x:Name="PART_RecentColorsListBox" KeyboardNavigation.DirectionalNavigation="Contained"
                         ItemsSource="{x:Static Fluent:ColorGallery.RecentColors}"
                         Style="{StaticResource ColorGalleryListBox}"/>
              </StackPanel>
            </ScrollViewer>
            <Fluent:MenuItem x:Name="PART_NoColor" Header="No Color">
              <MenuItem.Icon>
                <Rectangle Width="16" Height="16" Stroke="{DynamicResource RibbonTopBorderBrush}" Fill="Transparent"
                           Margin="-2,0,0,0"/>
              </MenuItem.Icon>
            </Fluent:MenuItem>
            <Separator x:Name="separator">
              <Control.Template>
                <ControlTemplate>
                  <Rectangle Width="Auto" Height="1" Fill="#FFE2E4E7"/>
                </ControlTemplate>
              </Control.Template>
            </Separator>
            <Fluent:MenuItem x:Name="PART_MoreColors" Header="More Colors..."
                             Icon="pack://application:,,,/Fluent;component/Themes/Office2010/Images/MoreColors.png"/>
          </StackPanel>
          <ControlTemplate.Triggers>
            <Trigger Property="Fluent:ColorGallery.IsAutomaticColorButtonVisible" Value="false">
              <Setter TargetName="PART_AutomaticColor" Property="UIElement.Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="Fluent:ColorGallery.IsNoColorButtonVisible" Value="false">
              <Setter TargetName="PART_NoColor" Property="UIElement.Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="Fluent:ColorGallery.IsMoreColorsButtonVisible" Value="false">
              <Setter TargetName="PART_MoreColors" Property="UIElement.Visibility" Value="Collapsed"/>
              <Setter TargetName="separator" Property="UIElement.Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="Fluent:ColorGallery.Mode" Value="HighlightColors">
              <Setter Property="Fluent:ColorGallery.ChipWidth" Value="26"/>
              <Setter Property="Fluent:ColorGallery.ChipHeight" Value="26"/>
              <Setter TargetName="themeColorsSeparator" Property="UIElement.Visibility" Value="Collapsed"/>
              <Setter TargetName="standardColorsSeparator" Property="UIElement.Visibility" Value="Collapsed"/>
              <Setter TargetName="recentColorsSeparator" Property="UIElement.Visibility" Value="Collapsed"/>
              <Setter TargetName="PART_ThemeColorsListBox" Property="UIElement.Visibility" Value="Collapsed"/>
              <Setter TargetName="PART_RecentColorsListBox" Property="UIElement.Visibility" Value="Collapsed"/>
              <Setter TargetName="PART_StandardGradientColorsListBox" Property="UIElement.Visibility" Value="Collapsed"/>
              <Setter TargetName="PART_ThemeGradientColorsListBox" Property="UIElement.Visibility" Value="Collapsed"/>
              <Setter Property="Fluent:ColorGallery.Columns" Value="5"/>
              <Setter Value="{StaticResource HightlightColorGalleryListBox}" TargetName="PART_StandardColorsListBox"
                      Property="FrameworkElement.Style"/>
              <Setter Value="{x:Static Fluent:ColorGallery.HighlightColors}" TargetName="PART_StandardColorsListBox"
                      Property="ItemsControl.ItemsSource"/>
            </Trigger>
            <Trigger Property="Fluent:ColorGallery.Mode" Value="StandardColors">
              <Setter Property="Fluent:ColorGallery.ChipWidth" Value="20"/>
              <Setter Property="Fluent:ColorGallery.ChipHeight" Value="20"/>
              <Setter TargetName="themeColorsSeparator" Property="UIElement.Visibility" Value="Collapsed"/>
              <Setter TargetName="standardColorsSeparator" Property="UIElement.Visibility" Value="Collapsed"/>
              <Setter TargetName="recentColorsSeparator" Property="UIElement.Visibility" Value="Collapsed"/>
              <Setter TargetName="PART_ThemeColorsListBox" Property="UIElement.Visibility" Value="Collapsed"/>
              <Setter TargetName="PART_RecentColorsListBox" Property="UIElement.Visibility" Value="Collapsed"/>
              <Setter TargetName="PART_StandardColorsListBox" Property="UIElement.Visibility" Value="Collapsed"/>
              <Setter TargetName="PART_ThemeGradientColorsListBox" Property="UIElement.Visibility" Value="Collapsed"/>
              <Setter Property="Fluent:ColorGallery.Columns" Value="5"/>
              <Setter Property="Fluent:ColorGallery.StandardColorGridRows" Value="6"/>
              <Setter Value="{x:Static Fluent:ColorGallery.StandardColors}"
                      TargetName="PART_StandardGradientColorsListBox" Property="ItemsControl.ItemsSource"/>
            </Trigger>
            <DataTrigger Value="0" Binding="{Binding ThemeColors.Count, RelativeSource={RelativeSource Self}}">
              <Setter TargetName="themeColorsSeparator" Property="UIElement.Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Value="0" Binding="{Binding Count, Source={x:Static Fluent:ColorGallery.RecentColors}}">
              <Setter TargetName="recentColorsSeparator" Property="UIElement.Visibility" Value="Collapsed"/>
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>