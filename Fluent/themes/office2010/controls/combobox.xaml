<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Fluent="clr-namespace:Fluent"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="pack://application:,,,/Fluent;component\Themes\Office2010\Controls\ScrollBarWhite.xaml"/>
    <ResourceDictionary Source="pack://application:,,,/Fluent;component\Themes\Office2010\Controls\TextBox.xaml"/>
    <ResourceDictionary Source="pack://application:,,,/Fluent;component\Themes\Office2010\Controls\RibbonScrollViewer.xaml"/>
  </ResourceDictionary.MergedDictionaries>
  <Fluent:ObjectToImageConverter x:Key="StringToImageConvert"/>
  <Style x:Key="RibbonComboButtonStyle" TargetType="{x:Type Fluent:ToggleButton}">
    <Setter Property="Control.Template" Value="{DynamicResource RibbonComboButtonControlTemplate}"/>
    <Setter Property="FrameworkElement.Height" Value="66"/>
    <Setter Property="FrameworkElement.Width" Value="Auto"/>
    <Setter Property="Control.FontSize" Value="{DynamicResource DefaultFontSize}"/>
    <Setter Property="Control.FontFamily" Value="{DynamicResource DefaultFontFamily}"/>
    <Setter Property="Control.Foreground" Value="{DynamicResource DefaultFontBrush}"/>
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{DynamicResource ControlStyleEmptyFocus}"/>
  </Style>
  <ControlTemplate x:Key="RibbonComboButtonControlTemplate" TargetType="{x:Type Fluent:ToggleButton}">
    <Border x:Name="border" BorderThickness="1" CornerRadius="0"
            Background="{DynamicResource ButtonBackgroundBrush}"
            BorderBrush="{DynamicResource ButtonBorderBrush}" Height="Auto" HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch">
      <Border x:Name="border1" Height="Auto" BorderBrush="{DynamicResource TransparentBrush}" BorderThickness="1"
              CornerRadius="0" Background="{DynamicResource TransparentBrush}">
        <Grid Height="Auto">
          <Rectangle x:Name="rectangle" StrokeThickness="0" Visibility="Collapsed">
            <Shape.Fill>
              <RadialGradientBrush Center="0.503,1" GradientOrigin="0.503,1" RadiusY="0.202">
                <GradientStop Color="#7FFFFFFF" Offset="0"/>
                <GradientStop Offset="1"/>
              </RadialGradientBrush>
            </Shape.Fill>
          </Rectangle>
        </Grid>
      </Border>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="ButtonBase.IsPressed" Value="true">
        <Setter TargetName="border" Value="{DynamicResource ButtonPressedOuterBorderBrush}"
                Property="Border.BorderBrush"/>
        <Setter TargetName="border" Value="{DynamicResource ButtonPressedOuterBackgroundBrush}"
                Property="Border.Background"/>
        <Setter TargetName="border1" Value="{DynamicResource ButtonPressedInnerBackgroundBrush}"
                Property="Border.Background"/>
        <Setter TargetName="border1" Value="{DynamicResource ButtonPressedInnerBorderBrush}"
                Property="Border.BorderBrush"/>
      </Trigger>
      <Trigger Property="ToggleButton.IsChecked" Value="True">
        <Setter TargetName="border" Value="{DynamicResource ButtonPressedOuterBorderBrush}"
                Property="Border.BorderBrush"/>
        <Setter TargetName="border" Value="{DynamicResource ButtonPressedInnerBorderBrush}"
                Property="Border.Background"/>
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="false"/>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="UIElement.IsMouseOver" Value="true"/>
          <Condition Property="ButtonBase.IsPressed" Value="false"/>
          <Condition Property="ToggleButton.IsChecked" Value="False"/>
        </MultiTrigger.Conditions>
        <Setter TargetName="border1" Value="{DynamicResource ButtonHoverInnerBorderBrush}"
                Property="Border.BorderBrush"/>
        <Setter TargetName="border1" Value="{DynamicResource ButtonHoverInnerBackgroundBrush}"
                Property="Border.Background"/>
        <Setter TargetName="border" Value="{DynamicResource ButtonHoverOuterBackgroundBrush}"
                Property="Border.Background"/>
        <Setter TargetName="border" Value="{DynamicResource ButtonHoverOuterBorderBrush}"
                Property="Border.BorderBrush"/>
        <Setter TargetName="rectangle" Property="UIElement.Visibility" Value="Visible"/>
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <GroupStyle x:Key="ComboBoxGroupStyle">
    <GroupStyle.ContainerStyle>
      <Style TargetType="{x:Type GroupItem}">
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type GroupItem}">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid Height="21" Background="#FFF0F2F5" ColumnSpan="2" VerticalAlignment="Top">
                  <TextBlock Margin="7,0" VerticalAlignment="Center" HorizontalAlignment="Left" FontWeight="Bold"
                             TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Text="{Binding Name}"/>
                </Grid>
                <Image x:Name="iconImage" Grid.Column="0" Stretch="None" Margin="4,21,4,0" VerticalAlignment="Top"
                       HorizontalAlignment="Center">
                  <Image.Source>
                    <MultiBinding Converter="{StaticResource GroupIconConverter}">
                      <Binding Path="Items"/>
                      <Binding ElementName="layoutRoot"/>
                    </MultiBinding>
                  </Image.Source>
                </Image>
                <Path x:Name="menuLine" Stretch="Fill" Stroke="#FFE2E4E7" HorizontalAlignment="Right" Width="1"
                      Height="Auto" Data="M 0,0 L 0,1 " Visibility="Visible" Margin="0,21,0,0" Fill="{x:Null}"/>
                <ItemsPresenter Grid.Column="1" Margin="0,21,0,0"/>
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger SourceName="iconImage" Value="{x:Null}" Property="Image.Source">
                  <Setter TargetName="menuLine" Property="UIElement.Visibility" Value="Collapsed"/>
                  <Setter TargetName="iconImage" Property="UIElement.Visibility" Value="Collapsed"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
    </GroupStyle.ContainerStyle>
  </GroupStyle>
  <Style TargetType="{x:Type Fluent:ComboBox}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Fluent:ComboBox}">
          <FrameworkTemplate.Resources>
            <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource ScrollBarWhite}"/>
            <Style TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource ScrollViewerStyle}"/>
          </FrameworkTemplate.Resources>
          <Border Width="Auto" Background="#00000000" Height="22">
            <Grid Width="Auto" Height="Auto" Background="#00000000">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
              </Grid.ColumnDefinitions>
              <StackPanel x:Name="stackPanel" Orientation="Horizontal" Grid.ColumnSpan="1" HorizontalAlignment="Stretch"
                          Margin="0,0,4,0">
                <ContentPresenter x:Name="iconImage" Width="16" Height="16" VerticalAlignment="Center" Margin="3,0,0,0"
                                  Content="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource StringToImageConvert}}"/>
                <TextBlock x:Name="textBlock" Text="{TemplateBinding Fluent:ComboBox.Header}" TextWrapping="Wrap"
                           VerticalAlignment="Center" Margin="5,0,0,0"/>
              </StackPanel>
              <Border x:Name="PART_ContentBorder" Height="Auto" BorderThickness="1,1,1,1"
                      BorderBrush="{DynamicResource TextBoxBorderBrush}"
                      Background="{DynamicResource TextBoxBackgroundBrush}" Grid.Column="1" Grid.ColumnSpan="1"
                      Width="{TemplateBinding Fluent:ComboBox.InputWidth}" HorizontalAlignment="Right">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="13"/>
                  </Grid.ColumnDefinitions>
                  <Border x:Name="border1" Grid.ColumnSpan="1" Grid.Column="1" BorderThickness="1,0,0,0"
                          BorderBrush="{DynamicResource TextBoxHoverBorderBrush}" Visibility="Collapsed"
                          Background="{DynamicResource TextBoxBackgroundBrush}"/>
                  <Fluent:ToggleButton x:Name="ToggleButton" IsDefinitive="false" Focusable="false" ClickMode="Press" Height="Auto"
                                       HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Column="1" Margin="0,-1,-1,-1"
                                       Style="{DynamicResource RibbonComboButtonStyle}" Opacity="0" CanAddToQuickAccessToolBar="false"
                                       IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                  <ContentPresenter x:Name="PART_ContentSite" Margin="3" IsHitTestVisible="false"
                                    Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                                    ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                    ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}"
                                    VerticalAlignment="Top" HorizontalAlignment="Left"/>
                  <Image x:Name="PART_SelectedImage" Margin="0" Stretch="None" IsHitTestVisible="false"
                         VerticalAlignment="Top" HorizontalAlignment="Left" Visibility="Collapsed" Width="Auto"
                         Height="Auto"/>
                  <TextBox x:Name="PART_EditableTextBox" Focusable="true" HorizontalAlignment="Stretch"
                           VerticalAlignment="Stretch" TextWrapping="NoWrap" BorderThickness="0,0,0,0"
                           IsReadOnly="{TemplateBinding ComboBox.IsReadOnly}"
                           Background="{DynamicResource TextBoxBackgroundBrush}" Visibility="Hidden"/>
                  <Path x:Name="path" Grid.Column="1" Data="M 0,0 L 2,0 1,1 Z" Fill="{DynamicResource DefaultFontBrush}"
                        Margin="0" StrokeStartLineCap="Round" Stretch="Fill" StrokeEndLineCap="Round"
                        Stroke="{DynamicResource DefaultFontBrush}" StrokeThickness="1" StrokeMiterLimit="10"
                        StrokeLineJoin="Round" Width="5" Height="4" StrokeDashCap="Round" IsHitTestVisible="false"/>
                </Grid>
              </Border>
              <Popup x:Name="PART_Popup" Placement="Bottom" IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                     AllowsTransparency="true" Focusable="false" PopupAnimation="Fade" Margin="0,0,-4,0"
                     VerticalAlignment="Top" Grid.ColumnSpan="2"
                     PlacementTarget="{Binding ElementName=PART_ContentBorder}">
                <FrameworkElement.Resources>
                  <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource ScrollBarWhite}"/>
                </FrameworkElement.Resources>
                <Grid Name="DropDown" SnapsToDevicePixels="true" Margin="0" VerticalAlignment="Top">
                  <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="10"/>
                  </Grid.RowDefinitions>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="10"/>
                  </Grid.ColumnDefinitions>
                  <Rectangle HorizontalAlignment="Left" VerticalAlignment="Top" Width="4" Height="4" Grid.Row="1"
                             Grid.Column="1" StrokeThickness="0" Margin="-1,-1,0,0">
                    <Shape.Fill>
                      <RadialGradientBrush RadiusX="0.984" Center="0.017,0.002" GradientOrigin="0.017,0.002" RadiusY="1">
                        <GradientStop Color="#3F000000" Offset="0"/>
                        <GradientStop Color="#00000000" Offset="1"/>
                      </RadialGradientBrush>
                    </Shape.Fill>
                  </Rectangle>
                  <Rectangle StrokeThickness="0" HorizontalAlignment="Left" Margin="-1,3,0,0" VerticalAlignment="Top" Width="4"
                             Height="4" Grid.Column="1" Grid.Row="0">
                    <Shape.Fill>
                      <RadialGradientBrush Center="0.032,1.01" GradientOrigin="0.032,1.01" RadiusX="0.984" RadiusY="1">
                        <GradientStop Color="#3F000000" Offset="0"/>
                        <GradientStop Color="#00000000" Offset="1"/>
                      </RadialGradientBrush>
                    </Shape.Fill>
                  </Rectangle>
                  <Rectangle StrokeThickness="0" HorizontalAlignment="Left" Margin="3,-1,0,0" VerticalAlignment="Top" Width="4"
                             Height="4" Grid.Column="0" Grid.Row="1">
                    <Shape.Fill>
                      <RadialGradientBrush Center="0.996,0.027" GradientOrigin="0.996,0.027" RadiusX="0.984" RadiusY="1">
                        <GradientStop Color="#3F000000" Offset="0"/>
                        <GradientStop Color="#00000000" Offset="1"/>
                      </RadialGradientBrush>
                    </Shape.Fill>
                  </Rectangle>
                  <Rectangle StrokeThickness="0" HorizontalAlignment="Stretch" Margin="7,-1,1,0" VerticalAlignment="Top"
                             Width="Auto" Height="4" Grid.Column="0" Grid.Row="1">
                    <Shape.Fill>
                      <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" MappingMode="RelativeToBoundingBox">
                        <GradientStop Color="#3F000000" Offset="0"/>
                        <GradientStop Color="#00000000" Offset="1"/>
                      </LinearGradientBrush>
                    </Shape.Fill>
                  </Rectangle>
                  <Rectangle StrokeThickness="0" HorizontalAlignment="Left" Margin="-1,7,0,1" VerticalAlignment="Stretch"
                             Width="4" Height="Auto" Grid.Column="1" Grid.Row="0">
                    <Shape.Fill>
                      <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5" MappingMode="RelativeToBoundingBox">
                        <GradientStop Color="#3F000000" Offset="0"/>
                        <GradientStop Color="#00000000" Offset="1"/>
                      </LinearGradientBrush>
                    </Shape.Fill>
                  </Rectangle>
                  <Border x:Name="PART_DropDownBorder" SnapsToDevicePixels="true"
                          Background="{DynamicResource ContextMenuBarBackgroundBrush}"
                          BorderBrush="{DynamicResource ContextMenuBarBorderBrush}" BorderThickness="1" CornerRadius="1"
                          Grid.ColumnSpan="1" HorizontalAlignment="Stretch" VerticalAlignment="Top"
                          MinWidth="{Binding ActualWidth, ElementName=PART_ContentBorder}">
                    <Grid Width="Auto" Height="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Top"
                          KeyboardNavigation.DirectionalNavigation="Cycle">
                      <Border VerticalAlignment="Stretch" Width="Auto" Height="Auto"
                              BorderBrush="{DynamicResource ContextMenuBarBackgroundBrush}" BorderThickness="1" CornerRadius="1"/>
                      <Grid Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Top">
                        <Grid.RowDefinitions>
                          <RowDefinition Height="*"/>
                          <RowDefinition Height="Auto"/>
                          <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Rectangle Stretch="Fill" Stroke="#FFE2E4E7" HorizontalAlignment="Left" Margin="24,0,0,0" Width="1"
                                   Height="Auto" Grid.RowSpan="2" Visibility="Visible" VerticalAlignment="Stretch" Fill="{x:Null}"/>
                        <Grid x:Name="PART_MenuPanel" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                              VerticalAlignment="Top">
                          <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                          </Grid.RowDefinitions>
                          <ScrollViewer x:Name="PART_ScrollViewer" Focusable="false" BorderBrush="{DynamicResource GalleryBorderBrush}"
                                        Margin="1" SnapsToDevicePixels="true" KeyboardNavigation.DirectionalNavigation="None"
                                        VerticalAlignment="Stretch" VerticalScrollBarVisibility="Visible" BorderThickness="0,0,0,1">
                            <Fluent:GalleryPanel x:Name="PART_GalleryPanel" Background="White" GroupBy="{TemplateBinding Fluent:ComboBox.GroupBy}"
                                                 IsItemsHost="true" KeyboardNavigation.DirectionalNavigation="None"
                                                 ItemHeight="{TemplateBinding Fluent:ComboBox.ItemHeight}" Orientation="Vertical"
                                                 ItemContainerGenerator="{Binding ItemContainerGenerator, RelativeSource={RelativeSource TemplatedParent}}"/>
                          </ScrollViewer>
                          <ContentPresenter x:Name="menuPresenter" ContentSource="Menu" Grid.Row="1"
                                            KeyboardNavigation.DirectionalNavigation="None" VerticalAlignment="Top"/>
                        </Grid>
                        <Border x:Name="resizeBorder" HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="11"
                                BorderBrush="{DynamicResource ContextMenuBarResizeBorderBrush}" BorderThickness="0,1,0,0"
                                Grid.Row="2" CornerRadius="0,0,1,1"
                                Background="{DynamicResource ContextMenuBarResizeBackgoundBrush}">
                          <Grid>
                            <Thumb x:Name="PART_ResizeVerticalThumb" HorizontalAlignment="Stretch" Margin="0,0,0,-90" Width="Auto"
                                   Height="10" VerticalAlignment="Top" Cursor="SizeNS"
                                   Template="{DynamicResource ResizeVerticalThumbControlTemplate}"/>
                            <Thumb x:Name="PART_ResizeBothThumb" HorizontalAlignment="Right" Margin="0,0,0,-90" Width="10" Height="10"
                                   VerticalAlignment="Top" Cursor="SizeNWSE"
                                   Template="{DynamicResource ResizeBothThumbControlTemplate}"/>
                          </Grid>
                        </Border>
                      </Grid>
                    </Grid>
                  </Border>
                </Grid>
              </Popup>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Value="{x:Null}" Property="Fluent:ComboBox.Menu">
              <Setter TargetName="PART_ScrollViewer" Property="Control.BorderThickness" Value="0"/>
            </Trigger>
            <Trigger Property="Fluent:ComboBox.ResizeMode" Value="None">
              <Setter TargetName="resizeBorder" Property="UIElement.Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="Fluent:ComboBox.ResizeMode" Value="Both">
              <Setter TargetName="PART_ResizeVerticalThumb" Property="UIElement.Visibility" Value="Collapsed"/>
              <Setter TargetName="PART_ResizeBothThumb" Property="UIElement.Visibility" Value="Visible"/>
              <Setter TargetName="resizeBorder" Property="UIElement.Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="Fluent:ComboBox.ResizeMode" Value="Vertical">
              <Setter TargetName="PART_ResizeBothThumb" Property="UIElement.Visibility" Value="Collapsed"/>
              <Setter TargetName="PART_ResizeVerticalThumb" Property="UIElement.Visibility" Value="Visible"/>
              <Setter TargetName="resizeBorder" Property="UIElement.Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Value="{x:Null}" Property="Fluent:ComboBox.Icon">
              <Setter TargetName="iconImage" Property="UIElement.Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="Fluent:ComboBox.InputWidth" Value="NaN">
              <Setter TargetName="PART_ContentBorder" Property="FrameworkElement.HorizontalAlignment" Value="Stretch"/>
            </Trigger>
            <Trigger Property="Fluent:ComboBox.Size" Value="Middle">
              <Setter TargetName="textBlock" Property="UIElement.Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="Fluent:ComboBox.Size" Value="Small">
              <Setter TargetName="stackPanel" Property="UIElement.Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="PART_EditableTextBox" Property="UIElement.IsEnabled" Value="false"/>
              <Setter TargetName="PART_ContentBorder" Value="{DynamicResource TextBoxDisabledBackgroundBrush}"
                      Property="Border.Background"/>
              <Setter TargetName="PART_ContentBorder" Value="{DynamicResource TextBoxDisabledBorderBrush}"
                      Property="Border.BorderBrush"/>
              <Setter TargetName="border1" Value="{DynamicResource TextBoxDisabledBackgroundBrush}"
                      Property="Border.BorderBrush"/>
              <Setter TargetName="PART_EditableTextBox" Value="{DynamicResource TextBoxDisabledBackgroundBrush}"
                      Property="Control.BorderBrush"/>
              <Setter TargetName="iconImage" Property="UIElement.Opacity" Value="0.5"/>
              <Setter TargetName="textBlock" Property="UIElement.Opacity" Value="0.5"/>
              <Setter TargetName="iconImage" Property="UIElement.Effect">
                <Setter.Value>
                  <Fluent:GrayscaleEffect/>
                </Setter.Value>
              </Setter>
              <Setter TargetName="path" Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="border1" Property="UIElement.Visibility" Value="Visible"/>
              <Setter TargetName="PART_ContentBorder" Value="{DynamicResource TextBoxHoverBorderBrush}"
                      Property="Border.BorderBrush"/>
              <Setter TargetName="PART_EditableTextBox" Value="{DynamicResource TextBoxHoverBackgroundBrush}"
                      Property="Control.Background"/>
              <Setter TargetName="border1" Value="{DynamicResource TextBoxHoverBackgroundBrush}"
                      Property="Border.Background"/>
              <Setter TargetName="PART_ContentBorder" Value="{DynamicResource TextBoxHoverBackgroundBrush}"
                      Property="Border.Background"/>
              <Setter TargetName="ToggleButton" Property="UIElement.Opacity" Value="1"/>
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocusWithin" Value="true">
              <Setter TargetName="border1" Property="UIElement.Visibility" Value="Visible"/>
              <Setter TargetName="PART_ContentBorder" Value="{DynamicResource TextBoxHoverBorderBrush}"
                      Property="Border.BorderBrush"/>
              <Setter TargetName="PART_EditableTextBox" Value="{DynamicResource TextBoxHoverBackgroundBrush}"
                      Property="Control.Background"/>
              <Setter TargetName="border1" Value="{DynamicResource TextBoxHoverBackgroundBrush}"
                      Property="Border.Background"/>
              <Setter TargetName="PART_ContentBorder" Value="{DynamicResource TextBoxHoverBackgroundBrush}"
                      Property="Border.Background"/>
            </Trigger>
            <Trigger Property="ItemsControl.HasItems" Value="false">
              <Setter TargetName="PART_DropDownBorder" Property="FrameworkElement.MinHeight" Value="95"/>
            </Trigger>
            <Trigger Property="ItemsControl.IsGrouping" Value="true">
              <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </Trigger>
            <Trigger Property="ComboBox.IsEditable" Value="true">
              <Setter Property="Control.IsTabStop" Value="false"/>
              <Setter TargetName="PART_EditableTextBox" Property="UIElement.Visibility" Value="Visible"/>
              <Setter TargetName="PART_ContentSite" Property="UIElement.Visibility" Value="Hidden"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{DynamicResource ControlStyleEmptyFocus}"/>
    <Setter Property="ComboBox.IsEditable" Value="true"/>
    <Setter Property="ItemsControl.ItemContainerStyle" Value="{DynamicResource EditableComboBoxItemStyle}"/>
    <Style.Triggers>
      <Trigger Property="ComboBox.IsEditable" Value="false">
        <Setter Property="ItemsControl.ItemContainerStyle" Value="{DynamicResource NonEditableComboBoxItemStyle}"/>
      </Trigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>