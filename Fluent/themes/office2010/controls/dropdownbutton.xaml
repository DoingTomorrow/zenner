<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Fluent="clr-namespace:Fluent"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="pack://application:,,,/Fluent;component\Themes\Office2010\Controls\MenuSeparator.xaml"/>
  </ResourceDictionary.MergedDictionaries>
  <Fluent:ObjectToImageConverter x:Key="StringToImageConvert"/>
  <Style x:Key="RibbonDropDownButtonStyle" TargetType="{x:Type Fluent:DropDownButton}">
    <Setter Property="Control.Template" Value="{DynamicResource RibbonDropDownButtonControlTemplate}"/>
    <Setter Property="FrameworkElement.Height" Value="66"/>
    <Setter Property="FrameworkElement.Width" Value="Auto"/>
    <Setter Property="Control.FontSize" Value="{DynamicResource DefaultFontSize}"/>
    <Setter Property="Control.FontFamily" Value="{DynamicResource DefaultFontFamily}"/>
    <Setter Property="Control.Foreground" Value="{DynamicResource DefaultFontBrush}"/>
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{DynamicResource ControlStyleEmptyFocus}"/>
    <Setter Property="UIElement.SnapsToDevicePixels" Value="false"/>
    <Style.Triggers>
      <Trigger Property="Fluent:DropDownButton.Size" Value="Large">
        <Setter Property="FrameworkElement.Height" Value="66"/>
      </Trigger>
      <Trigger Property="Fluent:DropDownButton.Size" Value="Middle">
        <Setter Property="FrameworkElement.Height" Value="22"/>
      </Trigger>
      <Trigger Property="Fluent:DropDownButton.Size" Value="Small">
        <Setter Property="FrameworkElement.Height" Value="22"/>
        <Setter Property="FrameworkElement.Width" Value="31"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <ControlTemplate x:Key="RibbonDropDownButtonControlTemplate" TargetType="{x:Type Fluent:DropDownButton}">
    <FrameworkTemplate.Resources>
      <Style BasedOn="{StaticResource MenuSeparatorStyle}" TargetType="{x:Type Separator}"/>
    </FrameworkTemplate.Resources>
    <Grid>
      <Border x:Name="PART_ButtonBorder" BorderThickness="1" CornerRadius="2"
              Background="{DynamicResource TransparentBrush}" BorderBrush="{DynamicResource TransparentBrush}"
              Height="Auto" HorizontalAlignment="Left" VerticalAlignment="Stretch">
        <Border x:Name="border1" Height="Auto" BorderBrush="{DynamicResource TransparentBrush}" BorderThickness="1"
                CornerRadius="2" Background="{DynamicResource TransparentBrush}">
          <Grid Height="Auto">
            <Rectangle x:Name="rectangle" StrokeThickness="0" Visibility="Collapsed">
              <Shape.Fill>
                <RadialGradientBrush Center="0.503,1" GradientOrigin="0.503,1" RadiusY="0.202">
                  <GradientStop Color="#7FFFFFFF" Offset="0"/>
                  <GradientStop Offset="1"/>
                </RadialGradientBrush>
              </Shape.Fill>
            </Rectangle>
            <StackPanel x:Name="stackPanel" Width="Auto" Orientation="Vertical">
              <ContentPresenter x:Name="iconImage" HorizontalAlignment="Center" Height="32" VerticalAlignment="Center" Width="32"
                                Margin="3,2" SnapsToDevicePixels="true" RenderOptions.BitmapScalingMode="NearestNeighbor"
                                Content="{Binding LargeIcon, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource StringToImageConvert}}"/>
              <Fluent:TwoLineLabel x:Name="controlLabel" Text="{TemplateBinding Fluent:DropDownButton.Header}"
                                   Style="{DynamicResource TwoLineLabelStyle}" HorizontalAlignment="Center" VerticalAlignment="Center"
                                   Margin="2,-2,2,2" HasGlyph="{TemplateBinding Fluent:DropDownButton.HasTriangle}"/>
            </StackPanel>
          </Grid>
        </Border>
      </Border>
      <Popup x:Name="PART_Popup" Placement="Bottom"
             IsOpen="{TemplateBinding Fluent:DropDownButton.IsDropDownOpen}" AllowsTransparency="true"
             Focusable="false" PopupAnimation="Fade" Margin="0,0,-4,0" VerticalAlignment="Top"
             Grid.ColumnSpan="2">
        <Grid Name="DropDown" Focusable="false" SnapsToDevicePixels="true" Margin="0" VerticalAlignment="Top">
          <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="10"/>
          </Grid.RowDefinitions>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="10"/>
          </Grid.ColumnDefinitions>
          <Rectangle HorizontalAlignment="Left" VerticalAlignment="Top" Width="4" Height="4" Grid.Row="1"
                     Grid.Column="1" StrokeThickness="0" Margin="-1,-1,0,0">
            <Shape.Fill>
              <RadialGradientBrush RadiusX="0.984" Center="0.017,0.002" GradientOrigin="0.017,0.002" RadiusY="1">
                <GradientStop Color="#3F000000" Offset="0"/>
                <GradientStop Color="#00000000" Offset="1"/>
              </RadialGradientBrush>
            </Shape.Fill>
          </Rectangle>
          <Rectangle StrokeThickness="0" HorizontalAlignment="Left" Margin="-1,3,0,0" VerticalAlignment="Top" Width="4"
                     Height="4" Grid.Column="1" Grid.Row="0">
            <Shape.Fill>
              <RadialGradientBrush Center="0.032,1.01" GradientOrigin="0.032,1.01" RadiusX="0.984" RadiusY="1">
                <GradientStop Color="#3F000000" Offset="0"/>
                <GradientStop Color="#00000000" Offset="1"/>
              </RadialGradientBrush>
            </Shape.Fill>
          </Rectangle>
          <Rectangle StrokeThickness="0" HorizontalAlignment="Left" Margin="3,-1,0,0" VerticalAlignment="Top" Width="4"
                     Height="4" Grid.Column="0" Grid.Row="1">
            <Shape.Fill>
              <RadialGradientBrush Center="0.996,0.027" GradientOrigin="0.996,0.027" RadiusX="0.984" RadiusY="1">
                <GradientStop Color="#3F000000" Offset="0"/>
                <GradientStop Color="#00000000" Offset="1"/>
              </RadialGradientBrush>
            </Shape.Fill>
          </Rectangle>
          <Rectangle StrokeThickness="0" HorizontalAlignment="Stretch" Margin="7,-1,1,0" VerticalAlignment="Top"
                     Width="Auto" Height="4" Grid.Column="0" Grid.Row="1">
            <Shape.Fill>
              <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" MappingMode="RelativeToBoundingBox">
                <GradientStop Color="#3F000000" Offset="0"/>
                <GradientStop Color="#00000000" Offset="1"/>
              </LinearGradientBrush>
            </Shape.Fill>
          </Rectangle>
          <Rectangle StrokeThickness="0" HorizontalAlignment="Left" Margin="-1,7,0,1" VerticalAlignment="Stretch"
                     Width="4" Height="Auto" Grid.Column="1" Grid.Row="0">
            <Shape.Fill>
              <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5" MappingMode="RelativeToBoundingBox">
                <GradientStop Color="#3F000000" Offset="0"/>
                <GradientStop Color="#00000000" Offset="1"/>
              </LinearGradientBrush>
            </Shape.Fill>
          </Rectangle>
          <Border x:Name="PART_DropDownBorder" Focusable="false"
                  MinWidth="{TemplateBinding FrameworkElement.ActualWidth}" SnapsToDevicePixels="true"
                  Background="{DynamicResource ContextMenuBarBackgroundBrush}"
                  BorderBrush="{DynamicResource ContextMenuBarBorderBrush}" BorderThickness="1" CornerRadius="1"
                  Grid.ColumnSpan="1" HorizontalAlignment="Stretch" VerticalAlignment="Top">
            <Grid Focusable="false" Width="Auto" Height="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Top">
              <Border Focusable="false" VerticalAlignment="Top" Width="Auto" Height="Auto"
                      BorderBrush="{DynamicResource ContextMenuBarBackgroundBrush}" BorderThickness="1" CornerRadius="1"/>
              <Grid Focusable="false" Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Top">
                <Grid.RowDefinitions>
                  <RowDefinition Height="*"/>
                  <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Rectangle Focusable="false" Stretch="Fill" Stroke="#FFE2E4E7" HorizontalAlignment="Left" Margin="24,0,0,0"
                           Width="1" Height="Auto" Grid.RowSpan="2" Visibility="Visible" VerticalAlignment="Stretch"
                           Fill="{x:Null}"/>
                <ScrollViewer x:Name="PART_ScrollViewer" Style="{DynamicResource MenuScrollViewer}" Focusable="false" Margin="1"
                              MaxHeight="{TemplateBinding Fluent:DropDownButton.MaxDropDownHeight}" SnapsToDevicePixels="true"
                              VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Hidden">
                  <Fluent:MenuPanel x:Name="PART_MenuPanel" Focusable="false" IsItemsHost="true"
                                    KeyboardNavigation.DirectionalNavigation="Local"/>
                </ScrollViewer>
                <Border x:Name="resizeBorder" Focusable="false" HorizontalAlignment="Stretch" VerticalAlignment="Top"
                        Height="11" BorderBrush="{DynamicResource ContextMenuBarResizeBorderBrush}"
                        BorderThickness="0,1,0,0" Grid.Row="1" CornerRadius="0,0,1,1"
                        Background="{DynamicResource ContextMenuBarResizeBackgoundBrush}">
                  <Grid>
                    <Thumb x:Name="PART_ResizeVerticalThumb" HorizontalAlignment="Stretch" Margin="0,0,0,-90" Width="Auto"
                           Height="10" VerticalAlignment="Top" Cursor="SizeNS"
                           Template="{DynamicResource ResizeVerticalThumbControlTemplate}"/>
                    <Thumb x:Name="PART_ResizeBothThumb" HorizontalAlignment="Right" Margin="0,0,0,-90" Width="10" Height="10"
                           VerticalAlignment="Top" Cursor="SizeNWSE"
                           Template="{DynamicResource ResizeBothThumbControlTemplate}"/>
                  </Grid>
                </Border>
              </Grid>
            </Grid>
          </Border>
        </Grid>
      </Popup>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="Fluent:DropDownButton.ResizeMode" Value="None">
        <Setter TargetName="resizeBorder" Property="UIElement.Visibility" Value="Collapsed"/>
      </Trigger>
      <Trigger Property="Fluent:DropDownButton.ResizeMode" Value="Both">
        <Setter TargetName="PART_ResizeVerticalThumb" Property="UIElement.Visibility" Value="Collapsed"/>
        <Setter TargetName="PART_ResizeBothThumb" Property="UIElement.Visibility" Value="Visible"/>
        <Setter TargetName="resizeBorder" Property="UIElement.Visibility" Value="Visible"/>
      </Trigger>
      <Trigger Property="Fluent:DropDownButton.ResizeMode" Value="Vertical">
        <Setter TargetName="PART_ResizeBothThumb" Property="UIElement.Visibility" Value="Collapsed"/>
        <Setter TargetName="PART_ResizeVerticalThumb" Property="UIElement.Visibility" Value="Visible"/>
        <Setter TargetName="resizeBorder" Property="UIElement.Visibility" Value="Visible"/>
      </Trigger>
      <Trigger Property="Fluent:DropDownButton.Size" Value="Small">
        <Setter TargetName="stackPanel" Property="StackPanel.Orientation" Value="Horizontal"/>
        <Setter TargetName="iconImage"
                Value="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource StringToImageConvert}}"
                Property="ContentPresenter.Content"/>
        <Setter TargetName="controlLabel" Property="Fluent:TwoLineLabel.HasTwoLines" Value="false"/>
        <Setter TargetName="controlLabel" Property="Fluent:TwoLineLabel.Text" Value=""/>
        <Setter TargetName="iconImage" Property="FrameworkElement.Width" Value="16"/>
        <Setter TargetName="iconImage" Property="FrameworkElement.Height" Value="16"/>
        <Setter TargetName="iconImage" Property="FrameworkElement.Margin" Value="1,0,0,0"/>
        <Setter TargetName="controlLabel" Property="FrameworkElement.Margin" Value="-2,-1,2,1"/>
        <Setter TargetName="controlLabel" Property="FrameworkElement.Width" Value="10"/>
        <Setter TargetName="controlLabel" Property="FrameworkElement.VerticalAlignment" Value="Center"/>
      </Trigger>
      <Trigger Property="Fluent:DropDownButton.Size" Value="Middle">
        <Setter TargetName="stackPanel" Property="StackPanel.Orientation" Value="Horizontal"/>
        <Setter TargetName="iconImage"
                Value="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource StringToImageConvert}}"
                Property="ContentPresenter.Content"/>
        <Setter TargetName="stackPanel" Property="FrameworkElement.Width" Value="Auto"/>
        <Setter TargetName="iconImage" Property="FrameworkElement.VerticalAlignment" Value="Center"/>
        <Setter TargetName="controlLabel" Property="Fluent:TwoLineLabel.HasTwoLines" Value="false"/>
        <Setter TargetName="controlLabel" Property="FrameworkElement.Margin" Value="2,-1,2,1"/>
        <Setter TargetName="PART_ButtonBorder" Property="FrameworkElement.VerticalAlignment" Value="Stretch"/>
        <Setter TargetName="iconImage" Property="FrameworkElement.Width" Value="16"/>
        <Setter TargetName="iconImage" Property="FrameworkElement.Height" Value="16"/>
        <Setter TargetName="iconImage" Property="FrameworkElement.Margin" Value="1,0,2,0"/>
        <Setter TargetName="controlLabel" Property="FrameworkElement.VerticalAlignment" Value="Center"/>
      </Trigger>
      <Trigger Property="Fluent:DropDownButton.IsDropDownOpen" Value="true">
        <Setter TargetName="PART_ButtonBorder" Value="{DynamicResource ButtonPressedOuterBorderBrush}"
                Property="Border.BorderBrush"/>
        <Setter TargetName="PART_ButtonBorder" Value="{DynamicResource ButtonPressedOuterBackgroundBrush}"
                Property="Border.Background"/>
        <Setter TargetName="border1" Value="{DynamicResource ButtonPressedInnerBackgroundBrush}"
                Property="Border.Background"/>
        <Setter TargetName="border1" Value="{DynamicResource ButtonPressedInnerBorderBrush}"
                Property="Border.BorderBrush"/>
        <Setter TargetName="rectangle" Property="UIElement.Visibility" Value="Visible"/>
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="false">
        <Setter TargetName="iconImage" Property="UIElement.Opacity" Value="0.5"/>
        <Setter TargetName="controlLabel" Property="UIElement.Opacity" Value="0.5"/>
        <Setter TargetName="iconImage" Property="UIElement.Effect">
          <Setter.Value>
            <Fluent:GrayscaleEffect/>
          </Setter.Value>
        </Setter>
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="UIElement.IsMouseOver" Value="true"/>
          <Condition Property="Fluent:DropDownButton.IsDropDownOpen" Value="false"/>
        </MultiTrigger.Conditions>
        <Setter TargetName="border1" Value="{DynamicResource ButtonHoverInnerBorderBrush}"
                Property="Border.BorderBrush"/>
        <Setter TargetName="border1" Value="{DynamicResource ButtonHoverInnerBackgroundBrush}"
                Property="Border.Background"/>
        <Setter TargetName="PART_ButtonBorder" Value="{DynamicResource ButtonHoverOuterBackgroundBrush}"
                Property="Border.Background"/>
        <Setter TargetName="PART_ButtonBorder" Value="{DynamicResource ButtonHoverOuterBorderBrush}"
                Property="Border.BorderBrush"/>
        <Setter TargetName="rectangle" Property="UIElement.Visibility" Value="Visible"/>
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="UIElement.IsFocused" Value="true"/>
          <Condition Property="Fluent:DropDownButton.IsDropDownOpen" Value="false"/>
        </MultiTrigger.Conditions>
        <Setter TargetName="border1" Value="{DynamicResource ButtonHoverInnerBorderBrush}"
                Property="Border.BorderBrush"/>
        <Setter TargetName="border1" Value="{DynamicResource ButtonHoverInnerBackgroundBrush}"
                Property="Border.Background"/>
        <Setter TargetName="PART_ButtonBorder" Value="{DynamicResource ButtonHoverOuterBackgroundBrush}"
                Property="Border.Background"/>
        <Setter TargetName="PART_ButtonBorder" Value="{DynamicResource ButtonHoverOuterBorderBrush}"
                Property="Border.BorderBrush"/>
        <Setter TargetName="rectangle" Property="UIElement.Visibility" Value="Visible"/>
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
</ResourceDictionary>