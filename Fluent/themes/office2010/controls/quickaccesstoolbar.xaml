<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Fluent="clr-namespace:Fluent"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006">
  <Style x:Key="ToolbarDropDownButtonStyle" TargetType="{x:Type Fluent:DropDownButton}">
    <Setter Property="Control.Template" Value="{DynamicResource ToolbarDropDownButtonControlTemplate}"/>
    <Setter Property="FrameworkElement.Height" Value="22"/>
    <Setter Property="FrameworkElement.Width" Value="13"/>
    <Setter Property="Control.FontSize" Value="{DynamicResource DefaultFontSize}"/>
    <Setter Property="Control.FontFamily" Value="{DynamicResource DefaultFontFamily}"/>
    <Setter Property="Control.Foreground" Value="{DynamicResource DefaultFontBrush}"/>
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{DynamicResource ControlStyleEmptyFocus}"/>
  </Style>
  <ControlTemplate x:Key="ToolbarDropDownButtonControlTemplate" TargetType="{x:Type Fluent:DropDownButton}">
    <Grid>
      <Border x:Name="PART_ButtonBorder" BorderThickness="1" CornerRadius="2"
              Background="{DynamicResource TransparentBrush}" BorderBrush="{DynamicResource TransparentBrush}"
              Height="22" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="13">
        <Border x:Name="border1" Height="Auto" BorderBrush="{DynamicResource TransparentBrush}" BorderThickness="1"
                CornerRadius="2" Background="{DynamicResource TransparentBrush}">
          <Grid x:Name="grid" Margin="0" Background="#00000000">
            <Rectangle x:Name="rectangle" StrokeThickness="0" Visibility="Collapsed" Margin="0">
              <Shape.Fill>
                <RadialGradientBrush Center="0.503,1" GradientOrigin="0.503,1" RadiusY="0.202">
                  <GradientStop Color="#7FFFFFFF" Offset="0"/>
                  <GradientStop Offset="1"/>
                </RadialGradientBrush>
              </Shape.Fill>
            </Rectangle>
            <StackPanel x:Name="stackPanel" Width="Auto" Orientation="Horizontal" VerticalAlignment="Top" Margin="-1,4,0,0"
                        Background="#00000000">
              <Image x:Name="iconImage" HorizontalAlignment="Left" Height="8" Stretch="None" VerticalAlignment="Top"
                     Source="{TemplateBinding Fluent:DropDownButton.LargeIcon}" Width="8" Margin="-3,0,2,0"/>
            </StackPanel>
          </Grid>
        </Border>
      </Border>
      <Popup x:Name="PART_Popup" Placement="Bottom"
             IsOpen="{TemplateBinding Fluent:DropDownButton.IsDropDownOpen}" AllowsTransparency="true"
             Focusable="false" PopupAnimation="Fade" Margin="0,0,-4,0" VerticalAlignment="Top"
             Grid.ColumnSpan="2">
        <Grid Name="DropDown" SnapsToDevicePixels="true" Margin="0" VerticalAlignment="Top">
          <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="10"/>
          </Grid.RowDefinitions>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="10"/>
          </Grid.ColumnDefinitions>
          <Rectangle HorizontalAlignment="Left" VerticalAlignment="Top" Width="4" Height="4" Grid.Row="1"
                     Grid.Column="1" StrokeThickness="0" Margin="-1,-1,0,0">
            <Shape.Fill>
              <RadialGradientBrush RadiusX="0.984" Center="0.017,0.002" GradientOrigin="0.017,0.002" RadiusY="1">
                <GradientStop Color="#3F000000" Offset="0"/>
                <GradientStop Color="#00000000" Offset="1"/>
              </RadialGradientBrush>
            </Shape.Fill>
          </Rectangle>
          <Rectangle StrokeThickness="0" HorizontalAlignment="Left" Margin="-1,3,0,0" VerticalAlignment="Top" Width="4"
                     Height="4" Grid.Column="1" Grid.Row="0">
            <Shape.Fill>
              <RadialGradientBrush Center="0.032,1.01" GradientOrigin="0.032,1.01" RadiusX="0.984" RadiusY="1">
                <GradientStop Color="#3F000000" Offset="0"/>
                <GradientStop Color="#00000000" Offset="1"/>
              </RadialGradientBrush>
            </Shape.Fill>
          </Rectangle>
          <Rectangle StrokeThickness="0" HorizontalAlignment="Left" Margin="3,-1,0,0" VerticalAlignment="Top" Width="4"
                     Height="4" Grid.Column="0" Grid.Row="1">
            <Shape.Fill>
              <RadialGradientBrush Center="0.996,0.027" GradientOrigin="0.996,0.027" RadiusX="0.984" RadiusY="1">
                <GradientStop Color="#3F000000" Offset="0"/>
                <GradientStop Color="#00000000" Offset="1"/>
              </RadialGradientBrush>
            </Shape.Fill>
          </Rectangle>
          <Rectangle StrokeThickness="0" HorizontalAlignment="Stretch" Margin="7,-1,1,0" VerticalAlignment="Top"
                     Width="Auto" Height="4" Grid.Column="0" Grid.Row="1">
            <Shape.Fill>
              <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" MappingMode="RelativeToBoundingBox">
                <GradientStop Color="#3F000000" Offset="0"/>
                <GradientStop Color="#00000000" Offset="1"/>
              </LinearGradientBrush>
            </Shape.Fill>
          </Rectangle>
          <Rectangle StrokeThickness="0" HorizontalAlignment="Left" Margin="-1,7,0,1" VerticalAlignment="Stretch"
                     Width="4" Height="Auto" Grid.Column="1" Grid.Row="0">
            <Shape.Fill>
              <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5" MappingMode="RelativeToBoundingBox">
                <GradientStop Color="#3F000000" Offset="0"/>
                <GradientStop Color="#00000000" Offset="1"/>
              </LinearGradientBrush>
            </Shape.Fill>
          </Rectangle>
          <Border x:Name="PART_DropDownBorder" MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                  SnapsToDevicePixels="true" Background="{DynamicResource ContextMenuBarBackgroundBrush}"
                  BorderBrush="{DynamicResource ContextMenuBarBorderBrush}" BorderThickness="1" CornerRadius="1"
                  Grid.ColumnSpan="1" HorizontalAlignment="Stretch" VerticalAlignment="Top">
            <Grid Width="Auto" Height="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Top">
              <Border VerticalAlignment="Top" Width="Auto" Height="Auto"
                      BorderBrush="{DynamicResource ContextMenuBarBackgroundBrush}" BorderThickness="1" CornerRadius="1"/>
              <Grid Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Top">
                <Grid.RowDefinitions>
                  <RowDefinition Height="*"/>
                  <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Rectangle Stretch="Fill" Stroke="#FFE2E4E7" HorizontalAlignment="Left" Margin="24,0,0,0" Width="1"
                           Height="Auto" Grid.RowSpan="2" Visibility="Visible" VerticalAlignment="Stretch" Fill="{x:Null}"/>
                <ScrollViewer Margin="1" MaxHeight="{TemplateBinding Fluent:DropDownButton.MaxDropDownHeight}"
                              SnapsToDevicePixels="true" VerticalScrollBarVisibility="Auto"
                              HorizontalScrollBarVisibility="Hidden">
                  <Fluent:MenuPanel x:Name="PART_MenuPanel" IsItemsHost="true" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                </ScrollViewer>
                <Border x:Name="resizeBorder" HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="11"
                        BorderBrush="{DynamicResource ContextMenuBarResizeBorderBrush}" BorderThickness="0,1,0,0"
                        Grid.Row="1" CornerRadius="0,0,1,1"
                        Background="{DynamicResource ContextMenuBarResizeBackgoundBrush}">
                  <Grid>
                    <Thumb x:Name="PART_ResizeVerticalThumb" HorizontalAlignment="Stretch" Margin="0,0,0,-90" Width="Auto"
                           Height="10" VerticalAlignment="Top" Cursor="SizeNS"
                           Template="{DynamicResource ResizeVerticalThumbControlTemplate}"/>
                    <Thumb x:Name="PART_ResizeBothThumb" HorizontalAlignment="Right" Margin="0,0,0,-90" Width="10" Height="10"
                           VerticalAlignment="Top" Cursor="SizeNWSE"
                           Template="{DynamicResource ResizeBothThumbControlTemplate}"/>
                  </Grid>
                </Border>
              </Grid>
            </Grid>
          </Border>
        </Grid>
      </Popup>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="Fluent:DropDownButton.ResizeMode" Value="None">
        <Setter TargetName="resizeBorder" Property="UIElement.Visibility" Value="Collapsed"/>
      </Trigger>
      <Trigger Property="Fluent:DropDownButton.ResizeMode" Value="Both">
        <Setter TargetName="PART_ResizeVerticalThumb" Property="UIElement.Visibility" Value="Collapsed"/>
        <Setter TargetName="PART_ResizeBothThumb" Property="UIElement.Visibility" Value="Visible"/>
        <Setter TargetName="resizeBorder" Property="UIElement.Visibility" Value="Visible"/>
      </Trigger>
      <Trigger Property="Fluent:DropDownButton.ResizeMode" Value="Vertical">
        <Setter TargetName="PART_ResizeBothThumb" Property="UIElement.Visibility" Value="Collapsed"/>
        <Setter TargetName="PART_ResizeVerticalThumb" Property="UIElement.Visibility" Value="Visible"/>
        <Setter TargetName="resizeBorder" Property="UIElement.Visibility" Value="Visible"/>
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="false">
        <Setter TargetName="iconImage" Property="UIElement.Opacity" Value="0.25"/>
      </Trigger>
      <Trigger Property="Fluent:DropDownButton.Size" Value="Small">
        <Setter TargetName="stackPanel" Property="StackPanel.Orientation" Value="Horizontal"/>
        <Setter TargetName="iconImage" Value="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}"
                Property="Image.Source"/>
        <Setter TargetName="iconImage" Property="FrameworkElement.Width" Value="16"/>
        <Setter TargetName="iconImage" Property="FrameworkElement.Height" Value="16"/>
        <Setter TargetName="iconImage" Property="FrameworkElement.Margin" Value="2"/>
        <Setter TargetName="grid" Property="FrameworkElement.Margin" Value="0"/>
      </Trigger>
      <Trigger Property="Fluent:DropDownButton.Size" Value="Middle">
        <Setter TargetName="stackPanel" Property="StackPanel.Orientation" Value="Horizontal"/>
        <Setter TargetName="iconImage" Value="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}"
                Property="Image.Source"/>
        <Setter TargetName="stackPanel" Property="FrameworkElement.Width" Value="Auto"/>
        <Setter TargetName="iconImage" Property="FrameworkElement.VerticalAlignment" Value="Center"/>
        <Setter TargetName="PART_ButtonBorder" Property="FrameworkElement.VerticalAlignment" Value="Stretch"/>
        <Setter TargetName="iconImage" Property="FrameworkElement.Width" Value="16"/>
        <Setter TargetName="iconImage" Property="FrameworkElement.Height" Value="16"/>
        <Setter TargetName="iconImage" Property="FrameworkElement.Margin" Value="2"/>
      </Trigger>
      <Trigger Property="Fluent:DropDownButton.IsDropDownOpen" Value="true">
        <Setter TargetName="PART_ButtonBorder" Value="{DynamicResource ButtonPressedOuterBorderBrush}"
                Property="Border.BorderBrush"/>
        <Setter TargetName="PART_ButtonBorder" Value="{DynamicResource ButtonPressedOuterBackgroundBrush}"
                Property="Border.Background"/>
        <Setter TargetName="border1" Value="{DynamicResource ButtonPressedInnerBackgroundBrush}"
                Property="Border.Background"/>
        <Setter TargetName="border1" Value="{DynamicResource ButtonPressedInnerBorderBrush}"
                Property="Border.BorderBrush"/>
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="UIElement.IsMouseOver" Value="true"/>
          <Condition Property="Fluent:DropDownButton.IsDropDownOpen" Value="false"/>
        </MultiTrigger.Conditions>
        <Setter TargetName="border1" Value="{DynamicResource ButtonHoverInnerBorderBrush}"
                Property="Border.BorderBrush"/>
        <Setter TargetName="border1" Value="{DynamicResource ButtonHoverInnerBackgroundBrush}"
                Property="Border.Background"/>
        <Setter TargetName="PART_ButtonBorder" Value="{DynamicResource ButtonHoverOuterBackgroundBrush}"
                Property="Border.Background"/>
        <Setter TargetName="PART_ButtonBorder" Value="{DynamicResource ButtonHoverOuterBorderBrush}"
                Property="Border.BorderBrush"/>
        <Setter TargetName="rectangle" Property="UIElement.Visibility" Value="Visible"/>
        <Setter TargetName="rectangle" Property="FrameworkElement.Margin" Value="0"/>
        <Setter TargetName="grid" Property="FrameworkElement.Margin" Value="0"/>
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="UIElement.IsFocused" Value="true"/>
          <Condition Property="Fluent:DropDownButton.IsDropDownOpen" Value="false"/>
        </MultiTrigger.Conditions>
        <Setter TargetName="border1" Value="{DynamicResource ButtonHoverInnerBorderBrush}"
                Property="Border.BorderBrush"/>
        <Setter TargetName="border1" Value="{DynamicResource ButtonHoverInnerBackgroundBrush}"
                Property="Border.Background"/>
        <Setter TargetName="PART_ButtonBorder" Value="{DynamicResource ButtonHoverOuterBackgroundBrush}"
                Property="Border.Background"/>
        <Setter TargetName="PART_ButtonBorder" Value="{DynamicResource ButtonHoverOuterBorderBrush}"
                Property="Border.BorderBrush"/>
        <Setter TargetName="rectangle" Property="UIElement.Visibility" Value="Visible"/>
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="QuickAccessToolbarStyle" TargetType="{x:Type Fluent:QuickAccessToolBar}">
    <Setter Property="Control.Template" Value="{DynamicResource QuickAccessToolbarControlTemplate}"/>
    <Setter Property="FocusManager.IsFocusScope" Value="false"/>
  </Style>
  <ControlTemplate x:Key="QuickAccessToolbarControlTemplate" TargetType="{x:Type Fluent:QuickAccessToolBar}">
    <DockPanel x:Name="PART_RootPanel">
      <ContentControl x:Name="menuContentControl" DockPanel.Dock="Right" HorizontalAlignment="Right" Focusable="false">
        <Fluent:DropDownButton x:Name="PART_MenuDownButton" CanAddToQuickAccessToolBar="false" Width="13"
                               HorizontalAlignment="Right" VerticalAlignment="Stretch"
                               Style="{DynamicResource ToolbarDropDownButtonStyle}" Height="22" DockPanel.Dock="Right"
                               IsEnabled="{TemplateBinding UIElement.IsEnabled}"
                               Icon="pack://application:,,,/Fluent;Component/Themes/Office2010/Images/QuickAccessToolBarDropDown.png"
                               Size="Small"
                               ToolTip="{Binding Source={x:Static Fluent:Ribbon.Localization}, Path=QuickAccessToolBarDropDownButtonTooltip, Mode=OneWay}">
          <Fluent:GroupSeparatorMenuItem Style="{DynamicResource MenuGroupSeparatorStyle}"
                                         Header="{Binding Source={x:Static Fluent:Ribbon.Localization}, Path=QuickAccessToolBarMenuHeader, Mode=OneWay}"/>
          <StackPanel x:Name="PART_MenuPanel"/>
          <Separator x:Name="menuSeparator" Style="{DynamicResource MenuSeparatorStyle}"/>
          <Fluent:MenuItem x:Name="PART_ShowBelow"
                           Header="{Binding Source={x:Static Fluent:Ribbon.Localization}, Path=QuickAccessToolBarMenuShowBelow, Mode=OneWay}"/>
          <Fluent:MenuItem x:Name="PART_ShowAbove" Visibility="Collapsed"
                           Header="{Binding Source={x:Static Fluent:Ribbon.Localization}, Path=QuickAccessToolBarMenuShowAbove, Mode=OneWay}"/>
        </Fluent:DropDownButton>
      </ContentControl>
      <Fluent:DropDownButton x:Name="PART_ToolbarDownButton" HorizontalAlignment="Right" Width="13" Visibility="Collapsed"
                             VerticalAlignment="Stretch" Style="{DynamicResource ToolbarDropDownButtonStyle}" Height="22"
                             DockPanel.Dock="Right" Fluent:KeyTip.Keys="00" Size="Small"
                             IsEnabled="{TemplateBinding UIElement.IsEnabled}"
                             Icon="pack://application:,,,/Fluent;Component/Themes/Office2010/Images/QuickAccessToolBarExtender.png"
                             ToolTip="{Binding Source={x:Static Fluent:Ribbon.Localization}, Path=QuickAccessToolBarMoreControlsButtonTooltip, Mode=OneWay}">
        <FrameworkElement.ContextMenu>
          <ContextMenu Style="{DynamicResource EmptyContextMenuStyle}"/>
        </FrameworkElement.ContextMenu>
        <StackPanel Orientation="Horizontal" Background="{DynamicResource QuickAccessToolbarPopupBackgrondBrush}"
                    Width="Auto" Height="26" Margin="-1">
          <StackPanel x:Name="PART_ToolBarOverflowPanel" Orientation="Horizontal" HorizontalAlignment="Left" Width="Auto"
                      Height="Auto" VerticalAlignment="Center" Margin="1,0,0,0"/>
          <Label x:Name="popupContentControl" VerticalAlignment="Center" HorizontalAlignment="Left" Width="13"
                 Height="22" Focusable="false" Padding="0" Margin="1,0" Background="{x:Null}"/>
        </StackPanel>
      </Fluent:DropDownButton>
      <Rectangle x:Name="rectangle" Fill="Black" Stroke="White" RadiusX="1" RadiusY="1" HorizontalAlignment="Right"
                 Width="3" Height="15" Opacity="0.5" VerticalAlignment="Stretch" DockPanel.Dock="Right"/>
      <Rectangle x:Name="rectangle1" Fill="Black" Stroke="White" Width="3" Height="15" RadiusX="1" RadiusY="1"
                 HorizontalAlignment="Left" Opacity="0.5" VerticalAlignment="Stretch" DockPanel.Dock="Left"/>
      <StackPanel x:Name="PART_ToolBarPanel" Orientation="Horizontal" Width="Auto" Height="Auto"
                  VerticalAlignment="Stretch" FocusManager.IsFocusScope="false"/>
    </DockPanel>
    <ControlTemplate.Triggers>
      <Trigger Property="Fluent:QuickAccessToolBar.CanQuickAccessLocationChanging" Value="false">
        <Setter TargetName="PART_ShowBelow" Property="UIElement.Visibility" Value="Collapsed"/>
        <Setter TargetName="PART_ShowAbove" Property="UIElement.Visibility" Value="Collapsed"/>
        <Setter TargetName="menuSeparator" Property="UIElement.Visibility" Value="Collapsed"/>
      </Trigger>
      <Trigger Property="Fluent:QuickAccessToolBar.ShowAboveRibbon" Value="false">
        <Setter TargetName="PART_ShowBelow" Property="UIElement.Visibility" Value="Collapsed"/>
        <Setter TargetName="PART_ShowAbove" Property="UIElement.Visibility" Value="Visible"/>
        <Setter TargetName="rectangle" Property="UIElement.Visibility" Value="Collapsed"/>
        <Setter TargetName="rectangle1" Property="UIElement.Visibility" Value="Collapsed"/>
      </Trigger>
      <Trigger Property="Fluent:QuickAccessToolBar.HasOverflowItems" Value="true">
        <Setter TargetName="PART_ToolbarDownButton" Property="UIElement.Visibility" Value="Visible"/>
        <Setter TargetName="popupContentControl" Value="{Binding ElementName=PART_MenuDownButton, Mode=OneWay}"
                Property="ContentControl.Content"/>
        <Setter TargetName="menuContentControl" Value="{x:Null}" Property="ContentControl.Content"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
</ResourceDictionary>