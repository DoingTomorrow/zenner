<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Fluent="clr-namespace:Fluent"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="pack://application:,,,/Fluent;component\Themes\Office2010\Controls\ScrollBarWhite.xaml"/>
    <ResourceDictionary Source="pack://application:,,,/Fluent;component\Themes\Office2010\Controls\RibbonScrollViewer.xaml"/>
  </ResourceDictionary.MergedDictionaries>
  <Fluent:ObjectToImageConverter x:Key="StringToImageConvert"/>
  <Style x:Key="GroupBoxSeparator" TargetType="{x:Type Separator}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Separator}">
          <Border Width="3" Height="55" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="2,5,2,10"
                  BorderThickness="1,0" BorderBrush="{DynamicResource GroupBoxSeparatorBorderBrush}"
                  Background="{DynamicResource GroupBoxSeparatorBackgroundBrush}"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="RibbonGroupBoxStyle" TargetType="{x:Type Fluent:RibbonGroupBox}">
    <Setter Property="Control.Template" Value="{DynamicResource RibbonGroupBoxControlTemplate}"/>
    <Setter Property="FrameworkElement.Width" Value="Auto"/>
    <Setter Property="FrameworkElement.Height" Value="85"/>
    <Setter Property="Control.FontFamily" Value="{DynamicResource DefaultFontFamily}"/>
    <Setter Property="Control.FontSize" Value="{DynamicResource DefaultFontSize}"/>
    <Setter Property="Control.Foreground" Value="{DynamicResource DefaultFontBrush}"/>
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{DynamicResource ControlStyleEmptyFocus}"/>
    <Setter Property="FocusManager.IsFocusScope" Value="false"/>
    <Setter Property="Fluent:RibbonGroupBox.QuickAccessElementStyle">
      <Setter.Value>
        <Style TargetType="{x:Type Fluent:RibbonGroupBox}">
          <Setter Property="Control.Template" Value="{DynamicResource RibbonGroupBoxDropDownButtonControlTemplate}"/>
          <Setter Property="FrameworkElement.Height" Value="22"/>
          <Setter Property="FrameworkElement.Width" Value="22"/>
          <Setter Property="UIElement.Focusable" Value="false"/>
          <Setter Property="Control.FontSize" Value="{DynamicResource DefaultFontSize}"/>
          <Setter Property="Control.FontFamily" Value="{DynamicResource DefaultFontFamily}"/>
          <Setter Property="Control.Foreground" Value="{DynamicResource DefaultFontBrush}"/>
          <Setter Property="FrameworkElement.FocusVisualStyle" Value="{DynamicResource ControlStyleEmptyFocus}"/>
          <Setter Property="UIElement.SnapsToDevicePixels" Value="false"/>
        </Style>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="RibbonGroupBoxDropDownButtonControlTemplate" TargetType="{x:Type Fluent:RibbonGroupBox}">
    <Grid Width="22">
      <Border x:Name="PART_ButtonBorder" BorderThickness="1" CornerRadius="2"
              Background="{DynamicResource TransparentBrush}" BorderBrush="{DynamicResource TransparentBrush}"
              Height="Auto" HorizontalAlignment="Left" VerticalAlignment="Stretch">
        <Border x:Name="border1" Height="Auto" BorderBrush="{DynamicResource TransparentBrush}" BorderThickness="1"
                CornerRadius="2" Background="{DynamicResource TransparentBrush}">
          <Grid Height="Auto">
            <Rectangle x:Name="rectangle" StrokeThickness="0" Visibility="Collapsed">
              <Shape.Fill>
                <RadialGradientBrush Center="0.503,1" GradientOrigin="0.503,1" RadiusY="0.202">
                  <GradientStop Color="#7FFFFFFF" Offset="0"/>
                  <GradientStop Offset="1"/>
                </RadialGradientBrush>
              </Shape.Fill>
            </Rectangle>
            <StackPanel x:Name="stackPanel" Width="Auto" Orientation="Vertical">
              <ContentPresenter x:Name="iconImage" HorizontalAlignment="Center" Height="16" VerticalAlignment="Center" Width="16"
                                Margin="3,2" SnapsToDevicePixels="true" RenderOptions.BitmapScalingMode="NearestNeighbor"
                                Content="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource StringToImageConvert}}"/>
              <Fluent:TwoLineLabel x:Name="controlLabel" Text="{TemplateBinding Fluent:RibbonGroupBox.Header}"
                                   Style="{DynamicResource TwoLineLabelStyle}" HorizontalAlignment="Center" VerticalAlignment="Center"
                                   Margin="2,-2,2,2"/>
            </StackPanel>
          </Grid>
        </Border>
      </Border>
      <Popup x:Name="PART_Popup" Placement="Bottom"
             IsOpen="{TemplateBinding Fluent:RibbonGroupBox.IsDropDownOpen}" AllowsTransparency="true"
             Focusable="false" PopupAnimation="Fade" Margin="0,0,-4,0" VerticalAlignment="Top"
             Grid.ColumnSpan="2">
        <Grid Width="Auto" Height="Auto" Margin="0,20">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="5"/>
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="5"/>
          </Grid.RowDefinitions>
          <Rectangle StrokeThickness="0" HorizontalAlignment="Stretch" Margin="11,-1,1,0" VerticalAlignment="Stretch"
                     Height="Auto" Grid.Column="0" Grid.Row="1" Grid.RowSpan="1" Stroke="{x:Null}">
            <Shape.Fill>
              <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" MappingMode="RelativeToBoundingBox">
                <GradientStop Color="#7F000000" Offset="0"/>
                <GradientStop Offset="1"/>
              </LinearGradientBrush>
            </Shape.Fill>
          </Rectangle>
          <Rectangle StrokeThickness="0" HorizontalAlignment="Stretch" Margin="-1,11,0,1" VerticalAlignment="Stretch"
                     Height="Auto" Grid.Column="1" Grid.Row="0" Grid.RowSpan="1" Stroke="{x:Null}">
            <Shape.Fill>
              <LinearGradientBrush EndPoint="1.002,0" MappingMode="RelativeToBoundingBox">
                <GradientStop Color="#7F000000" Offset="0"/>
                <GradientStop Offset="1"/>
              </LinearGradientBrush>
            </Shape.Fill>
          </Rectangle>
          <Rectangle StrokeThickness="0" HorizontalAlignment="Stretch" Margin="-1,-1,0,0" VerticalAlignment="Stretch"
                     Height="Auto" Grid.Column="1" Grid.Row="1" Grid.RowSpan="1" Stroke="{x:Null}">
            <Shape.Fill>
              <RadialGradientBrush Center="-0.003,0.011" GradientOrigin="-0.003,0.011" RadiusX="1.006" RadiusY="1">
                <GradientStop Color="#7F000000" Offset="0.002"/>
                <GradientStop Offset="1"/>
              </RadialGradientBrush>
            </Shape.Fill>
          </Rectangle>
          <Rectangle StrokeThickness="0" HorizontalAlignment="Stretch" Margin="-1,5,0,0" VerticalAlignment="Top"
                     Height="6" Grid.Column="1" Grid.Row="0" Grid.RowSpan="1" Stroke="{x:Null}">
            <Shape.Fill>
              <RadialGradientBrush Center="-0.01,1.004" GradientOrigin="-0.01,1.004" RadiusX="1.006" RadiusY="1">
                <GradientStop Color="#7F000000" Offset="0.002"/>
                <GradientStop Offset="1"/>
              </RadialGradientBrush>
            </Shape.Fill>
          </Rectangle>
          <Rectangle StrokeThickness="0" HorizontalAlignment="Left" Margin="5,-1,0,0" VerticalAlignment="Stretch"
                     Height="Auto" Grid.Column="0" Grid.Row="1" Grid.RowSpan="1" Width="6" Stroke="{x:Null}">
            <Shape.Fill>
              <RadialGradientBrush Center="1.003,-0.006" GradientOrigin="1.003,-0.006" RadiusX="1.006" RadiusY="1">
                <GradientStop Color="#7F000000" Offset="0.002"/>
                <GradientStop Offset="1"/>
              </RadialGradientBrush>
            </Shape.Fill>
          </Rectangle>
          <Border x:Name="border" Height="Auto" Grid.RowSpan="1" Background="{DynamicResource RibbonBackgoundBrush}"
                  BorderBrush="{DynamicResource RibbonTopBorderBrush}" BorderThickness="1" CornerRadius="1">
            <Grid x:Name="PART_ParentPanel" Margin="0,1,0,2" RowSpan="2" Height="85">
              <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="17"/>
              </Grid.RowDefinitions>
              <Grid x:Name="PART_DownGrid" Margin="0,-2,2,2" Row="1" VerticalAlignment="Bottom" Height="17"
                    MaxWidth="{Binding ActualWidth, ElementName=PART_UpPanel}">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*"/>
                  <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TextBlock HorizontalAlignment="Stretch" VerticalAlignment="Center"
                           Text="{TemplateBinding Fluent:RibbonGroupBox.Header}" TextWrapping="NoWrap" Grid.Row="1"
                           Foreground="{DynamicResource GroupBoxFontBrush}" Margin="2,0" TextTrimming="CharacterEllipsis"
                           TextAlignment="Center"/>
                <Fluent:Button x:Name="PART_DialogLauncherButton" Margin="0,0,1,1" HorizontalAlignment="Stretch" Width="15"
                               Height="14" Grid.Column="1" Focusable="false" IsTabStop="false"
                               Template="{DynamicResource DialogLauncherButtonControlTemplate}" VerticalAlignment="Bottom"
                               Icon="{TemplateBinding Fluent:RibbonGroupBox.LauncherIcon}"
                               Header="{TemplateBinding Fluent:RibbonGroupBox.LauncherText}"
                               Command="{Binding LauncherCommand, RelativeSource={RelativeSource TemplatedParent}}"
                               CommandTarget="{Binding LauncherCommandTarget, RelativeSource={RelativeSource TemplatedParent}}"
                               CommandParameter="{Binding LauncherCommandParameter, RelativeSource={RelativeSource TemplatedParent}}"
                               ToolTip="{Binding LauncherToolTip, RelativeSource={RelativeSource TemplatedParent}}"
                               IsEnabled="{Binding IsLauncherEnabled, RelativeSource={RelativeSource TemplatedParent}}"/>
              </Grid>
              <WrapPanel x:Name="PART_UpPanel" HorizontalAlignment="Left" VerticalAlignment="Stretch" Width="Auto"
                         Height="Auto" IsItemsHost="true" Margin="2,0,4,0" Orientation="Vertical"
                         FocusManager.IsFocusScope="false"/>
            </Grid>
          </Border>
        </Grid>
      </Popup>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="Fluent:RibbonGroupBox.State" Value="Collapsed">
        <Setter TargetName="stackPanel" Property="StackPanel.Orientation" Value="Horizontal"/>
        <Setter TargetName="iconImage"
                Value="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource StringToImageConvert}}"
                Property="ContentPresenter.Content"/>
        <Setter TargetName="controlLabel" Property="Fluent:TwoLineLabel.HasTwoLines" Value="false"/>
        <Setter TargetName="controlLabel" Property="Fluent:TwoLineLabel.Text" Value=""/>
        <Setter TargetName="iconImage" Property="FrameworkElement.Width" Value="16"/>
        <Setter TargetName="iconImage" Property="FrameworkElement.Height" Value="16"/>
        <Setter TargetName="iconImage" Property="FrameworkElement.Margin" Value="1,0,0,0"/>
        <Setter TargetName="controlLabel" Property="FrameworkElement.Margin" Value="-2,-1,2,1"/>
        <Setter TargetName="controlLabel" Property="FrameworkElement.Width" Value="10"/>
        <Setter TargetName="controlLabel" Property="FrameworkElement.VerticalAlignment" Value="Center"/>
      </Trigger>
      <Trigger Property="Fluent:RibbonGroupBox.IsDropDownOpen" Value="true">
        <Setter TargetName="PART_ButtonBorder" Value="{DynamicResource ButtonPressedOuterBorderBrush}"
                Property="Border.BorderBrush"/>
        <Setter TargetName="PART_ButtonBorder" Value="{DynamicResource ButtonPressedOuterBackgroundBrush}"
                Property="Border.Background"/>
        <Setter TargetName="border1" Value="{DynamicResource ButtonPressedInnerBackgroundBrush}"
                Property="Border.Background"/>
        <Setter TargetName="border1" Value="{DynamicResource ButtonPressedInnerBorderBrush}"
                Property="Border.BorderBrush"/>
        <Setter TargetName="rectangle" Property="UIElement.Visibility" Value="Visible"/>
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="false">
        <Setter TargetName="iconImage" Property="UIElement.Opacity" Value="0.5"/>
        <Setter TargetName="controlLabel" Property="UIElement.Opacity" Value="0.5"/>
        <Setter TargetName="iconImage" Property="UIElement.Effect">
          <Setter.Value>
            <Fluent:GrayscaleEffect/>
          </Setter.Value>
        </Setter>
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="UIElement.IsMouseOver" Value="true"/>
          <Condition Property="Fluent:RibbonGroupBox.IsDropDownOpen" Value="false"/>
        </MultiTrigger.Conditions>
        <Setter TargetName="border1" Value="{DynamicResource ButtonHoverInnerBorderBrush}"
                Property="Border.BorderBrush"/>
        <Setter TargetName="border1" Value="{DynamicResource ButtonHoverInnerBackgroundBrush}"
                Property="Border.Background"/>
        <Setter TargetName="PART_ButtonBorder" Value="{DynamicResource ButtonHoverOuterBackgroundBrush}"
                Property="Border.Background"/>
        <Setter TargetName="PART_ButtonBorder" Value="{DynamicResource ButtonHoverOuterBorderBrush}"
                Property="Border.BorderBrush"/>
        <Setter TargetName="rectangle" Property="UIElement.Visibility" Value="Visible"/>
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="UIElement.IsFocused" Value="true"/>
          <Condition Property="Fluent:RibbonGroupBox.IsDropDownOpen" Value="false"/>
        </MultiTrigger.Conditions>
        <Setter TargetName="border1" Value="{DynamicResource ButtonHoverInnerBorderBrush}"
                Property="Border.BorderBrush"/>
        <Setter TargetName="border1" Value="{DynamicResource ButtonHoverInnerBackgroundBrush}"
                Property="Border.Background"/>
        <Setter TargetName="PART_ButtonBorder" Value="{DynamicResource ButtonHoverOuterBackgroundBrush}"
                Property="Border.Background"/>
        <Setter TargetName="PART_ButtonBorder" Value="{DynamicResource ButtonHoverOuterBorderBrush}"
                Property="Border.BorderBrush"/>
        <Setter TargetName="rectangle" Property="UIElement.Visibility" Value="Visible"/>
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="RibbonGroupBoxControlTemplate" TargetType="{x:Type Fluent:RibbonGroupBox}">
    <FrameworkTemplate.Resources>
      <Storyboard x:Key="OnMouseEnter1">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="hoverGrid"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:01" Value="1"/>
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard x:Key="OnMouseLeave1">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="hoverGrid"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:01" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Style TargetType="{x:Type Separator}" BasedOn="{StaticResource GroupBoxSeparator}"/>
      <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource ScrollBarWhite}"/>
      <Style TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource ScrollViewerStyle}"/>
    </FrameworkTemplate.Resources>
    <Grid x:Name="grid2" HorizontalAlignment="Stretch">
      <Grid Background="#00000000">
        <Grid x:Name="hoverGrid" Background="{DynamicResource GroupHoverBrush}" HorizontalAlignment="Stretch"
              Margin="0,0,1,1" VerticalAlignment="Stretch" Width="Auto" Height="Auto" ClipToBounds="true"
              Opacity="0" RowSpan="2">
          <Rectangle StrokeThickness="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="Auto"
                     Fill="{DynamicResource GroupHighlightBrush}" Stroke="{x:Null}"/>
        </Grid>
        <ContentControl x:Name="border1">
          <Grid x:Name="PART_ParentPanel" Margin="0,1,0,2" RowSpan="2" Height="85">
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
              <RowDefinition Height="17"/>
            </Grid.RowDefinitions>
            <Grid x:Name="PART_DownGrid" Margin="0,-2,2,2" Row="1" VerticalAlignment="Bottom" Height="17"
                  MaxWidth="{Binding ActualWidth, ElementName=PART_UpPanel}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
              </Grid.ColumnDefinitions>
              <TextBlock HorizontalAlignment="Stretch" VerticalAlignment="Center"
                         Text="{TemplateBinding Fluent:RibbonGroupBox.Header}" TextWrapping="NoWrap" Grid.Row="1"
                         Foreground="{DynamicResource GroupBoxFontBrush}" Margin="2,0" TextTrimming="CharacterEllipsis"
                         TextAlignment="Center"/>
              <Fluent:Button x:Name="PART_DialogLauncherButton" Margin="0,0,1,1" HorizontalAlignment="Stretch" Width="15"
                             Height="14" Grid.Column="1" Focusable="false" IsTabStop="false"
                             Template="{DynamicResource DialogLauncherButtonControlTemplate}" VerticalAlignment="Bottom"
                             Icon="{TemplateBinding Fluent:RibbonGroupBox.LauncherIcon}"
                             Header="{TemplateBinding Fluent:RibbonGroupBox.LauncherText}"
                             Command="{Binding LauncherCommand, RelativeSource={RelativeSource TemplatedParent}}"
                             CommandTarget="{Binding LauncherCommandTarget, RelativeSource={RelativeSource TemplatedParent}}"
                             CommandParameter="{Binding LauncherCommandParameter, RelativeSource={RelativeSource TemplatedParent}}"
                             ToolTip="{Binding LauncherToolTip, RelativeSource={RelativeSource TemplatedParent}}"
                             IsEnabled="{Binding IsLauncherEnabled, RelativeSource={RelativeSource TemplatedParent}}"/>
            </Grid>
            <WrapPanel x:Name="PART_UpPanel" HorizontalAlignment="Left" VerticalAlignment="Stretch" Width="Auto"
                       Height="Auto" IsItemsHost="true" Margin="2,0,4,0" Orientation="Vertical"
                       FocusManager.IsFocusScope="false"/>
          </Grid>
        </ContentControl>
        <Grid x:Name="grid1" Margin="0" Width="Auto" Height="Auto" Background="#00000000" Visibility="Collapsed"
              RowSpan="2">
          <Fluent:TwoLineLabel HorizontalAlignment="Center" VerticalAlignment="Top"
                               Text="{TemplateBinding Fluent:RibbonGroupBox.Header}" Margin="5,38,5,0" HasGlyph="true"
                               HasTwoLines="true" Style="{DynamicResource TwoLineLabelStyle}"/>
          <Border HorizontalAlignment="Center" VerticalAlignment="Top" Width="31" Height="31" BorderBrush="#FFD0D4D9"
                  BorderThickness="1" Margin="5,3,8,0" CornerRadius="3">
            <Image Source="{TemplateBinding Fluent:RibbonGroupBox.Icon}" Stretch="None"/>
          </Border>
          <Popup x:Name="PART_Popup" Width="Auto" Height="Auto" AllowsTransparency="true" StaysOpen="true"
                 IsOpen="{TemplateBinding Fluent:RibbonGroupBox.IsDropDownOpen}"
                 PlacementTarget="{Binding ElementName=grid1, Mode=OneWay}">
            <Grid Width="Auto" Height="Auto" Margin="0,20">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="5"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="5"/>
              </Grid.RowDefinitions>
              <Rectangle StrokeThickness="0" HorizontalAlignment="Stretch" Margin="11,-1,1,0" VerticalAlignment="Stretch"
                         Height="Auto" Grid.Column="0" Grid.Row="1" Grid.RowSpan="1" Stroke="{x:Null}">
                <Shape.Fill>
                  <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" MappingMode="RelativeToBoundingBox">
                    <GradientStop Color="#7F000000" Offset="0"/>
                    <GradientStop Offset="1"/>
                  </LinearGradientBrush>
                </Shape.Fill>
              </Rectangle>
              <Rectangle StrokeThickness="0" HorizontalAlignment="Stretch" Margin="-1,11,0,1" VerticalAlignment="Stretch"
                         Height="Auto" Grid.Column="1" Grid.Row="0" Grid.RowSpan="1" Stroke="{x:Null}">
                <Shape.Fill>
                  <LinearGradientBrush EndPoint="1.002,0" MappingMode="RelativeToBoundingBox">
                    <GradientStop Color="#7F000000" Offset="0"/>
                    <GradientStop Offset="1"/>
                  </LinearGradientBrush>
                </Shape.Fill>
              </Rectangle>
              <Rectangle StrokeThickness="0" HorizontalAlignment="Stretch" Margin="-1,-1,0,0" VerticalAlignment="Stretch"
                         Height="Auto" Grid.Column="1" Grid.Row="1" Grid.RowSpan="1" Stroke="{x:Null}">
                <Shape.Fill>
                  <RadialGradientBrush Center="-0.003,0.011" GradientOrigin="-0.003,0.011" RadiusX="1.006" RadiusY="1">
                    <GradientStop Color="#7F000000" Offset="0.002"/>
                    <GradientStop Offset="1"/>
                  </RadialGradientBrush>
                </Shape.Fill>
              </Rectangle>
              <Rectangle StrokeThickness="0" HorizontalAlignment="Stretch" Margin="-1,5,0,0" VerticalAlignment="Top"
                         Height="6" Grid.Column="1" Grid.Row="0" Grid.RowSpan="1" Stroke="{x:Null}">
                <Shape.Fill>
                  <RadialGradientBrush Center="-0.01,1.004" GradientOrigin="-0.01,1.004" RadiusX="1.006" RadiusY="1">
                    <GradientStop Color="#7F000000" Offset="0.002"/>
                    <GradientStop Offset="1"/>
                  </RadialGradientBrush>
                </Shape.Fill>
              </Rectangle>
              <Rectangle StrokeThickness="0" HorizontalAlignment="Left" Margin="5,-1,0,0" VerticalAlignment="Stretch"
                         Height="Auto" Grid.Column="0" Grid.Row="1" Grid.RowSpan="1" Width="6" Stroke="{x:Null}">
                <Shape.Fill>
                  <RadialGradientBrush Center="1.003,-0.006" GradientOrigin="1.003,-0.006" RadiusX="1.006" RadiusY="1">
                    <GradientStop Color="#7F000000" Offset="0.002"/>
                    <GradientStop Offset="1"/>
                  </RadialGradientBrush>
                </Shape.Fill>
              </Rectangle>
              <Border x:Name="border" Height="Auto" Grid.RowSpan="1" Background="{DynamicResource RibbonBackgoundBrush}"
                      BorderBrush="{DynamicResource RibbonTopBorderBrush}" BorderThickness="1" CornerRadius="1">
                <ContentControl x:Name="popupContent"/>
              </Border>
            </Grid>
          </Popup>
        </Grid>
        <Border x:Name="separator" BorderBrush="{DynamicResource GroupSeparatorBorderBrush}"
                Background="{DynamicResource GroupSeparatorBackgroundBrush}" HorizontalAlignment="Right"
                VerticalAlignment="Stretch" Width="3" Height="Auto" Grid.RowSpan="2" BorderThickness="1,0"/>
      </Grid>
      <Image x:Name="PART_SnappedImage" Visibility="Collapsed"/>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="Fluent:RibbonGroupBox.State" Value="Collapsed">
        <Setter TargetName="grid1" Property="UIElement.Visibility" Value="Visible"/>
        <Setter TargetName="border1" Property="UIElement.Visibility" Value="Collapsed"/>
        <Setter TargetName="grid2" Property="FrameworkElement.HorizontalAlignment" Value="Left"/>
        <Setter TargetName="border1" Value="{x:Null}" Property="ContentControl.Content"/>
        <Setter TargetName="popupContent" Value="{Binding ElementName=PART_ParentPanel}"
                Property="ContentControl.Content"/>
      </Trigger>
      <EventTrigger RoutedEvent="Mouse.MouseLeave">
        <BeginStoryboard x:Name="OnMouseLeave1_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave1}"/>
      </EventTrigger>
      <EventTrigger RoutedEvent="Mouse.MouseEnter">
        <BeginStoryboard Storyboard="{StaticResource OnMouseEnter1}"/>
      </EventTrigger>
      <Trigger Property="UIElement.IsFocused" Value="true">
        <Setter TargetName="hoverGrid" Property="UIElement.Opacity" Value="1"/>
      </Trigger>
      <Trigger Property="UIElement.IsMouseOver" Value="true">
        <Setter TargetName="hoverGrid" Property="UIElement.Opacity" Value="1"/>
      </Trigger>
      <Trigger Property="Fluent:RibbonGroupBox.IsDropDownOpen" Value="true">
        <Setter TargetName="hoverGrid" Property="UIElement.Opacity" Value="1"/>
      </Trigger>
      <Trigger Property="Fluent:RibbonGroupBox.IsLauncherVisible" Value="false">
        <Setter TargetName="PART_DialogLauncherButton" Property="UIElement.Visibility" Value="Collapsed"/>
      </Trigger>
      <Trigger Property="Fluent:RibbonGroupBox.IsDropDownOpen" Value="true">
        <Setter TargetName="hoverGrid" Property="UIElement.Opacity" Value="1"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="DialogLauncherButtonControlTemplate" TargetType="{x:Type Fluent:Button}">
    <Border x:Name="border" BorderThickness="1" CornerRadius="1,0,0,0"
            Background="{DynamicResource TransparentBrush}" BorderBrush="{DynamicResource TransparentBrush}">
      <Border x:Name="border1" Width="Auto" Height="Auto" BorderThickness="1" CornerRadius="1,0,0,0"
              Background="{DynamicResource TransparentBrush}" BorderBrush="{DynamicResource TransparentBrush}">
        <Image x:Name="image" Height="Auto" HorizontalAlignment="Center" VerticalAlignment="Center"
               Source="pack://application:,,,/Fluent;Component\Themes\Office2010\Images\DialogLauncher.png"
               SnapsToDevicePixels="true" Stretch="None" RenderOptions.BitmapScalingMode="NearestNeighbor"
               RenderTransformOrigin="0.5,0.5">
          <UIElement.RenderTransform>
            <TransformGroup>
              <ScaleTransform/>
              <SkewTransform/>
              <RotateTransform/>
              <TranslateTransform/>
            </TransformGroup>
          </UIElement.RenderTransform>
        </Image>
      </Border>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="FrameworkElement.FlowDirection" Value="RightToLeft">
        <Setter TargetName="image" Property="UIElement.RenderTransform">
          <Setter.Value>
            <TransformGroup>
              <ScaleTransform ScaleX="-1"/>
              <SkewTransform/>
              <RotateTransform/>
              <TranslateTransform/>
            </TransformGroup>
          </Setter.Value>
        </Setter>
      </Trigger>
      <Trigger Property="ButtonBase.IsPressed" Value="true">
        <Setter TargetName="border" Value="{DynamicResource ButtonPressedOuterBackgroundBrush}"
                Property="Border.Background"/>
        <Setter TargetName="border" Value="{DynamicResource ButtonPressedOuterBorderBrush}"
                Property="Border.BorderBrush"/>
        <Setter TargetName="border1" Value="{DynamicResource ButtonPressedInnerBorderBrush}"
                Property="Border.BorderBrush"/>
        <Setter TargetName="border1" Value="{DynamicResource ButtonPressedInnerBackgroundBrush}"
                Property="Border.Background"/>
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="UIElement.IsMouseOver" Value="true"/>
          <Condition Property="ButtonBase.IsPressed" Value="false"/>
        </MultiTrigger.Conditions>
        <Setter TargetName="border" Value="{DynamicResource ButtonHoverOuterBackgroundBrush}"
                Property="Border.Background"/>
        <Setter TargetName="border1" Value="{DynamicResource ButtonHoverInnerBackgroundBrush}"
                Property="Border.Background"/>
        <Setter TargetName="border1" Value="{DynamicResource ButtonHoverInnerBorderBrush}"
                Property="Border.BorderBrush"/>
        <Setter TargetName="border" Value="{DynamicResource ButtonHoverOuterBorderBrush}"
                Property="Border.BorderBrush"/>
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
</ResourceDictionary>