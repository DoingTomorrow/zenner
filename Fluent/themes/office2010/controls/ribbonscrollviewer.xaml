<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ControlTemplate x:Key="ScrollButtonControlTemplate" TargetType="{x:Type RepeatButton}">
    <Border x:Name="border" BorderThickness="1" CornerRadius="2"
            BorderBrush="{DynamicResource ScrollViewerButtonBorderBrush}" Height="Auto"
            HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
            Background="{DynamicResource ScrollViewerButtonBackgroundBrush}">
      <Border x:Name="border1" Height="Auto" BorderBrush="{DynamicResource TransparentBrush}" BorderThickness="1"
              CornerRadius="2" Background="{DynamicResource TransparentBrush}">
        <Grid Height="Auto">
          <Rectangle x:Name="rectangle" StrokeThickness="0" Visibility="Collapsed">
            <Shape.Fill>
              <RadialGradientBrush Center="0.503,1" GradientOrigin="0.503,1" RadiusY="0.202">
                <GradientStop Color="#7FFFFFFF" Offset="0"/>
                <GradientStop Offset="1"/>
              </RadialGradientBrush>
            </Shape.Fill>
          </Rectangle>
          <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </Grid>
      </Border>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="UIElement.IsMouseOver" Value="false"/>
      <Trigger Property="UIElement.IsEnabled" Value="false"/>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="UIElement.IsMouseOver" Value="true"/>
        </MultiTrigger.Conditions>
        <Setter TargetName="border1" Value="{DynamicResource ButtonHoverInnerBorderBrush}"
                Property="Border.BorderBrush"/>
        <Setter TargetName="border1" Value="{DynamicResource ButtonHoverInnerBackgroundBrush}"
                Property="Border.Background"/>
        <Setter TargetName="border" Value="{DynamicResource ButtonHoverOuterBackgroundBrush}"
                Property="Border.Background"/>
        <Setter TargetName="border" Value="{DynamicResource ButtonHoverOuterBorderBrush}"
                Property="Border.BorderBrush"/>
        <Setter TargetName="rectangle" Property="UIElement.Visibility" Value="Visible"/>
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="UIElement.IsKeyboardFocusWithin" Value="true"/>
        </MultiTrigger.Conditions>
        <Setter TargetName="border1" Value="{DynamicResource ButtonHoverInnerBorderBrush}"
                Property="Border.BorderBrush"/>
        <Setter TargetName="border1" Value="{DynamicResource ButtonHoverInnerBackgroundBrush}"
                Property="Border.Background"/>
        <Setter TargetName="border" Value="{DynamicResource ButtonHoverOuterBackgroundBrush}"
                Property="Border.Background"/>
        <Setter TargetName="border" Value="{DynamicResource ButtonHoverOuterBorderBrush}"
                Property="Border.BorderBrush"/>
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="ScrollButtonStyle" TargetType="{x:Type RepeatButton}">
    <Setter Property="Control.Template" Value="{StaticResource ScrollButtonControlTemplate}"/>
    <Setter Property="Control.Foreground" Value="{DynamicResource DefaultFontBrush}"/>
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{DynamicResource ControlStyleEmptyFocus}"/>
  </Style>
  <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter"/>
  <Style x:Key="RibbonScrollViewer" TargetType="{x:Type ScrollViewer}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="FocusManager.IsFocusScope" Value="false"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <Grid x:Name="Grid" Background="{TemplateBinding Control.Background}" IsHitTestVisible="true">
            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Margin="{TemplateBinding Control.Padding}"
                                    Content="{TemplateBinding ContentControl.Content}"
                                    ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                    CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" IsHitTestVisible="true"/>
            <RepeatButton Command="{x:Static ScrollBar.LineLeftCommand}" Focusable="false" HorizontalAlignment="Left"
                          Width="13" Height="Auto" VerticalAlignment="Stretch" Style="{StaticResource ScrollButtonStyle}"
                          CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
              <UIElement.Visibility>
                <MultiBinding FallbackValue="Visibility.Collapsed" Converter="{StaticResource MenuScrollingVisibilityConverter}"
                              ConverterParameter="0">
                  <Binding Path="ComputedHorizontalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                  <Binding Path="HorizontalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                  <Binding Path="ExtentWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
                  <Binding Path="ViewportWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
                </MultiBinding>
              </UIElement.Visibility>
              <Path Fill="Black" Stretch="Fill" StrokeThickness="0" HorizontalAlignment="Center" Margin="0"
                    VerticalAlignment="Center" Width="3" Height="5" Data="M 0,0 L 1,1 1,-1 Z" Stroke="{x:Null}"/>
            </RepeatButton>
            <RepeatButton Command="{x:Static ScrollBar.LineRightCommand}" Focusable="false" HorizontalAlignment="Right"
                          Width="13" Height="Auto" VerticalAlignment="Stretch" Style="{StaticResource ScrollButtonStyle}"
                          CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
              <UIElement.Visibility>
                <MultiBinding FallbackValue="Visibility.Collapsed" Converter="{StaticResource MenuScrollingVisibilityConverter}"
                              ConverterParameter="100">
                  <Binding Path="ComputedHorizontalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                  <Binding Path="HorizontalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                  <Binding Path="ExtentWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
                  <Binding Path="ViewportWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
                </MultiBinding>
              </UIElement.Visibility>
              <Path Fill="Black" Stretch="Fill" StrokeThickness="0" HorizontalAlignment="Center" Margin="0"
                    VerticalAlignment="Center" Width="3" Height="5" Data="M 1,0 L 0,1 0,-1 Z" Stroke="{x:Null}"/>
            </RepeatButton>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
    <Setter Property="UIElement.Focusable" Value="false"/>
  </Style>
  <Style x:Key="RibbonTabScrollViewer" TargetType="{x:Type ScrollViewer}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="FocusManager.IsFocusScope" Value="false"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <Grid x:Name="Grid" Background="{TemplateBinding Control.Background}" IsHitTestVisible="true">
            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Margin="{TemplateBinding Control.Padding}"
                                    Content="{TemplateBinding ContentControl.Content}"
                                    ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                    CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" IsHitTestVisible="true"/>
            <RepeatButton Command="{x:Static ScrollBar.LineLeftCommand}" Focusable="false" HorizontalAlignment="Left"
                          Width="13" Height="Auto" VerticalAlignment="Stretch" Style="{StaticResource ScrollButtonStyle}"
                          Margin="0,7,0,1" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
              <UIElement.Visibility>
                <MultiBinding FallbackValue="Visibility.Collapsed" Converter="{StaticResource MenuScrollingVisibilityConverter}"
                              ConverterParameter="0">
                  <Binding Path="ComputedHorizontalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                  <Binding Path="HorizontalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                  <Binding Path="ExtentWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
                  <Binding Path="ViewportWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
                </MultiBinding>
              </UIElement.Visibility>
              <Path Fill="Black" Stretch="Fill" StrokeThickness="0" HorizontalAlignment="Center" Margin="0"
                    VerticalAlignment="Center" Width="3" Height="5" Data="M 0,0 L 1,1 1,-1 Z" Stroke="{x:Null}"/>
            </RepeatButton>
            <RepeatButton Command="{x:Static ScrollBar.LineRightCommand}" Focusable="false" HorizontalAlignment="Right"
                          Width="13" Height="Auto" VerticalAlignment="Stretch" Style="{StaticResource ScrollButtonStyle}"
                          Margin="0,7,0,1" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
              <UIElement.Visibility>
                <MultiBinding FallbackValue="Visibility.Collapsed" Converter="{StaticResource MenuScrollingVisibilityConverter}"
                              ConverterParameter="100">
                  <Binding Path="ComputedHorizontalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                  <Binding Path="HorizontalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                  <Binding Path="ExtentWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
                  <Binding Path="ViewportWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
                </MultiBinding>
              </UIElement.Visibility>
              <Path Fill="Black" Stretch="Fill" StrokeThickness="0" HorizontalAlignment="Center" Margin="0"
                    VerticalAlignment="Center" Width="3" Height="5" Data="M 1,0 L 0,1 0,-1 Z" Stroke="{x:Null}"/>
            </RepeatButton>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
    <Setter Property="UIElement.Focusable" Value="false"/>
  </Style>
  <Style x:Key="MenuScrollViewer" TargetType="{x:Type ScrollViewer}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="FocusManager.IsFocusScope" Value="false"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <Grid x:Name="Grid" Background="{TemplateBinding Control.Background}" IsHitTestVisible="true">
            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Margin="{TemplateBinding Control.Padding}"
                                    Content="{TemplateBinding ContentControl.Content}"
                                    ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                    CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" IsHitTestVisible="true"/>
            <RepeatButton ClickMode="Hover" Command="{x:Static ScrollBar.LineUpCommand}" Focusable="false"
                          HorizontalAlignment="Stretch" Width="Auto" Height="12" VerticalAlignment="Top"
                          Style="{StaticResource ScrollButtonStyle}"
                          CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
              <UIElement.Visibility>
                <MultiBinding FallbackValue="Visibility.Collapsed" Converter="{StaticResource MenuScrollingVisibilityConverter}"
                              ConverterParameter="0">
                  <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                  <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                  <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                  <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                </MultiBinding>
              </UIElement.Visibility>
              <Path Stretch="Fill" StrokeThickness="0" HorizontalAlignment="Center" Margin="0"
                    VerticalAlignment="Center" Width="5" Height="3" Data="M 0,0 L 1,-1 2,0 Z" Stroke="{x:Null}">
                <Shape.Fill>
                  <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientBrush.GradientStops>
                      <GradientStop Color="#FF1A52AD" Offset="0"/>
                      <GradientStop Color="#FF0F3168" Offset="1"/>
                    </GradientBrush.GradientStops>
                  </LinearGradientBrush>
                </Shape.Fill>
              </Path>
            </RepeatButton>
            <RepeatButton ClickMode="Hover" Command="{x:Static ScrollBar.LineDownCommand}" Focusable="false"
                          HorizontalAlignment="Stretch" Width="Auto" Height="12" VerticalAlignment="Bottom"
                          Style="{StaticResource ScrollButtonStyle}"
                          CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
              <UIElement.Visibility>
                <MultiBinding FallbackValue="Visibility.Collapsed" Converter="{StaticResource MenuScrollingVisibilityConverter}"
                              ConverterParameter="100">
                  <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                  <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                  <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                  <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                </MultiBinding>
              </UIElement.Visibility>
              <Path Stretch="Fill" StrokeThickness="0" HorizontalAlignment="Center" Margin="0"
                    VerticalAlignment="Center" Width="5" Height="3" Data="M 0,0 L 1,1 2,0 Z" Stroke="{x:Null}">
                <Shape.Fill>
                  <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientBrush.GradientStops>
                      <GradientStop Color="#FF1A52AD" Offset="0"/>
                      <GradientStop Color="#FF0F3168" Offset="1"/>
                    </GradientBrush.GradientStops>
                  </LinearGradientBrush>
                </Shape.Fill>
              </Path>
            </RepeatButton>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
    <Setter Property="UIElement.Focusable" Value="false"/>
  </Style>
  <Style x:Key="ScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
    <Style.Triggers>
      <Trigger Property="UIElement.IsEnabled" Value="false">
        <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}"/>
      </Trigger>
    </Style.Triggers>
    <Setter Property="Control.Template" Value="{DynamicResource ScrollViewerControlTemplate}"/>
  </Style>
  <ControlTemplate x:Key="ScrollViewerControlTemplate" TargetType="{x:Type ScrollViewer}">
    <Border BorderBrush="{TemplateBinding Control.BorderBrush}"
            BorderThickness="{TemplateBinding Control.BorderThickness}">
      <Grid x:Name="Grid" Background="{TemplateBinding Control.Background}">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
          <RowDefinition Height="*"/>
          <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static JetSystemColors.ControlBrushKey}}"
                   Grid.Row="1"/>
        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" CanHorizontallyScroll="false"
                                CanVerticallyScroll="false" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                Content="{TemplateBinding ContentControl.Content}" Grid.Column="0"
                                Margin="{TemplateBinding Control.Padding}" Grid.Row="0"/>
        <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar"
                   Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}"
                   Minimum="0" Grid.Row="0"
                   Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}"
                   ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}"
                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
        <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar"
                   Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}" Minimum="0"
                   Orientation="Horizontal" Grid.Row="1"
                   Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}"
                   ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}"
                   Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
      </Grid>
    </Border>
  </ControlTemplate>
</ResourceDictionary>