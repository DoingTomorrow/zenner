<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Controls="clr-namespace:Fluent">
  <Style TargetType="{x:Type Controls:StatusBar}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
    <Setter Property="FrameworkElement.Height" Value="22"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Controls:StatusBar}">
          <Border BorderThickness="0,1" BorderBrush="{DynamicResource StatusBarBorderBrushBrush}">
            <Border Height="Auto" BorderThickness="0,1" BorderBrush="{DynamicResource StatusBarInnerBorderBrush}"
                    Background="{DynamicResource StatusBarInnerBackgroundBrush}">
              <Controls:StatusBarPanel x:Name="itemsPresenter" IsItemsHost="true" Height="Auto" Margin="0"/>
            </Border>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="Controls:StatusBar.IsWindowMaximized" Value="false">
              <Setter TargetName="itemsPresenter" Property="FrameworkElement.Margin" Value="0,0,16,0"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type Controls:StatusBarItem}">
    <Style.Triggers>
      <Trigger Property="UIElement.IsEnabled" Value="false">
        <Setter Property="Control.Foreground" Value="#FF888888"/>
      </Trigger>
    </Style.Triggers>
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Controls:StatusBarItem}">
          <ContentPresenter Margin="3,0,3,0"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type Controls:StatusBarMenuItem}">
    <Setter Property="Control.Template" Value="{DynamicResource RibbonStatusBarContextMenuItemControlTemplate}"/>
    <Setter Property="Control.FontFamily" Value="{DynamicResource DefaultFontFamily}"/>
    <Setter Property="Control.FontSize" Value="{DynamicResource DefaultFontSize}"/>
    <Setter Property="Control.Foreground" Value="{DynamicResource DefaultFontBrush}"/>
    <Setter Property="MenuItem.IsCheckable" Value="true"/>
    <Setter Property="MenuItem.IsChecked"
            Value="{Binding StatusBarItem.IsChecked, RelativeSource={RelativeSource Self}, Mode=TwoWay}"/>
  </Style>
  <ControlTemplate x:Key="RibbonStatusBarContextMenuItemControlTemplate"
                   TargetType="{x:Type Controls:StatusBarMenuItem}">
    <Grid Width="Auto" Height="22" Background="#00000000">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="25"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Border x:Name="border" HorizontalAlignment="Stretch" Margin="0" Width="Auto" Visibility="Collapsed"
              Background="{DynamicResource ButtonHoverOuterBackgroundBrush}"
              BorderBrush="{DynamicResource ButtonHoverOuterBorderBrush}" BorderThickness="1" CornerRadius="2"
              Grid.Column="0" Grid.ColumnSpan="3">
        <Border Background="{DynamicResource ButtonHoverInnerBackgroundBrush}"
                BorderBrush="{DynamicResource ButtonHoverInnerBorderBrush}" BorderThickness="1" CornerRadius="1"/>
      </Border>
      <TextBlock x:Name="textBlock_Copy" Width="Auto" Height="Auto" Margin="9,3,30,3" VerticalAlignment="Center"
                 Grid.Column="1" TextTrimming="None" Visibility="Hidden" HorizontalAlignment="Left"
                 Text="{Binding StatusBarItem.Title, RelativeSource={RelativeSource TemplatedParent}}"/>
      <TextBlock x:Name="textBlock" Width="Auto" Height="Auto" Margin="9,3,3,3" VerticalAlignment="Center"
                 Grid.Column="1" TextTrimming="CharacterEllipsis"
                 Text="{Binding StatusBarItem.Title, RelativeSource={RelativeSource TemplatedParent}}"/>
      <Rectangle x:Name="rectangle" Fill="{DynamicResource MenuItemCheckBoxBackgroundBrush}"
                 Stroke="{DynamicResource MenuItemCheckBoxBorderBrush}" Grid.ColumnSpan="1"
                 HorizontalAlignment="Center" VerticalAlignment="Center" Width="20" Height="20" RadiusX="1"
                 RadiusY="1" Visibility="Collapsed" RenderOptions.BitmapScalingMode="NearestNeighbor"/>
      <Image x:Name="image" HorizontalAlignment="Center" VerticalAlignment="Center"
             Source="/Fluent;Component/Themes/Office2010/Images/Checked.png" Stretch="None"
             Visibility="Collapsed" SnapsToDevicePixels="true" RenderOptions.BitmapScalingMode="NearestNeighbor"/>
      <Image x:Name="iconImage" HorizontalAlignment="Center" Margin="3,2,2,2" VerticalAlignment="Center"
             Width="Auto" Source="{TemplateBinding MenuItem.Icon}" SnapsToDevicePixels="true"/>
      <TextBlock Width="Auto" Height="Auto" Margin="9,3,3,3" VerticalAlignment="Center" Grid.Column="3"
                 TextTrimming="CharacterEllipsis"
                 Text="{Binding StatusBarItem.Value, RelativeSource={RelativeSource TemplatedParent}}"/>
      <Path x:Name="path" Stretch="Fill" HorizontalAlignment="Right" Margin="1,0,4,0" Width="4"
            Data="M 0,0 L 1,1 0,2 Z" Height="6" Grid.Column="3" Stroke="{x:Null}">
        <Shape.Fill>
          <LinearGradientBrush EndPoint="0.945,0.872" StartPoint="0.055,0.128">
            <GradientStop Color="Black" Offset="1"/>
            <GradientStop Color="#FF828282"/>
          </LinearGradientBrush>
        </Shape.Fill>
      </Path>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="MenuItem.IsChecked" Value="true">
        <Setter TargetName="rectangle" Property="UIElement.Visibility" Value="Visible"/>
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Value="{x:Null}" Property="MenuItem.Icon"/>
          <Condition Property="MenuItem.IsChecked" Value="true"/>
        </MultiTrigger.Conditions>
        <Setter TargetName="image" Property="UIElement.Visibility" Value="Visible"/>
      </MultiTrigger>
      <Trigger Property="ItemsControl.HasItems" Value="false">
        <Setter TargetName="path" Property="UIElement.Visibility" Value="Collapsed"/>
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="MenuItem.IsHighlighted" Value="true"/>
          <Condition Property="UIElement.IsEnabled" Value="true"/>
        </MultiTrigger.Conditions>
        <Setter TargetName="border" Property="UIElement.Visibility" Value="Visible"/>
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
</ResourceDictionary>