<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Fluent="clr-namespace:Fluent"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006">
  <Style x:Key="RibbonTabItemStyle" TargetType="{x:Type Fluent:RibbonTabItem}">
    <Style.Triggers>
      <Trigger Property="Fluent:RibbonTabItem.Group" Value="{x:Null}">
        <Setter Property="Control.BorderBrush" Value="{DynamicResource RibbonTopBorderBrush}"/>
      </Trigger>
      <Trigger Property="Selector.IsSelected" Value="false">
        <Setter Property="Control.Foreground" Value="{DynamicResource TabItemFontBrush}"/>
      </Trigger>
    </Style.Triggers>
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Left"/>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Top"/>
    <Setter Property="FrameworkElement.Height" Value="31"/>
    <Setter Property="Fluent:RibbonTabItem.IsMinimized"
            Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Fluent:RibbonTabControl}}, Path=IsMinimized, Mode=OneWay}"/>
    <Setter Property="Fluent:RibbonTabItem.IsOpen"
            Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Fluent:RibbonTabControl}}, Path=IsDropDownOpen, Mode=OneWay}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Fluent:RibbonTabItem}">
          <Grid x:Name="grid" Background="#00000000" Height="24" VerticalAlignment="Top" Margin="0,7,0,0">
            <Border x:Name="border3" Margin="2,0,0,0" BorderThickness="1,0" Grid.ColumnSpan="2">
              <Border.BorderBrush>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                  <GradientStop Color="#CCFFFFFF" Offset="0"/>
                  <GradientStop Offset="1" Color="#7FFFFFFF"/>
                </LinearGradientBrush>
              </Border.BorderBrush>
              <Border x:Name="border4" BorderThickness="1,0"
                      BorderBrush="{Binding Group.BorderBrush, RelativeSource={RelativeSource TemplatedParent}}">
                <UIElement.OpacityMask>
                  <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="Black" Offset="0"/>
                    <GradientStop Color="#00000000" Offset="0.981"/>
                  </LinearGradientBrush>
                </UIElement.OpacityMask>
                <Border BorderThickness="0" Margin="0"
                        Background="{Binding Group.Background, RelativeSource={RelativeSource TemplatedParent}}">
                  <UIElement.OpacityMask>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                      <GradientStop Color="#59000000" Offset="0"/>
                      <GradientStop Color="#00000000" Offset="1"/>
                    </LinearGradientBrush>
                  </UIElement.OpacityMask>
                  <Rectangle x:Name="rectangle4" Fill="#3FD2D2D2" StrokeThickness="0">
                    <UIElement.OpacityMask>
                      <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#7F000000" Offset="0"/>
                        <GradientStop Color="#00000000" Offset="1"/>
                      </LinearGradientBrush>
                    </UIElement.OpacityMask>
                  </Rectangle>
                </Border>
              </Border>
            </Border>
            <Grid x:Name="selectedGrid" Visibility="Collapsed" Margin="2,0,0,0" ColumnSpan="1">
              <Rectangle x:Name="rectangle" Fill="{DynamicResource ActiveTabBackgroundBrush}" StrokeThickness="0" Margin="0"
                         VerticalAlignment="Bottom" Height="1" Stroke="{x:Null}"/>
              <Rectangle x:Name="rectangle1" Fill="{DynamicResource ActiveTabBackgroundBrush}" StrokeThickness="0"
                         Margin="1.8,0" VerticalAlignment="Bottom" Height="1.2" Stroke="{x:Null}"/>
              <Rectangle x:Name="rectangle2" Fill="{DynamicResource ActiveTabBackgroundBrush}" StrokeThickness="0"
                         Margin="2,0" VerticalAlignment="Bottom" Height="2" Stroke="{x:Null}"/>
              <Border x:Name="border" Margin="1,0,1,2" BorderBrush="{TemplateBinding Control.BorderBrush}"
                      BorderThickness="1,1,1,0" VerticalAlignment="Stretch" CornerRadius="2,2,0,0"
                      Background="{DynamicResource ActiveTabBackgroundBrush}">
                <Border x:Name="border_Copy3" Margin="0" BorderThickness="1,1,1,0" VerticalAlignment="Stretch"
                        CornerRadius="2,2,0,0" BorderBrush="{DynamicResource ActiveTabBackgroundBrush}"
                        Background="{x:Null}">
                  <Border x:Name="border_Copy4" Margin="0,0,-2,-1" BorderThickness="0" VerticalAlignment="Stretch"
                          CornerRadius="2,2,0,0"
                          Background="{Binding Group.Background, RelativeSource={RelativeSource TemplatedParent}}"
                          BorderBrush="{x:Null}">
                    <UIElement.OpacityMask>
                      <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#3F000000" Offset="0"/>
                        <GradientStop Color="#00000000" Offset="0.59"/>
                      </LinearGradientBrush>
                    </UIElement.OpacityMask>
                  </Border>
                </Border>
              </Border>
              <Border x:Name="border1" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Bottom" Width="2"
                      Height="2" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="0,0,1,1"
                      CornerRadius="0,0,2,0"/>
              <Border x:Name="border2" HorizontalAlignment="Right" Margin="0" VerticalAlignment="Bottom" Width="2"
                      Height="2" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="1,0,0,1"
                      CornerRadius="0,0,0,2"/>
              <Rectangle x:Name="rectangle3" StrokeThickness="0" Margin="7,-7,7,0" VerticalAlignment="Top" Height="14"
                         IsHitTestVisible="false">
                <Shape.Fill>
                  <RadialGradientBrush Center="0.498,0.501" GradientOrigin="0.498,0.501" RadiusY="0.464">
                    <GradientStop Color="#7FFFFFFF" Offset="0"/>
                    <GradientStop Offset="1"/>
                  </RadialGradientBrush>
                </Shape.Fill>
              </Rectangle>
            </Grid>
            <Grid x:Name="hoverGrid" Margin="2,0,0,0" Visibility="Collapsed" ColumnSpan="1">
              <Border x:Name="border_Copy" Margin="1,0,1,1" BorderBrush="{TemplateBinding Control.BorderBrush}"
                      BorderThickness="1,1,1,0" VerticalAlignment="Stretch" CornerRadius="2,2,0,0" Background="{x:Null}">
                <UIElement.OpacityMask>
                  <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#CC000000" Offset="0"/>
                    <GradientStop Color="#F7FFFFFF" Offset="0.985"/>
                  </LinearGradientBrush>
                </UIElement.OpacityMask>
                <Border x:Name="border_Copy1" Margin="0" BorderBrush="{DynamicResource ActiveTabBackgroundBrush}"
                        BorderThickness="1,1,1,0" VerticalAlignment="Stretch" CornerRadius="2,2,0,0" Background="{x:Null}">
                  <UIElement.OpacityMask>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                      <GradientStop Color="#CCFFFFFF" Offset="0"/>
                      <GradientStop Color="#F7FFFFFF" Offset="1"/>
                    </LinearGradientBrush>
                  </UIElement.OpacityMask>
                  <Border x:Name="border_Copy2" Margin="0" BorderThickness="0" VerticalAlignment="Stretch"
                          CornerRadius="2,2,0,0" Background="{DynamicResource ActiveTabBackgroundBrush}"
                          BorderBrush="{x:Null}">
                    <UIElement.OpacityMask>
                      <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#7FFFFFFF" Offset="0.004"/>
                        <GradientStop Offset="0.5"/>
                      </LinearGradientBrush>
                    </UIElement.OpacityMask>
                  </Border>
                </Border>
              </Border>
            </Grid>
            <Grid x:Name="focusedGrid" Margin="2,0,0,0" Visibility="Collapsed" ColumnSpan="1">
              <UIElement.OpacityMask>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                  <GradientStop Color="White" Offset="0"/>
                  <GradientStop Offset="1" Color="#19FFFFFF"/>
                </LinearGradientBrush>
              </UIElement.OpacityMask>
              <Border x:Name="border_Copy5" Margin="1,0,1,1" BorderThickness="1,1,1,0" VerticalAlignment="Stretch"
                      CornerRadius="2,2,0,0" Background="{DynamicResource ButtonHoverOuterBackgroundBrush}"
                      BorderBrush="{DynamicResource ButtonHoverOuterBorderBrush}">
                <Border x:Name="border_Copy6" Margin="0" BorderBrush="{DynamicResource ButtonHoverInnerBorderBrush}"
                        BorderThickness="1,1,1,0" VerticalAlignment="Stretch" CornerRadius="2,2,0,0"
                        Background="{DynamicResource ButtonHoverInnerBackgroundBrush}"/>
              </Border>
            </Grid>
            <Border x:Name="PART_ContentContainer" HorizontalAlignment="Stretch" Margin="6,2,4,2"
                    VerticalAlignment="Stretch" Padding="15,0,0,0" Grid.ColumnSpan="1">
              <ContentPresenter x:Name="contentPresenter" ContentSource="Header" HorizontalAlignment="Center"
                                VerticalAlignment="Center" Height="Auto"/>
            </Border>
            <Grid x:Name="separatorGrid" Margin="0" Visibility="Collapsed" HorizontalAlignment="Right" Width="2"
                  Column="1">
              <Rectangle x:Name="separatorRectangle1" Fill="{DynamicResource RibbonTopBorderBrush}"
                         Stroke="{DynamicResource RibbonTopBorderBrush}" Margin="0,0,1,0" HorizontalAlignment="Right"
                         Width="1" Opacity="1" Visibility="Visible">
                <UIElement.OpacityMask>
                  <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#00000000" Offset="0"/>
                    <GradientStop Color="#E5FFFFFF" Offset="0.382"/>
                  </LinearGradientBrush>
                </UIElement.OpacityMask>
              </Rectangle>
              <Rectangle x:Name="separatorRectangle2" Fill="{DynamicResource ActiveTabBackgroundBrush}"
                         Stroke="{DynamicResource ActiveTabBackgroundBrush}" HorizontalAlignment="Right" Margin="0"
                         Width="1" Opacity="1" Visibility="Visible">
                <UIElement.OpacityMask>
                  <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#00000000" Offset="0"/>
                    <GradientStop Color="#BFFFFFFF" Offset="0.329"/>
                  </LinearGradientBrush>
                </UIElement.OpacityMask>
              </Rectangle>
            </Grid>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="contentPresenter" Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="Fluent:RibbonTabItem.HasRightGroupBorder" Value="false"/>
                <Condition Property="Fluent:RibbonTabItem.HasLeftGroupBorder" Value="true"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="border3" Property="Border.BorderThickness" Value="1,0,0,0"/>
              <Setter TargetName="border4" Property="Border.BorderThickness" Value="1,0,0,0"/>
              <Setter TargetName="rectangle4" Property="FrameworkElement.Margin" Value="0"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="Fluent:RibbonTabItem.HasLeftGroupBorder" Value="false"/>
                <Condition Property="Fluent:RibbonTabItem.HasRightGroupBorder" Value="true"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="border4" Property="Border.BorderThickness" Value="0,0,1,0"/>
              <Setter TargetName="border3" Property="Border.BorderThickness" Value="0,0,1,0"/>
              <Setter TargetName="rectangle4" Property="FrameworkElement.Margin" Value="0"/>
              <Setter TargetName="border3" Property="FrameworkElement.Margin" Value="0"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="Fluent:RibbonTabItem.HasLeftGroupBorder" Value="false"/>
                <Condition Property="Fluent:RibbonTabItem.HasRightGroupBorder" Value="false"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="border4" Property="Border.BorderThickness" Value="0,0,0,0"/>
              <Setter TargetName="border3" Property="Border.BorderThickness" Value="0,0,0,0"/>
              <Setter TargetName="rectangle4" Property="FrameworkElement.Margin" Value="0"/>
              <Setter TargetName="border3" Property="FrameworkElement.Margin" Value="0"/>
            </MultiTrigger>
            <Trigger Value="{x:Null}" Property="Fluent:RibbonTabItem.Group">
              <Setter TargetName="border3" Property="UIElement.Visibility" Value="Collapsed"/>
              <Setter TargetName="separatorGrid" Property="FrameworkElement.Margin" Value="-1,0,0,1"/>
              <Setter TargetName="border_Copy3" Property="UIElement.Visibility" Value="Collapsed"/>
              <Setter TargetName="rectangle3" Property="UIElement.Visibility" Value="Collapsed"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="Selector.IsSelected" Value="true"/>
                <Condition Property="Fluent:RibbonTabItem.IsMinimized" Value="false"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="selectedGrid" Property="UIElement.Visibility" Value="Visible"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsMouseOver" Value="true"/>
                <Condition Property="Selector.IsSelected" Value="false"/>
                <Condition Property="Fluent:RibbonTabItem.IsMinimized" Value="false"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="hoverGrid" Property="UIElement.Visibility" Value="Visible"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsMouseOver" Value="true"/>
                <Condition Property="Fluent:RibbonTabItem.IsMinimized" Value="true"/>
                <Condition Property="Fluent:RibbonTabItem.IsOpen" Value="false"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="hoverGrid" Property="UIElement.Visibility" Value="Visible"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="Selector.IsSelected" Value="true"/>
                <Condition Property="Fluent:RibbonTabItem.IsMinimized" Value="true"/>
                <Condition Property="Fluent:RibbonTabItem.IsOpen" Value="true"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="hoverGrid" Property="UIElement.Visibility" Value="Visible"/>
              <Setter TargetName="grid" Property="Panel.Background" Value="#00000000"/>
            </MultiTrigger>
            <Trigger Property="Fluent:RibbonTabItem.IsSeparatorVisible" Value="true">
              <Setter TargetName="separatorGrid" Property="UIElement.Visibility" Value="Visible"/>
              <Setter TargetName="PART_ContentContainer" Property="FrameworkElement.Margin" Value="6,2"/>
              <Setter TargetName="hoverGrid" Property="FrameworkElement.Margin" Value="2,0"/>
              <Setter TargetName="selectedGrid" Property="FrameworkElement.Margin" Value="2,0"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.IsTabStop" Value="false"/>
    <Setter Property="Fluent:RibbonTabItem.Indent" Value="12"/>
    <Setter Property="Control.Foreground" Value="{DynamicResource TabItemSelectedFontBrush}"/>
    <Setter Property="Control.FontFamily" Value="{DynamicResource DefaultFontFamily}"/>
    <Setter Property="Control.FontSize" Value="{DynamicResource DefaultFontSize}"/>
    <Setter Property="FrameworkElement.Margin" Value="0"/>
    <Setter Property="Control.BorderBrush"
            Value="{Binding Group.BorderBrush, RelativeSource={RelativeSource Self}}"/>
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{DynamicResource ControlStyleEmptyFocus}"/>
  </Style>
</ResourceDictionary>