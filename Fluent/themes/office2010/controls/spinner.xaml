<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:Fluent="clr-namespace:Fluent">
  <Fluent:ObjectToImageConverter x:Key="StringToImageConvert"/>
  <ControlTemplate x:Key="SpinnerButtonControlTemplate" TargetType="{x:Type RepeatButton}">
    <Border x:Name="border" BorderThickness="1" CornerRadius="2"
            Background="{DynamicResource TransparentBrush}" BorderBrush="{DynamicResource TransparentBrush}"
            Height="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
      <Border x:Name="border1" Height="Auto" BorderBrush="{DynamicResource TransparentBrush}" BorderThickness="1"
              CornerRadius="2" Background="{DynamicResource TransparentBrush}">
        <Grid Height="Auto">
          <Rectangle x:Name="rectangle" StrokeThickness="0" Visibility="Collapsed">
            <Shape.Fill>
              <RadialGradientBrush Center="0.503,1" GradientOrigin="0.503,1" RadiusY="0.202">
                <GradientStop Color="#7FFFFFFF" Offset="0"/>
                <GradientStop Offset="1"/>
              </RadialGradientBrush>
            </Shape.Fill>
          </Rectangle>
          <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </Grid>
      </Border>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="UIElement.IsMouseOver" Value="false"/>
      <Trigger Property="ButtonBase.IsPressed" Value="true">
        <Setter TargetName="border" Value="{DynamicResource ButtonPressedOuterBorderBrush}"
                Property="Border.BorderBrush"/>
        <Setter TargetName="border" Value="{DynamicResource ButtonPressedOuterBackgroundBrush}"
                Property="Border.Background"/>
        <Setter TargetName="border1" Value="{DynamicResource ButtonPressedInnerBackgroundBrush}"
                Property="Border.Background"/>
        <Setter TargetName="border1" Value="{DynamicResource ButtonPressedInnerBorderBrush}"
                Property="Border.BorderBrush"/>
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="false">
        <Setter TargetName="contentPresenter" Property="UIElement.Opacity" Value="0.5"/>
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="UIElement.IsMouseOver" Value="true"/>
          <Condition Property="ButtonBase.IsPressed" Value="false"/>
        </MultiTrigger.Conditions>
        <Setter TargetName="border1" Value="{DynamicResource ButtonHoverInnerBorderBrush}"
                Property="Border.BorderBrush"/>
        <Setter TargetName="border1" Value="{DynamicResource ButtonHoverInnerBackgroundBrush}"
                Property="Border.Background"/>
        <Setter TargetName="border" Value="{DynamicResource ButtonHoverOuterBackgroundBrush}"
                Property="Border.Background"/>
        <Setter TargetName="border" Value="{DynamicResource ButtonHoverOuterBorderBrush}"
                Property="Border.BorderBrush"/>
        <Setter TargetName="rectangle" Property="UIElement.Visibility" Value="Visible"/>
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="UIElement.IsKeyboardFocusWithin" Value="true"/>
          <Condition Property="ButtonBase.IsPressed" Value="false"/>
        </MultiTrigger.Conditions>
        <Setter TargetName="border1" Value="{DynamicResource ButtonHoverInnerBorderBrush}"
                Property="Border.BorderBrush"/>
        <Setter TargetName="border1" Value="{DynamicResource ButtonHoverInnerBackgroundBrush}"
                Property="Border.Background"/>
        <Setter TargetName="border" Value="{DynamicResource ButtonHoverOuterBackgroundBrush}"
                Property="Border.Background"/>
        <Setter TargetName="border" Value="{DynamicResource ButtonHoverOuterBorderBrush}"
                Property="Border.BorderBrush"/>
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="SpinnerButtonStyle" TargetType="{x:Type RepeatButton}">
    <Setter Property="Control.Template" Value="{StaticResource SpinnerButtonControlTemplate}"/>
    <Setter Property="Control.Foreground" Value="{DynamicResource DefaultFontBrush}"/>
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{DynamicResource ControlStyleEmptyFocus}"/>
  </Style>
  <Style x:Key="SpinnerStyle" TargetType="{x:Type Fluent:Spinner}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{DynamicResource ControlStyleEmptyFocus}"/>
    <Setter Property="Control.Foreground" Value="{DynamicResource DefaultFontBrush}"/>
    <Setter Property="Control.FontFamily" Value="{DynamicResource DefaultFontFamily}"/>
    <Setter Property="Control.FontSize" Value="{DynamicResource DefaultFontSize}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Fluent:Spinner}">
          <Grid Width="Auto" Height="22" Background="#00000000">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <StackPanel x:Name="stackPanel" Orientation="Horizontal" Grid.ColumnSpan="1" HorizontalAlignment="Left"
                        Margin="0,0,3,0">
              <ContentPresenter x:Name="iconImage" Width="16" Height="16" VerticalAlignment="Center" Margin="4,0,0,0"
                                Content="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource StringToImageConvert}}"/>
              <TextBlock x:Name="textBlock" Text="{TemplateBinding Fluent:RibbonControl.Header}" TextWrapping="Wrap"
                         VerticalAlignment="Center" Margin="5,0,4,0"/>
            </StackPanel>
            <Border x:Name="border" Height="22" BorderThickness="1" BorderBrush="{DynamicResource TextBoxBorderBrush}"
                    Background="{DynamicResource TextBoxBackgroundBrush}" Grid.ColumnSpan="1" Grid.Column="1"
                    Width="{TemplateBinding Fluent:Spinner.InputWidth}" HorizontalAlignment="Right">
              <Grid ColumnSpan="1" Column="1">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*"/>
                  <ColumnDefinition Width="17"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition Height="*"/>
                  <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBox x:Name="PART_TextBox" BorderThickness="0" Grid.RowSpan="2" Grid.Column="0"
                         Background="{DynamicResource TextBoxBackgroundBrush}"/>
                <Path x:Name="path" Visibility="Collapsed" HorizontalAlignment="Left" Margin="0,-1,0,-1" Width="1"
                      Fill="#FF000000" Stretch="Fill" Stroke="{DynamicResource TextBoxHoverBorderBrush}"
                      StrokeThickness="1" Grid.Column="1" Grid.RowSpan="2" Data="M 0,0 L 0,1 "/>
                <Path x:Name="path1" HorizontalAlignment="Left" Margin="0,0,-1,0" Width="Auto" Fill="#FF000000"
                      Stretch="Fill" Stroke="{DynamicResource TextBoxHoverBorderBrush}" StrokeThickness="1"
                      Data="M 0,0 L 1,0 " Visibility="Collapsed" VerticalAlignment="Bottom" Height="1" Grid.Column="1"
                      Grid.RowSpan="1"/>
                <RepeatButton x:Name="PART_ButtonUp" Grid.Column="1" Grid.Row="0" Style="{StaticResource SpinnerButtonStyle}"
                              RenderTransformOrigin="0,0.5" HorizontalAlignment="Stretch">
                  <Path Width="5" Height="3" Fill="#FF000000" Stretch="Fill" Stroke="#FF000000" Data="M 0,0 L 1,-1 2,0 "
                        HorizontalAlignment="Center" StrokeThickness="0" VerticalAlignment="Center" Margin="1,2,0,1"
                        RenderOptions.EdgeMode="Aliased"/>
                </RepeatButton>
                <RepeatButton x:Name="PART_ButtonDown" Grid.Column="1" Grid.Row="1" Style="{StaticResource SpinnerButtonStyle}">
                  <Path Width="5" Height="3" Fill="#FF000000" Stretch="Fill" Stroke="#FF000000" Data="M 0,0 L 1,1 2,0 "
                        StrokeThickness="0" HorizontalAlignment="Center" Margin="1,-1,0,0" VerticalAlignment="Center"
                        RenderOptions.EdgeMode="Aliased"/>
                </RepeatButton>
              </Grid>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Value="{x:Null}" Property="Fluent:RibbonControl.Icon">
              <Setter TargetName="iconImage" Property="UIElement.Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="Fluent:Spinner.InputWidth" Value="NaN">
              <Setter TargetName="border" Property="FrameworkElement.HorizontalAlignment" Value="Stretch"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="PART_TextBox" Property="UIElement.IsEnabled" Value="false"/>
              <Setter TargetName="border" Value="{DynamicResource TextBoxDisabledBackgroundBrush}"
                      Property="Border.Background"/>
              <Setter TargetName="border" Value="{DynamicResource TextBoxDisabledBorderBrush}"
                      Property="Border.BorderBrush"/>
              <Setter TargetName="PART_TextBox" Value="{DynamicResource TextBoxDisabledBackgroundBrush}"
                      Property="Control.Background"/>
              <Setter TargetName="iconImage" Property="UIElement.Opacity" Value="0.5"/>
              <Setter TargetName="textBlock" Property="UIElement.Opacity" Value="0.5"/>
              <Setter TargetName="iconImage" Property="UIElement.Effect">
                <Setter.Value>
                  <Fluent:GrayscaleEffect/>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="Fluent:RibbonControl.Size" Value="Middle">
              <Setter TargetName="textBlock" Property="UIElement.Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="Fluent:RibbonControl.Size" Value="Small">
              <Setter TargetName="stackPanel" Property="UIElement.Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="path" Property="UIElement.Visibility" Value="Visible"/>
              <Setter TargetName="path1" Property="UIElement.Visibility" Value="Visible"/>
              <Setter TargetName="border" Value="{DynamicResource TextBoxHoverBorderBrush}" Property="Border.BorderBrush"/>
              <Setter TargetName="border" Value="{DynamicResource TextBoxHoverBackgroundBrush}"
                      Property="Border.Background"/>
              <Setter TargetName="PART_TextBox" Value="{DynamicResource TextBoxHoverBackgroundBrush}"
                      Property="Control.Background"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>