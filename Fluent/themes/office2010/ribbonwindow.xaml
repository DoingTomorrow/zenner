<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:Fluent="clr-namespace:Fluent">
  <Fluent:IconConverter x:Key="IconConvert"/>
  <BitmapImage x:Key="ImageCaptionButtonClose" PresentationOptions:Freeze="True"
               UriSource="pack://application:,,,/Fluent;component/Themes/Office2010/Images/CaptionButtonClose.png"/>
  <BitmapImage x:Key="ImageCaptionButtonMinimize" PresentationOptions:Freeze="True"
               UriSource="pack://application:,,,/Fluent;component/Themes/Office2010/Images/CaptionButtonMinimize.png"/>
  <BitmapImage x:Key="ImageCaptionButtonNormalize" PresentationOptions:Freeze="True"
               UriSource="pack://application:,,,/Fluent;component/Themes/Office2010/Images/CaptionButtonNormalize.png"/>
  <BitmapImage x:Key="ImageCaptionButtonMaximize" PresentationOptions:Freeze="True"
               UriSource="pack://application:,,,/Fluent;component/Themes/Office2010/Images/CaptionButtonMaximize.png"/>
  <ControlTemplate x:Key="DwmRibbonWindowControlTemplate" TargetType="{x:Type Fluent:RibbonWindow}">
    <Grid>
      <AdornerDecorator x:Name="adornerDecorator" Margin="0">
        <Grid x:Name="PART_MainGrid" Margin="0" Background="{DynamicResource TransparentBrush}"
              VerticalAlignment="Stretch">
          <Grid x:Name="PART_TitleBar" Margin="8" VerticalAlignment="Top"
                Height="{TemplateBinding Fluent:RibbonWindow.CaptionHeight}"
                Background="{DynamicResource TransparentBrush}" IsHitTestVisible="true"/>
          <Rectangle x:Name="rectangle" HorizontalAlignment="Left" Width="35" StrokeThickness="0" Margin="15,27,0,1"
                     VerticalAlignment="Top" Height="23" IsHitTestVisible="false"
                     Fill="{DynamicResource RibbonTabControlTopGradientLeftBrush}" Stroke="{x:Null}"/>
          <Rectangle x:Name="rectangle1" HorizontalAlignment="Right" Width="35" StrokeThickness="0" Margin="0,27,15,1"
                     Height="23" VerticalAlignment="Top" IsHitTestVisible="false"
                     Fill="{DynamicResource RibbonTabControlTopGradientRightBrush}" Stroke="{x:Null}"/>
          <Rectangle x:Name="rectangle2" HorizontalAlignment="Stretch" Width="Auto" StrokeThickness="0" Height="23"
                     Margin="50,27,50,1" VerticalAlignment="Top" IsHitTestVisible="false"
                     Fill="{DynamicResource RibbonTabControlTopGradientCenterBrush}" Stroke="{x:Null}"/>
          <Grid x:Name="grid" Background="{TemplateBinding Control.Background}"
                Margin="{TemplateBinding Fluent:RibbonWindow.GlassBorderThickness}"/>
          <StackPanel x:Name="PART_IconImage" Background="Transparent" Margin="8,7,8,8" Orientation="Horizontal"
                      HorizontalAlignment="Left" VerticalAlignment="Top">
            <Image x:Name="iconImage" Height="16" HorizontalAlignment="Left" VerticalAlignment="Top" Width="16"
                   RenderOptions.BitmapScalingMode="NearestNeighbor" SnapsToDevicePixels="true"
                   Source="{Binding Icon, Converter={StaticResource IconConvert}, RelativeSource={RelativeSource TemplatedParent}}"/>
          </StackPanel>
          <ContentPresenter x:Name="contentPresenter" Margin="8,1,8,8"/>
          <ResizeGrip x:Name="PART_ResizeGrip" Grid.Row="1" Grid.Column="0" HorizontalAlignment="Right"
                      VerticalAlignment="Bottom" Width="17" Height="17" Focusable="false" Margin="0,0,6,6"
                      Background="Transparent" Visibility="Collapsed"/>
        </Grid>
      </AdornerDecorator>
    </Grid>
    <ControlTemplate.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="Window.ResizeMode" Value="CanResizeWithGrip"/>
          <Condition Property="Window.WindowState" Value="Normal"/>
        </MultiTrigger.Conditions>
        <Setter TargetName="PART_ResizeGrip" Property="UIElement.Visibility" Value="Visible"/>
      </MultiTrigger>
      <Trigger Property="Window.WindowState" Value="Maximized">
        <Setter TargetName="iconImage" Property="FrameworkElement.Margin" Value="0,4,0,0"/>
        <Setter TargetName="adornerDecorator" Property="FrameworkElement.Margin" Value="0"/>
        <Setter TargetName="contentPresenter" Property="FrameworkElement.Margin" Value="8,6,8,8"/>
        <Setter TargetName="rectangle" Property="FrameworkElement.Margin" Value="15,31,0,1"/>
        <Setter TargetName="rectangle1" Property="FrameworkElement.Margin" Value="0,31,15,1"/>
        <Setter TargetName="rectangle2" Property="FrameworkElement.Margin" Value="50,31,50,1"/>
      </Trigger>
      <Trigger Property="Fluent:RibbonWindow.IsIconVisible" Value="false">
        <Setter TargetName="PART_IconImage" Property="UIElement.Visibility" Value="Collapsed"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="NonDwmRibbonWindowControlTemplate" TargetType="{x:Type Fluent:RibbonWindow}">
    <Grid>
      <AdornerDecorator x:Name="adornerDecorator" VerticalAlignment="Stretch" Margin="0">
        <Grid>
          <Border x:Name="PART_SizeBorder" BorderBrush="{DynamicResource WindowOutterBorderBrush}"
                  BorderThickness="1,1,1,1" CornerRadius="8.5" Opacity="1"
                  Background="{DynamicResource WindowOutterBackgroundBrush}">
            <Border x:Name="border2" BorderBrush="{DynamicResource WindowInnerBorderBrush}" BorderThickness="1,1,1,1"
                    CornerRadius="7,7,7,7" Opacity="1" Background="{x:Null}">
              <Border x:Name="border3" BorderThickness="0,0,0,0" Opacity="1" CornerRadius="6" VerticalAlignment="Top"
                      Height="50" Background="{DynamicResource WindowInnerBackgroundBrush}" BorderBrush="{x:Null}"/>
            </Border>
          </Border>
          <Grid x:Name="PART_MainGrid" Margin="0" Background="#00FFFFFF">
            <Grid x:Name="PART_TitleBar" Margin="{TemplateBinding Fluent:RibbonWindow.ResizeBorderThickness}"
                  VerticalAlignment="Top" Height="{TemplateBinding Fluent:RibbonWindow.CaptionHeight}"
                  Background="#00FFFFFF" IsHitTestVisible="true"/>
            <StackPanel x:Name="PART_IconImage" Background="Transparent" Margin="8,7,0,0" Orientation="Horizontal"
                        HorizontalAlignment="Left" VerticalAlignment="Top">
              <Image x:Name="iconImage" Height="16" HorizontalAlignment="Left" VerticalAlignment="Top" Width="16"
                     SnapsToDevicePixels="true" RenderOptions.BitmapScalingMode="NearestNeighbor" Stretch="Uniform"
                     Source="{Binding Icon, Converter={StaticResource IconConvert}, RelativeSource={RelativeSource TemplatedParent}}"/>
            </StackPanel>
            <StackPanel x:Name="PART_ButtonsPanel" HorizontalAlignment="Right" Margin="0,8,8,0" VerticalAlignment="Top"
                        Orientation="Horizontal">
              <Button x:Name="minimizeButton" Style="{DynamicResource CaptionButtonStyle}" Width="35" Height="19"
                      BorderThickness="1,0,0,1" Command="{x:Static Fluent:RibbonWindow.MinimizeCommand}">
                <Image Width="Auto" Height="Auto" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="None"
                       Source="{DynamicResource ImageCaptionButtonMinimize}" SnapsToDevicePixels="true"
                       RenderOptions.BitmapScalingMode="NearestNeighbor"/>
              </Button>
              <Button x:Name="maximizeButton" Margin="-1,0,0,0" Style="{DynamicResource CaptionButtonStyle}" Width="35"
                      Height="19" BorderThickness="0,0,0,1" Command="{x:Static Fluent:RibbonWindow.MaximizeCommand}">
                <Image Width="Auto" Height="Auto" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="None"
                       Source="{DynamicResource ImageCaptionButtonMaximize}" SnapsToDevicePixels="true"
                       RenderOptions.BitmapScalingMode="NearestNeighbor"/>
              </Button>
              <Button x:Name="normalizeButton" Margin="-1,0,0,0" Style="{DynamicResource CaptionButtonStyle}" Width="35"
                      Height="19" BorderThickness="0,0,0,1" Command="{x:Static Fluent:RibbonWindow.NormalizeCommand}">
                <Image Width="Auto" Height="Auto" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="None"
                       Source="{DynamicResource ImageCaptionButtonNormalize}" SnapsToDevicePixels="true"
                       RenderOptions.BitmapScalingMode="NearestNeighbor"/>
              </Button>
              <Button x:Name="closeButton" Margin="-1,0,0,0" Style="{DynamicResource CaptionButtonStyle}" Width="35"
                      Height="19" BorderThickness="0,0,1,1" Background="Red"
                      Command="{x:Static Fluent:RibbonWindow.CloseCommand}">
                <Image Width="Auto" Height="Auto" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="None"
                       Source="{DynamicResource ImageCaptionButtonClose}" SnapsToDevicePixels="true"
                       RenderOptions.BitmapScalingMode="NearestNeighbor"/>
              </Button>
            </StackPanel>
            <Border x:Name="border4" Margin="{TemplateBinding Fluent:RibbonWindow.GlassBorderThickness}">
              <Border x:Name="border1" Height="Auto" BorderThickness="1,1,1,1"
                      BorderBrush="{DynamicResource WindowContentBorderBrush}" Margin="-1">
                <Grid x:Name="grid" Background="{TemplateBinding Control.Background}"/>
              </Border>
            </Border>
            <ContentPresenter x:Name="contentPresenter" Margin="8,1,8,8"/>
            <ResizeGrip x:Name="PART_ResizeGrip" Grid.Row="1" Grid.Column="0" HorizontalAlignment="Right"
                        VerticalAlignment="Bottom" Width="17" Height="17" Focusable="false" Margin="0,0,6,6"
                        Cursor="SizeNWSE" Visibility="Collapsed"/>
          </Grid>
        </Grid>
      </AdornerDecorator>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="Fluent:RibbonWindow.IsNonClientAreaActive" Value="false">
        <Setter TargetName="PART_SizeBorder" Value="{DynamicResource WindowInactiveOutterBackgroundBrush}"
                Property="Border.Background"/>
        <Setter TargetName="border3" Value="{DynamicResource WindowInactiveInnerBackgroundBrush}"
                Property="Border.Background"/>
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="Window.ResizeMode" Value="CanResizeWithGrip"/>
          <Condition Property="Window.WindowState" Value="Normal"/>
        </MultiTrigger.Conditions>
        <Setter TargetName="PART_ResizeGrip" Property="UIElement.Visibility" Value="Visible"/>
      </MultiTrigger>
      <Trigger Property="Window.WindowState" Value="Maximized">
        <Setter TargetName="iconImage" Property="FrameworkElement.Margin" Value="0,4,0,0"/>
        <Setter TargetName="PART_SizeBorder" Property="Border.BorderThickness" Value="0,0,0,0"/>
        <Setter TargetName="PART_SizeBorder" Property="Border.CornerRadius" Value="0,0,0,0"/>
        <Setter TargetName="border2" Property="Border.BorderThickness" Value="0,0,0,0"/>
        <Setter TargetName="border2" Property="Border.CornerRadius" Value="0,0,0,0"/>
        <Setter TargetName="PART_ButtonsPanel" Property="FrameworkElement.Margin" Value="0,8,8,0"/>
        <Setter TargetName="maximizeButton" Property="UIElement.Visibility" Value="Collapsed"/>
        <Setter TargetName="adornerDecorator" Property="FrameworkElement.Margin" Value="0"/>
        <Setter TargetName="contentPresenter" Property="FrameworkElement.Margin" Value="8,6,8,8"/>
        <Setter TargetName="border2" Property="FrameworkElement.Height" Value="54"/>
      </Trigger>
      <Trigger Property="Window.WindowState" Value="Normal">
        <Setter TargetName="normalizeButton" Property="UIElement.Visibility" Value="Collapsed"/>
      </Trigger>
      <Trigger Property="Fluent:RibbonWindow.IsIconVisible" Value="false">
        <Setter TargetName="PART_IconImage" Property="UIElement.Visibility" Value="Collapsed"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="CaptionButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="FrameworkElement.Width" Value="35"/>
    <Setter Property="FrameworkElement.Height" Value="19"/>
    <Setter Property="Control.Template" Value="{DynamicResource CaptionButtonControlTemplate}"/>
  </Style>
  <ControlTemplate x:Key="CaptionButtonControlTemplate" TargetType="{x:Type Button}">
    <Grid Background="Transparent">
      <Border x:Name="hoverBorder" Margin="0" BorderBrush="{DynamicResource CaptionButtonHoverOutterBorderBrush}"
              BorderThickness="1" CornerRadius="2" Visibility="Collapsed">
        <Border x:Name="hoverBorderInner" BorderBrush="{DynamicResource CaptionButtonHoverInnerBorderBrush}"
                BorderThickness="1" CornerRadius="1"
                Background="{DynamicResource CaptionButtonHoverInnerBackgroundBrush}"/>
      </Border>
      <Border x:Name="pressedBorder" Margin="0"
              BorderBrush="{DynamicResource CaptionButtonPressedOutterBorderBrush}" BorderThickness="1"
              CornerRadius="2" Visibility="Collapsed">
        <Border x:Name="pressedBorderInner" BorderBrush="{DynamicResource CaptionButtonPressedInnerBorderBrush}"
                BorderThickness="1" CornerRadius="1"
                Background="{DynamicResource CaptionButtonPressedInnerBackgroundBrush}"/>
      </Border>
      <ContentPresenter Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
    </Grid>
    <ControlTemplate.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="UIElement.IsMouseOver" Value="true"/>
          <Condition Property="ButtonBase.IsPressed" Value="false"/>
        </MultiTrigger.Conditions>
        <Setter TargetName="hoverBorder" Property="UIElement.Visibility" Value="Visible"/>
      </MultiTrigger>
      <Trigger Property="ButtonBase.IsPressed" Value="true">
        <Setter TargetName="pressedBorder" Property="UIElement.Visibility" Value="Visible"/>
      </Trigger>
      <Trigger Property="Control.Background" Value="Red">
        <Setter TargetName="hoverBorder" Value="{DynamicResource CaptionButtonCloseHoverOutterBorderBrush}"
                Property="Border.BorderBrush"/>
        <Setter TargetName="hoverBorderInner" Value="{DynamicResource CaptionButtonCloseHoverInnerBorderBrush}"
                Property="Border.BorderBrush"/>
        <Setter TargetName="hoverBorderInner" Value="{DynamicResource CaptionButtonCloseHoverInnerBackgroundBrush}"
                Property="Border.Background"/>
        <Setter TargetName="pressedBorder" Value="{DynamicResource CaptionButtonClosePressedOutterBorderBrush}"
                Property="Border.BorderBrush"/>
        <Setter TargetName="pressedBorderInner" Value="{DynamicResource CaptionButtonClosePressedInnerBorderBrush}"
                Property="Border.BorderBrush"/>
        <Setter TargetName="pressedBorderInner"
                Value="{DynamicResource CaptionButtonClosePressedInnerBackgroundBrush}"
                Property="Border.Background"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="RibbonWindowStyle" TargetType="{x:Type Fluent:RibbonWindow}">
    <Setter Property="Control.FontSize" Value="{DynamicResource DefaultFontSize}"/>
    <Setter Property="Control.FontFamily" Value="{DynamicResource DefaultFontFamily}"/>
    <Setter Property="Control.FontWeight" Value="Normal"/>
    <Setter Property="Fluent:RibbonWindow.GlassBorderThickness" Value="8,51,8,8"/>
    <Setter Property="Fluent:RibbonWindow.ResizeBorderThickness" Value="8,8,8,8"/>
    <Setter Property="Fluent:RibbonWindow.CornerRadius" Value="15"/>
    <Setter Property="Fluent:RibbonWindow.CaptionHeight" Value="50"/>
    <Setter Property="Control.Foreground" Value="#FF000000"/>
    <Setter Property="Control.Template" Value="{StaticResource DwmRibbonWindowControlTemplate}"/>
    <Setter Property="Control.Background" Value="{DynamicResource WindowBackgroundBrush}"/>
    <Setter Property="Fluent:FrameworkHelper.UseLayoutRounding" Value="true"/>
    <Style.Triggers>
      <Trigger Property="Fluent:RibbonWindow.IsCollapsed" Value="true">
        <Setter Property="Fluent:RibbonWindow.GlassBorderThickness" Value="8,30,8,8"/>
      </Trigger>
      <Trigger Property="Window.WindowState" Value="Maximized">
        <Setter Property="Fluent:RibbonWindow.GlassBorderThickness" Value="0,56,0,0"/>
      </Trigger>
      <Trigger Property="Fluent:RibbonWindow.IsDwmEnabled" Value="false">
        <Setter Property="Control.Template" Value="{StaticResource NonDwmRibbonWindowControlTemplate}"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style BasedOn="{StaticResource RibbonWindowStyle}" TargetType="{x:Type Fluent:RibbonWindow}"/>
</ResourceDictionary>