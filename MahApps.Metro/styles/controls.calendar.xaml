<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <Style x:Key="MetroCalendarDayButtonStyle" TargetType="{x:Type CalendarDayButton}">
    <Setter Property="FrameworkElement.MinWidth" Value="5"/>
    <Setter Property="FrameworkElement.MinHeight" Value="5"/>
    <Setter Property="Control.FontSize" Value="{DynamicResource ContentFontSize}"/>
    <Setter Property="Control.FontFamily" Value="{DynamicResource ContentFontFamily}"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type CalendarDayButton}">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0:0:0.1"/>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity"
                                     Storyboard.TargetName="HighlightBackground"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity"
                                     Storyboard.TargetName="HighlightBackground"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightBackground"/>
                    <DoubleAnimation Duration="0" To=".35" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="NormalText"/>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0"/>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Active"/>
                <VisualState x:Name="Inactive">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="NormalText"
                                                   Storyboard.TargetProperty="(TextElement.Foreground)">
                      <DiscreteObjectKeyFrame Value="{DynamicResource GrayBrush2}"/>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="BlackoutDayStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0"/>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="NormalDay"/>
                <VisualState x:Name="BlackoutDay">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Blackout"/>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="TodayBackground" Fill="{DynamicResource AccentColorBrush}" Opacity="0"/>
            <Rectangle x:Name="SelectedBackground" Fill="{DynamicResource AccentColorBrush4}" Opacity="0"/>
            <Border BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Background="{TemplateBinding Control.Background}"/>
            <Rectangle x:Name="HighlightBackground" Opacity="0" Fill="{DynamicResource AccentColorBrush4}"/>
            <Path x:Name="Blackout"
                  Data="M 8.1772461,11.029181 L 10.433105,11.029181 11.700684,12.801641 12.973633,11.029181 15.191895,11.029181 12.844727,13.999395 15.21875,17.060919 12.962891,17.060919 11.673828,15.256231 10.352539,17.060919 8.1396484,17.060919 10.519043,14.042364 Z"
                  HorizontalAlignment="Stretch" Margin="3" Opacity="0" RenderTransformOrigin="0.5,0.5" Stretch="Fill"
                  VerticalAlignment="Stretch" Fill="{DynamicResource AccentColorBrush3}"/>
            <ContentPresenter x:Name="NormalText" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              Margin="5,1,5,1" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              TextElement.Foreground="{DynamicResource GrayBrush1}"/>
            <Rectangle x:Name="DayButtonFocusVisual" IsHitTestVisible="false" Visibility="Collapsed"
                       Stroke="{DynamicResource AccentColorBrush3}"/>
          </Grid>
          <ControlTemplate.Triggers>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="CalendarDayButton.IsToday" Value="false"/>
                <Condition Property="CalendarDayButton.IsSelected" Value="true"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="NormalText" Value="{DynamicResource AccentColorBrush}"
                      Property="TextElement.Foreground"/>
              <Setter TargetName="DayButtonFocusVisual" Property="UIElement.Visibility" Value="Visible"/>
            </MultiTrigger>
            <Trigger Property="CalendarDayButton.IsToday" Value="true">
              <Setter TargetName="TodayBackground" Property="UIElement.Opacity" Value="1"/>
              <Setter TargetName="NormalText" Value="{DynamicResource AccentSelectedColorBrush}"
                      Property="TextElement.Foreground"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="CalendarDayButton.IsToday" Value="true"/>
                <Condition Property="CalendarDayButton.IsBlackedOut" Value="true"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="TodayBackground" Property="UIElement.Opacity" Value="0.5"/>
              <Setter TargetName="Blackout" Value="{DynamicResource AccentColorBrush}" Property="Shape.Fill"/>
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MetroCalendarItemStyle" TargetType="{x:Type CalendarItem}">
    <Setter Property="FrameworkElement.Margin" Value="0,3,0,3"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type CalendarItem}">
          <FrameworkTemplate.Resources>
            <DataTemplate x:Key="{x:Static CalendarItem.DayTitleTemplateResourceKey}">
              <TextBlock FontWeight="Bold" FontFamily="{DynamicResource ContentFontFamily}"
                         FontSize="{DynamicResource ContentFontSize}" HorizontalAlignment="Center"
                         VerticalAlignment="Center" Margin="0,6,0,6" Foreground="{DynamicResource BlackBrush}" Opacity="0.8"
                         Text="{Binding}"/>
            </DataTemplate>
          </FrameworkTemplate.Resources>
          <Grid x:Name="PART_Root">
            <FrameworkElement.Resources>
              <SolidColorBrush x:Key="DisabledColor" Color="#A5FFFFFF"/>
            </FrameworkElement.Resources>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_DisabledVisual"/>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Background="{TemplateBinding Control.Background}">
              <Border BorderThickness="0">
                <Grid Margin="2">
                  <FrameworkElement.Resources>
                    <ControlTemplate x:Key="PreviousButtonTemplate" TargetType="{x:Type Button}">
                      <Grid Cursor="Hand">
                        <VisualStateManager.VisualStateGroups>
                          <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal"/>
                            <VisualState x:Name="MouseOver">
                              <Storyboard>
                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="path"/>
                              </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Disabled">
                              <Storyboard>
                                <DoubleAnimation Duration="0" To=".5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="path"/>
                              </Storyboard>
                            </VisualState>
                          </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Opacity="0.1" Stretch="Fill" Fill="{DynamicResource AccentColorBrush}"/>
                        <Path x:Name="path" Data="M 288.75,232.25 L 288.75,240.625 283,236.625 Z" Opacity="0.7" Fill="White"
                              HorizontalAlignment="Left" Height="10" Margin="14,-6,0,0" Stretch="Fill" VerticalAlignment="Center"
                              Width="6"/>
                      </Grid>
                    </ControlTemplate>
                    <ControlTemplate x:Key="NextButtonTemplate" TargetType="{x:Type Button}">
                      <Grid Cursor="Hand">
                        <VisualStateManager.VisualStateGroups>
                          <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal"/>
                            <VisualState x:Name="MouseOver">
                              <Storyboard>
                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="path"/>
                              </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Disabled">
                              <Storyboard>
                                <DoubleAnimation Duration="0" To=".2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="path"/>
                              </Storyboard>
                            </VisualState>
                          </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Opacity="0.1" Stretch="Fill" Fill="{DynamicResource AccentColorBrush}"/>
                        <Path x:Name="path" Data="M 282.875,231.875 L 282.875,240.375 288.625,236 Z" Opacity="0.7" Fill="White"
                              HorizontalAlignment="Right" Height="10" Margin="0,-6,14,0" Stretch="Fill"
                              VerticalAlignment="Center" Width="6"/>
                      </Grid>
                    </ControlTemplate>
                    <ControlTemplate x:Key="HeaderButtonTemplate" TargetType="{x:Type Button}">
                      <Grid Cursor="Hand">
                        <VisualStateManager.VisualStateGroups>
                          <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal"/>
                            <VisualState x:Name="MouseOver">
                              <Storyboard>
                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="buttonContent"/>
                              </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Disabled">
                              <Storyboard>
                                <DoubleAnimation Duration="0" To=".5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="buttonContent"/>
                              </Storyboard>
                            </VisualState>
                          </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Name="buttonContent" Opacity="0.7"
                                          ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                          Content="{TemplateBinding ContentControl.Content}" Margin="1,4,1,9"
                                          HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                          TextElement.FontFamily="{DynamicResource ContentFontFamily}"
                                          TextElement.Foreground="{DynamicResource AccentSelectedColorBrush}"/>
                      </Grid>
                    </ControlTemplate>
                    <Style x:Key="PreviousCalendarButtonStyle" TargetType="{x:Type Button}">
                      <Setter Property="Control.Template" Value="{StaticResource PreviousButtonTemplate}"/>
                    </Style>
                    <Style x:Key="NextCalendarButtonStyle" TargetType="{x:Type Button}">
                      <Setter Property="Control.Template" Value="{StaticResource NextButtonTemplate}"/>
                    </Style>
                    <Style x:Key="HeaderCalendarButtonStyle" TargetType="{x:Type Button}">
                      <Setter Property="Control.Template" Value="{StaticResource HeaderButtonTemplate}"/>
                    </Style>
                  </FrameworkElement.Resources>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                  </Grid.ColumnDefinitions>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                  </Grid.RowDefinitions>
                  <Grid Row="0" HorizontalAlignment="Stretch" Background="{DynamicResource AccentColorBrush}">
                    <Button x:Name="PART_HeaderButton" FontWeight="Bold" FontFamily="{DynamicResource ContentFontFamily}"
                            Focusable="false" FontSize="{DynamicResource ContentFontSize}" HorizontalAlignment="Center"
                            Grid.Row="0" Style="{StaticResource HeaderCalendarButtonStyle}" VerticalAlignment="Center"/>
                    <Button x:Name="PART_PreviousButton" Focusable="false" HorizontalAlignment="Left" Height="20" Width="28"
                            Grid.Row="0" Style="{StaticResource PreviousCalendarButtonStyle}"/>
                    <Button x:Name="PART_NextButton" Focusable="false" HorizontalAlignment="Right" Height="20" Width="28"
                            Grid.Row="0" Style="{StaticResource NextCalendarButtonStyle}"/>
                  </Grid>
                  <Grid x:Name="PART_MonthView" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="6,-1,6,6"
                        Row="1" Visibility="Visible">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*"/>
                      <ColumnDefinition Width="*"/>
                      <ColumnDefinition Width="*"/>
                      <ColumnDefinition Width="*"/>
                      <ColumnDefinition Width="*"/>
                      <ColumnDefinition Width="*"/>
                      <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="*"/>
                      <RowDefinition Height="*"/>
                      <RowDefinition Height="*"/>
                      <RowDefinition Height="*"/>
                      <RowDefinition Height="*"/>
                      <RowDefinition Height="*"/>
                      <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                  </Grid>
                  <Grid x:Name="PART_YearView" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="6,-3,7,6"
                        Row="1" Visibility="Hidden">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*"/>
                      <ColumnDefinition Width="*"/>
                      <ColumnDefinition Width="*"/>
                      <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="*"/>
                      <RowDefinition Height="*"/>
                      <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                  </Grid>
                </Grid>
              </Border>
            </Border>
            <Rectangle x:Name="PART_DisabledVisual" Fill="{StaticResource DisabledColor}" Opacity="0" Stretch="Fill"
                       Stroke="{StaticResource DisabledColor}" StrokeThickness="1" Visibility="Collapsed"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="PART_DisabledVisual" Property="UIElement.Visibility" Value="Visible"/>
            </Trigger>
            <DataTrigger Value="Year"
                         Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}">
              <Setter TargetName="PART_MonthView" Property="UIElement.Visibility" Value="Hidden"/>
              <Setter TargetName="PART_YearView" Property="UIElement.Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Value="Decade"
                         Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}">
              <Setter TargetName="PART_MonthView" Property="UIElement.Visibility" Value="Hidden"/>
              <Setter TargetName="PART_YearView" Property="UIElement.Visibility" Value="Visible"/>
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MetroCalendarButtonStyle" TargetType="{x:Type CalendarButton}">
    <Setter Property="Control.Background" Value="{DynamicResource AccentColorBrush4}"/>
    <Setter Property="FrameworkElement.MinWidth" Value="40"/>
    <Setter Property="FrameworkElement.MinHeight" Value="42"/>
    <Setter Property="Control.FontSize" Value="{DynamicResource ContentFontSize}"/>
    <Setter Property="Control.FontFamily" Value="{DynamicResource ContentFontFamily}"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type CalendarButton}">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0:0:0.1"/>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To=".5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Background"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To=".5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Background"/>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectionStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0"/>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Unselected"/>
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To=".75" Storyboard.TargetProperty="Opacity"
                                     Storyboard.TargetName="SelectedBackground"/>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0"/>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Active"/>
                <VisualState x:Name="Inactive">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="NormalText"
                                                   Storyboard.TargetProperty="(TextElement.Foreground)">
                      <DiscreteObjectKeyFrame Value="{DynamicResource GrayBrush2}"/>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CalendarButtonFocusStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0"/>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="CalendarButtonFocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility"
                                                   Storyboard.TargetName="CalendarButtonFocusVisual">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <ObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </ObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="CalendarButtonUnfocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility"
                                                   Storyboard.TargetName="CalendarButtonFocusVisual">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <ObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </ObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="SelectedBackground" Fill="{TemplateBinding Control.Background}" Opacity="0"/>
            <Rectangle x:Name="Background" Fill="{TemplateBinding Control.Background}" Opacity="0"/>
            <ContentPresenter x:Name="NormalText" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              Margin="1,0,1,1" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              TextElement.Foreground="{DynamicResource GrayBrush1}"/>
            <Rectangle x:Name="CalendarButtonFocusVisual" IsHitTestVisible="false" Visibility="Collapsed"
                       Stroke="{DynamicResource AccentColorBrush3}"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsFocused" Value="true">
              <Setter TargetName="CalendarButtonFocusVisual" Property="UIElement.Visibility" Value="Visible"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MetroCalendar" TargetType="{x:Type Calendar}">
    <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
    <Setter Property="Control.Foreground" Value="White"/>
    <Setter Property="Calendar.CalendarDayButtonStyle" Value="{DynamicResource MetroCalendarDayButtonStyle}"/>
    <Setter Property="Calendar.CalendarItemStyle" Value="{DynamicResource MetroCalendarItemStyle}"/>
    <Setter Property="Calendar.CalendarButtonStyle" Value="{DynamicResource MetroCalendarButtonStyle}"/>
    <Setter Property="Control.Background" Value="{DynamicResource WhiteBrush}"/>
    <Setter Property="Control.BorderBrush" Value="{DynamicResource BlackBrush}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Calendar}">
          <StackPanel x:Name="PART_Root" HorizontalAlignment="Center" Background="{DynamicResource WhiteBrush}">
            <CalendarItem x:Name="PART_CalendarItem" BorderBrush="{TemplateBinding Control.BorderBrush}"
                          BorderThickness="{TemplateBinding Control.BorderThickness}"
                          Background="{TemplateBinding Control.Background}"
                          Style="{TemplateBinding Calendar.CalendarItemStyle}"/>
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>