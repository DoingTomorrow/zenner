<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:Controls="clr-namespace:MahApps.Metro.Controls"
                    xmlns:Converters="clr-namespace:MahApps.Metro.Converters">
  <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
  <Converters:ThicknessToDoubleConverter x:Key="ThicknessToDoubleConverter"/>
  <Style x:Key="MetroDatePicker" TargetType="{x:Type DatePicker}">
    <Setter Property="Control.Background" Value="{DynamicResource ControlBackgroundBrush}"/>
    <Setter Property="Control.BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
    <Setter Property="Controls:ControlsHelper.FocusBorderBrush"
            Value="{DynamicResource TextBoxFocusBorderBrush}"/>
    <Setter Property="Controls:ControlsHelper.MouseOverBorderBrush"
            Value="{DynamicResource TextBoxMouseOverBorderBrush}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Controls:TextBoxHelper.IsMonitoring" Value="true"/>
    <Setter Property="Control.FontFamily" Value="{DynamicResource ContentFontFamily}"/>
    <Setter Property="Control.FontSize" Value="{DynamicResource ContentFontSize}"/>
    <Setter Property="Control.Foreground" Value="{DynamicResource TextBrush}"/>
    <Setter Property="FrameworkElement.MinHeight" Value="26"/>
    <Setter Property="DatePicker.IsTodayHighlighted" Value="true"/>
    <Setter Property="Control.Padding" Value="0"/>
    <Setter Property="DatePicker.SelectedDateFormat" Value="Short"/>
    <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
    <Setter Property="DatePicker.CalendarStyle" Value="{DynamicResource MetroCalendar}"/>
    <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationErrorTemplate}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DatePicker}">
          <Grid x:Name="PART_Root">
            <Border x:Name="Base" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Background="{TemplateBinding Control.Background}"/>
            <Grid x:Name="PART_InnerGrid" Margin="2">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}, Path=ActualHeight, Mode=OneWay}"/>
              </Grid.ColumnDefinitions>
              <Button x:Name="PART_Button" Grid.Column="1" Style="{DynamicResource ChromelessButtonStyle}"
                      Foreground="{TemplateBinding Control.Foreground}" IsTabStop="false">
                <Path Stretch="Uniform"
                      Data="F1 M 11.0017,36.005 L 11.0017,14.002 14.0021,14.002 14.0021,11.0015 19.0028,11.0015 19.0028,14.002 28.0039,14.002 28.0039,11.0015 33.0046,11.0015 33.0046,14.002 36.005,14.002 36.005,36.005 11.0017,36.005 M 13.0019,34.0048 L 34.0047,34.0048 34.0047,19.0027 13.0019,19.0027 13.0019,34.0048 M 16.5024,12.5017 C 15.95,12.5017 15.5022,13.1734 15.5022,14.0019 15.5022,14.8304 15.95,15.5021 16.5024,15.5021 17.0547,15.5021 17.5025,14.8304 17.5025,14.0019 17.5025,13.1734 17.0547,12.5017 16.5024,12.5017 M 30.5,12.4998 C 29.9476,12.4998 29.4999,13.1715 29.4999,14 29.4999,14.8286 29.9476,15.5002 30.5,15.5002 31.0524,15.5002 31.5001,14.8286 31.5001,14 31.5001,13.1715 31.0524,12.4998 30.5,12.4998 M 20.5994,33.0046 L 18.1154,33.0046 18.1154,23.7987 C 17.2116,24.7375 16.1471,25.4314 14.9217,25.8803 L 14.9217,23.3868 C 15.5686,23.179 16.2709,22.7857 17.0287,22.2069 17.7864,21.628 18.3067,20.9527 18.5895,20.1809 L 20.5994,20.1809 20.5994,33.0046 M 27.874,33.0046 L 27.874,30.5111 22.7286,30.5111 22.7286,28.3822 28.2039,20.359 30.358,20.359 30.358,28.3738 31.9548,28.3738 31.9548,30.5111 30.358,30.5111 30.358,33.0046 27.874,33.0046 M 27.874,28.3738 L 27.874,24.2551 25.0601,28.3738 27.874,28.3738 Z"
                      Fill="{Binding ElementName=PART_Button, Path=Foreground, Mode=OneWay}">
                  <FrameworkElement.Width>
                    <Binding Path="FontSize" Converter="{x:Static Converters:FontSizeOffsetConverter.Instance}"
                             RelativeSource="{RelativeSource TemplatedParent}">
                      <Binding.ConverterParameter>
                        <System:Double>4</System:Double>
                      </Binding.ConverterParameter>
                    </Binding>
                  </FrameworkElement.Width>
                  <FrameworkElement.Height>
                    <Binding Path="FontSize" Converter="{x:Static Converters:FontSizeOffsetConverter.Instance}"
                             RelativeSource="{RelativeSource TemplatedParent}">
                      <Binding.ConverterParameter>
                        <System:Double>4</System:Double>
                      </Binding.ConverterParameter>
                    </Binding>
                  </FrameworkElement.Height>
                </Path>
              </Button>
              <DatePickerTextBox x:Name="PART_TextBox" Grid.Column="0" CaretBrush="{DynamicResource BlackBrush}"
                                 ContextMenu="{DynamicResource TextBoxMetroContextMenu}"
                                 Foreground="{TemplateBinding Control.Foreground}" Focusable="{TemplateBinding UIElement.Focusable}"
                                 FontSize="{TemplateBinding Control.FontSize}"
                                 HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                 VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                 Controls:TextBoxHelper.Watermark="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:TextBoxHelper.Watermark), Mode=OneWay}"/>
              <Popup x:Name="PART_Popup" AllowsTransparency="true" Placement="Bottom" StaysOpen="false"
                     PlacementTarget="{Binding ElementName=PART_Root}"/>
            </Grid>
            <Border x:Name="DisabledVisualElement"
                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                    BorderBrush="{DynamicResource ControlsDisabledBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Background="{DynamicResource ControlsDisabledBrush}" IsHitTestVisible="false" Opacity="0"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="Base"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.MouseOverBorderBrush)}"
                      Property="Border.BorderBrush"/>
            </Trigger>
            <Trigger Property="UIElement.IsFocused" Value="true">
              <Setter TargetName="Base"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.FocusBorderBrush)}"
                      Property="Border.BorderBrush"/>
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocusWithin" Value="true">
              <Setter TargetName="Base"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.FocusBorderBrush)}"
                      Property="Border.BorderBrush"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="DisabledVisualElement" Property="UIElement.Opacity" Value="0.6"/>
            </Trigger>
            <Trigger SourceName="PART_Button" Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="PART_Button" Value="{DynamicResource GrayBrush8}" Property="Control.Background"/>
              <Setter TargetName="PART_Button" Value="{DynamicResource AccentColorBrush}" Property="Control.Foreground"/>
            </Trigger>
            <Trigger SourceName="PART_Button" Property="ButtonBase.IsPressed" Value="true">
              <Setter TargetName="PART_Button" Value="{DynamicResource BlackBrush}" Property="Control.Background"/>
              <Setter TargetName="PART_Button" Value="{DynamicResource WhiteBrush}" Property="Control.Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MetroDatePickerTextBox" TargetType="{x:Type DatePickerTextBox}">
    <Setter Property="Controls:TextBoxHelper.IsMonitoring" Value="true"/>
    <Setter Property="Control.Background" Value="{DynamicResource ControlBackgroundBrush}"/>
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="Control.FontFamily" Value="{DynamicResource ContentFontFamily}"/>
    <Setter Property="Control.FontSize" Value="{DynamicResource ContentFontSize}"/>
    <Setter Property="Control.Foreground" Value="{DynamicResource TextBrush}"/>
    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
    <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DatePickerTextBox}">
          <FrameworkTemplate.Resources>
            <Storyboard x:Key="EnterGotFocus">
              <DoubleAnimation Duration="0:0:0.2" To=".2" Storyboard.TargetProperty="Opacity"
                               Storyboard.TargetName="PART_Watermark"/>
              <DoubleAnimation Duration="0:0:0.2" To=".2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
            </Storyboard>
            <Storyboard x:Key="ExitGotFocus">
              <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Watermark"/>
              <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
            </Storyboard>
            <Storyboard x:Key="EnterHasText">
              <DoubleAnimation Duration="0:0:0.2" From=".2" To="0" Storyboard.TargetProperty="Opacity"
                               Storyboard.TargetName="PART_Watermark"/>
              <DoubleAnimation Duration="0:0:0.2" From=".2" To="0" Storyboard.TargetProperty="Opacity"
                               Storyboard.TargetName="PART_Message"/>
            </Storyboard>
            <Storyboard x:Key="ExitHasText">
              <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Watermark"/>
              <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
            </Storyboard>
          </FrameworkTemplate.Resources>
          <Grid>
            <ScrollViewer x:Name="PART_ContentHost" BorderThickness="0" IsTabStop="false" Margin="2,2,20,2"
                          VerticalAlignment="Stretch" Background="{x:Null}" FocusVisualStyle="{x:Null}"/>
            <ContentControl x:Name="PART_Watermark" Focusable="false" IsHitTestVisible="false" Opacity="0.6" Padding="2"
                            Margin="6,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center"
                            VerticalContentAlignment="Center" Foreground="{TemplateBinding Control.Foreground}"
                            Visibility="Hidden"/>
            <TextBlock x:Name="PART_Message" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}"
                       Foreground="{TemplateBinding Control.Foreground}" IsHitTestVisible="false" Opacity="0.6"
                       HorizontalAlignment="Left" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                       Margin="4,0,0,0" Padding="2"/>
          </Grid>
          <ControlTemplate.Triggers>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="Controls:TextBoxHelper.HasText" Value="false"/>
                <Condition Property="UIElement.IsFocused" Value="true"/>
              </MultiTrigger.Conditions>
              <TriggerBase.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource EnterGotFocus}"/>
              </TriggerBase.EnterActions>
              <TriggerBase.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource ExitGotFocus}"/>
              </TriggerBase.ExitActions>
            </MultiTrigger>
            <DataTrigger Value="{x:Static System:String.Empty}"
                         Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:TextBoxHelper.Watermark)}">
              <Setter TargetName="PART_Watermark" Property="UIElement.Visibility" Value="Visible"/>
            </DataTrigger>
            <Trigger Property="Controls:TextBoxHelper.HasText" Value="true">
              <TriggerBase.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource EnterHasText}"/>
              </TriggerBase.EnterActions>
              <TriggerBase.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource ExitHasText}"/>
              </TriggerBase.ExitActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>