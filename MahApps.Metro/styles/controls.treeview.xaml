<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:MahApps.Metro.Converters">
  <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>
  <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="FrameworkElement.Margin" Value="1"/>
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="FrameworkElement.Width" Value="16"/>
    <Setter Property="FrameworkElement.Height" Value="16"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Grid Background="Transparent" Margin="{TemplateBinding FrameworkElement.Margin}" Height="16" Width="16">
            <Path x:Name="ExpandPath" HorizontalAlignment="Center" VerticalAlignment="Center"
                  Data="{StaticResource TreeArrow}" Fill="Transparent" Stroke="{DynamicResource BlackBrush}">
              <UIElement.RenderTransform>
                <RotateTransform Angle="135" CenterY="3" CenterX="3"/>
              </UIElement.RenderTransform>
            </Path>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
              <Setter TargetName="ExpandPath" Property="UIElement.RenderTransform">
                <Setter.Value>
                  <RotateTransform Angle="180" CenterY="3" CenterX="3"/>
                </Setter.Value>
              </Setter>
              <Setter TargetName="ExpandPath" Value="{DynamicResource GrayBrush1}" Property="Shape.Fill"/>
              <Setter TargetName="ExpandPath" Value="{DynamicResource BlackBrush}" Property="Shape.Stroke"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="ExpandPath" Value="{DynamicResource GrayBrush5}" Property="Shape.Stroke"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsEnabled" Value="false"/>
                <Condition Property="ToggleButton.IsChecked" Value="True"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="ExpandPath" Value="{DynamicResource GrayBrush5}" Property="Shape.Fill"/>
              <Setter TargetName="ExpandPath" Value="{DynamicResource GrayBrush5}" Property="Shape.Stroke"/>
            </MultiTrigger>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="ExpandPath" Value="{DynamicResource AccentColorBrush}" Property="Shape.Stroke"/>
              <Setter TargetName="ExpandPath" Value="{DynamicResource AccentColorBrush}" Property="Shape.Fill"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="TreeViewItemFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="0" Opacity="0" SnapsToDevicePixels="true"
                     Stroke="{DynamicResource {x:Static JetSystemColors.ControlTextBrushKey}}" StrokeThickness="5"
                     StrokeDashArray="1 2"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <converters:TreeViewMarginConverter x:Key="LengthConverter" Length="12"/>
  <Style x:Key="MetroTreeViewItem" TargetType="{x:Type TreeViewItem}">
    <Setter Property="FrameworkElement.MinHeight" Value="25"/>
    <Setter Property="Control.HorizontalContentAlignment"
            Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <Setter Property="Control.VerticalContentAlignment"
            Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <Setter Property="Control.Foreground" Value="{DynamicResource BlackBrush}"/>
    <Setter Property="Control.Background" Value="{DynamicResource WhiteBrush}"/>
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TreeViewItem}">
          <StackPanel>
            <Border x:Name="Bd" Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Padding="{TemplateBinding Control.Padding}"
                    MinHeight="{TemplateBinding FrameworkElement.MinHeight}" UseLayoutRounding="true"
                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
              <Grid Background="Transparent" VerticalAlignment="Stretch"
                    Margin="{Binding Converter={StaticResource LengthConverter}, RelativeSource={x:Static RelativeSource.TemplatedParent}}">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition MinWidth="19" Width="Auto"/>
                  <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" ClickMode="Press"
                              IsChecked="{Binding Path=IsExpanded, RelativeSource={x:Static RelativeSource.TemplatedParent}, Mode=TwoWay}"/>
                <ContentPresenter x:Name="PART_Header" Grid.Column="1" ContentSource="Header"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
              </Grid>
            </Border>
            <ItemsPresenter x:Name="ItemsHost" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
          </StackPanel>
          <ControlTemplate.Triggers>
            <Trigger Property="TreeViewItem.IsExpanded" Value="false">
              <Setter TargetName="ItemsHost" Property="UIElement.Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="ItemsControl.HasItems" Value="false">
              <Setter TargetName="Expander" Property="UIElement.Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger SourceName="Bd" Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="Bd" Value="{DynamicResource AccentColorBrush3}" Property="Border.Background"/>
              <Setter Value="{DynamicResource BlackColorBrush}" Property="Control.Foreground"/>
            </Trigger>
            <Trigger Property="TreeViewItem.IsSelected" Value="true">
              <Setter TargetName="Bd" Value="{DynamicResource AccentColorBrush}" Property="Border.Background"/>
              <Setter Value="{DynamicResource AccentSelectedColorBrush}" Property="Control.Foreground"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{DynamicResource GrayBrush7}" Property="Control.Foreground"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsEnabled" Value="false"/>
                <Condition Property="TreeViewItem.IsSelected" Value="true"/>
              </MultiTrigger.Conditions>
              <MultiTrigger.Setters>
                <Setter TargetName="Bd" Value="{DynamicResource GrayBrush7}" Property="Border.Background"/>
                <Setter Value="{DynamicResource AccentSelectedColorBrush}" Property="Control.Foreground"/>
              </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="TreeViewItem.IsSelected" Value="true"/>
                <Condition Property="Selector.IsSelectionActive" Value="true"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Value="{DynamicResource AccentColorBrush2}" Property="Border.Background"/>
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
        <Setter Property="ItemsControl.ItemsPanel">
          <Setter.Value>
            <ItemsPanelTemplate>
              <VirtualizingStackPanel/>
            </ItemsPanelTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="MetroTreeView" TargetType="{x:Type TreeView}">
    <Setter Property="Control.HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.BorderBrush" Value="{DynamicResource BlackBrush}"/>
    <Setter Property="Control.Background" Value="{DynamicResource WhiteBrush}"/>
    <Setter Property="Control.BorderThickness" Value="0"/>
    <Setter Property="Control.Padding" Value="1"/>
    <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TreeView}">
          <Border Name="Border" Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
            <ScrollViewer x:Name="TreeViewScrollViewer" Focusable="false" Padding="{TemplateBinding Control.Padding}"
                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                          HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                          VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                          CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}">
              <ItemsPresenter/>
            </ScrollViewer>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
        <Setter Property="ItemsControl.ItemsPanel">
          <Setter.Value>
            <ItemsPanelTemplate>
              <VirtualizingStackPanel/>
            </ItemsPanelTemplate>
          </Setter.Value>
        </Setter>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="false">
        <Setter Property="Control.BorderBrush" Value="{DynamicResource GrayBrush9}"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="VirtualisedMetroTreeView" TargetType="{x:Type TreeView}"
         BasedOn="{StaticResource MetroTreeView}">
    <Setter Property="VirtualizingPanel.IsVirtualizing" Value="true"/>
    <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling"/>
  </Style>
</ResourceDictionary>