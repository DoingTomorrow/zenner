<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Controls="clr-namespace:MahApps.Metro.Controls"
                    xmlns:converters="clr-namespace:MahApps.Metro.Converters">
  <ControlTemplate x:Key="SplitButtonHorizontal" TargetType="{x:Type Controls:DropDownButton}">
    <Border x:Name="PART_Border" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
            BorderThickness="{TemplateBinding Control.BorderThickness}"
            BorderBrush="{TemplateBinding Control.BorderBrush}">
      <Button x:Name="PART_Button" Style="{TemplateBinding Controls:DropDownButton.ButtonStyle}"
              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
              Background="{TemplateBinding Control.Background}" Foreground="{TemplateBinding Control.Foreground}"
              Command="{TemplateBinding Controls:DropDownButton.Command}"
              CommandParameter="{TemplateBinding Controls:DropDownButton.CommandParameter}"
              CommandTarget="{TemplateBinding Controls:DropDownButton.CommandTarget}">
        <StackPanel Orientation="Horizontal" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}">
          <ContentPresenter RecognizesAccessKey="true" Content="{TemplateBinding Controls:DropDownButton.Icon}"/>
          <ContentControl x:Name="PART_ButtonContent" MinWidth="20" Margin="3"
                          VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                          HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                          ContentStringFormat="{TemplateBinding ItemsControl.ItemStringFormat}"
                          ContentTemplate="{TemplateBinding ItemsControl.ItemTemplate}"
                          Content="{Binding Content, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
          <Rectangle x:Name="PART_Rectangle" Height="6" Width="10" Margin="0,0,3,0" HorizontalAlignment="Center"
                     VerticalAlignment="Center" Fill="{TemplateBinding Controls:DropDownButton.ArrowBrush}">
            <UIElement.OpacityMask>
              <VisualBrush Stretch="Fill">
                <VisualBrush.Visual>
                  <Canvas Width="18" Height="18" Clip="F1 M 0,0 L 48,0 48,48 0,48 0,0 " UseLayoutRounding="false">
                    <Path Width="18" Height="16" Canvas.Left="14.9063" Canvas.Top="15.75" Stretch="Fill"
                          Fill="{DynamicResource BlackColorBrush}"
                          Data="F1 M 23.9063,25 L 25.9063,23 32.9063,15.75 32.9063,22.25 23.9062,31.75 14.9063,22.25 14.9063,15.75 21.9063,23 23.9063,25 Z"/>
                  </Canvas>
                </VisualBrush.Visual>
              </VisualBrush>
            </UIElement.OpacityMask>
          </Rectangle>
        </StackPanel>
        <FrameworkElement.ContextMenu>
          <ContextMenu x:Name="PART_Menu" StaysOpen="false" MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                       DisplayMemberPath="{TemplateBinding ItemsControl.DisplayMemberPath}"
                       ItemTemplate="{TemplateBinding ItemsControl.ItemTemplate}"
                       ItemTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}"
                       ItemStringFormat="{TemplateBinding ItemsControl.ItemStringFormat}"
                       ItemContainerStyle="{TemplateBinding ItemsControl.ItemContainerStyle}"
                       ItemContainerStyleSelector="{TemplateBinding ItemsControl.ItemContainerStyleSelector}"
                       ItemsSource="{TemplateBinding ItemsControl.ItemsSource}"
                       IsOpen="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
        </FrameworkElement.ContextMenu>
      </Button>
    </Border>
  </ControlTemplate>
  <ControlTemplate x:Key="SplitButtonVertical" TargetType="{x:Type Controls:DropDownButton}">
    <Border x:Name="PART_Border" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
            BorderThickness="{TemplateBinding Control.BorderThickness}"
            BorderBrush="{TemplateBinding Control.BorderBrush}">
      <Button x:Name="PART_Button" Width="{TemplateBinding FrameworkElement.Width}"
              Style="{TemplateBinding Controls:DropDownButton.ButtonStyle}"
              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
              Background="{TemplateBinding Control.Background}" Foreground="{TemplateBinding Control.Foreground}"
              Command="{TemplateBinding Controls:DropDownButton.Command}"
              CommandParameter="{TemplateBinding Controls:DropDownButton.CommandParameter}"
              CommandTarget="{TemplateBinding Controls:DropDownButton.CommandTarget}">
        <StackPanel Orientation="Vertical" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}">
          <ContentPresenter RecognizesAccessKey="true" Content="{TemplateBinding Controls:DropDownButton.Icon}"/>
          <ContentControl x:Name="PART_ButtonContent" MinHeight="20" Margin="3" VerticalAlignment="Stretch"
                          HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                          VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                          ContentStringFormat="{TemplateBinding ItemsControl.ItemStringFormat}"
                          ContentTemplate="{TemplateBinding ItemsControl.ItemTemplate}"
                          Content="{Binding Content, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
          <Rectangle x:Name="PART_Rectangle" Margin="0,0,0,3" Height="6" Width="10" HorizontalAlignment="Center"
                     VerticalAlignment="Center" Fill="{TemplateBinding Controls:DropDownButton.ArrowBrush}">
            <UIElement.OpacityMask>
              <VisualBrush Stretch="Fill">
                <VisualBrush.Visual>
                  <Canvas Width="18" Height="18" Clip="F1 M 0,0 L 48,0 48,48 0,48 0,0 " UseLayoutRounding="false">
                    <Path Width="18" Height="16" Canvas.Left="14.9063" Canvas.Top="15.75" Stretch="Fill"
                          Fill="{DynamicResource BlackColorBrush}"
                          Data="F1 M 23.9063,25 L 25.9063,23 32.9063,15.75 32.9063,22.25 23.9062,31.75 14.9063,22.25 14.9063,15.75 21.9063,23 23.9063,25 Z"/>
                  </Canvas>
                </VisualBrush.Visual>
              </VisualBrush>
            </UIElement.OpacityMask>
          </Rectangle>
        </StackPanel>
        <FrameworkElement.ContextMenu>
          <ContextMenu x:Name="PART_Menu" StaysOpen="false" MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                       DisplayMemberPath="{TemplateBinding ItemsControl.DisplayMemberPath}"
                       ItemTemplate="{TemplateBinding ItemsControl.ItemTemplate}"
                       ItemTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}"
                       ItemStringFormat="{TemplateBinding ItemsControl.ItemStringFormat}"
                       ItemContainerStyle="{TemplateBinding ItemsControl.ItemContainerStyle}"
                       ItemContainerStyleSelector="{TemplateBinding ItemsControl.ItemContainerStyleSelector}"
                       ItemsSource="{TemplateBinding ItemsControl.ItemsSource}"
                       IsOpen="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
        </FrameworkElement.ContextMenu>
      </Button>
    </Border>
  </ControlTemplate>
  <Style x:Key="ButtonDropDownFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="1" SnapsToDevicePixels="true"
                     Stroke="{DynamicResource {x:Static JetSystemColors.ControlTextBrushKey}}" StrokeThickness="1"
                     StrokeDashArray="1 2"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type Controls:DropDownButton}">
    <Setter Property="Controls:DropDownButton.ButtonStyle" Value="{DynamicResource ButtonDropDownStyle}"/>
    <Setter Property="Controls:DropDownButton.MenuStyle" Value="{DynamicResource MetroContextMenu}"/>
    <Setter Property="Control.Background" Value="{DynamicResource WhiteColorBrush}"/>
    <Setter Property="Control.Foreground" Value="{DynamicResource BlackColorBrush}"/>
    <Setter Property="Controls:DropDownButton.ArrowBrush" Value="{DynamicResource BlackColorBrush}"/>
    <Setter Property="FrameworkElement.MinHeight" Value="26"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.BorderBrush" Value="{DynamicResource BlackColorBrush}"/>
    <Setter Property="Control.FontFamily" Value="{DynamicResource ContentFontFamily}"/>
    <Setter Property="Control.FontSize" Value="{DynamicResource ContentFontSize}"/>
    <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonDropDownFocusVisual}"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Controls:DropDownButton}">
          <Border x:Name="PART_Border" UseLayoutRounding="true"
                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}">
            <Button x:Name="PART_Button" Style="{TemplateBinding Controls:DropDownButton.ButtonStyle}"
                    FocusVisualStyle="{TemplateBinding FrameworkElement.FocusVisualStyle}"
                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalContentAlignment="Stretch"
                    VerticalContentAlignment="Stretch"
                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                    Background="{TemplateBinding Control.Background}" Foreground="{TemplateBinding Control.Foreground}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    Command="{TemplateBinding Controls:DropDownButton.Command}"
                    CommandParameter="{TemplateBinding Controls:DropDownButton.CommandParameter}"
                    CommandTarget="{TemplateBinding Controls:DropDownButton.CommandTarget}">
              <DockPanel x:Name="PART_Content" Focusable="false" LastChildFill="true">
                <Rectangle x:Name="PART_Rectangle" UseLayoutRounding="false" DockPanel.Dock="Right" Height="6" Width="10"
                           Margin="0,0,3,0" HorizontalAlignment="Center" VerticalAlignment="Center"
                           Visibility="{TemplateBinding Controls:DropDownButton.ArrowVisibility}"
                           Fill="{TemplateBinding Controls:DropDownButton.ArrowBrush}">
                  <UIElement.OpacityMask>
                    <VisualBrush Stretch="Fill">
                      <VisualBrush.Visual>
                        <Canvas Width="18" Height="18" Clip="F1 M 0,0 L 48,0 48,48 0,48 0,0 " UseLayoutRounding="false">
                          <Path Width="18" Height="16" Canvas.Left="14.9063" Canvas.Top="15.75" Stretch="Fill"
                                Fill="{DynamicResource BlackColorBrush}"
                                Data="F1 M 23.9063,25 L 25.9063,23 32.9063,15.75 32.9063,22.25 23.9062,31.75 14.9063,22.25 14.9063,15.75 21.9063,23 23.9063,25 Z"/>
                        </Canvas>
                      </VisualBrush.Visual>
                    </VisualBrush>
                  </UIElement.OpacityMask>
                </Rectangle>
                <StackPanel x:Name="PART_ContentOrientation" Focusable="false" Orientation="Horizontal"
                            HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}">
                  <ContentPresenter UseLayoutRounding="false" RecognizesAccessKey="true" Focusable="false" HorizontalAlignment="Center"
                                    VerticalAlignment="Center" Content="{TemplateBinding Controls:DropDownButton.Icon}"
                                    ContentTemplate="{TemplateBinding Controls:DropDownButton.IconTemplate}"/>
                  <Controls:ContentControlEx x:Name="PART_ButtonContent" Margin="3" UseLayoutRounding="false" HorizontalAlignment="Center"
                                             VerticalAlignment="Center" ContentStringFormat="{TemplateBinding ItemsControl.ItemStringFormat}"
                                             ContentTemplate="{TemplateBinding ItemsControl.ItemTemplate}"
                                             SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                             HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                             Padding="{TemplateBinding Control.Padding}"
                                             VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                             RecognizesAccessKey="true"
                                             Content="{Binding Content, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                             ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.ContentCharacterCasing)}"/>
                </StackPanel>
              </DockPanel>
              <FrameworkElement.ContextMenu>
                <ContextMenu x:Name="PART_Menu" Style="{TemplateBinding Controls:DropDownButton.MenuStyle}" StaysOpen="false"
                             MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                             DisplayMemberPath="{TemplateBinding ItemsControl.DisplayMemberPath}"
                             ItemTemplate="{TemplateBinding ItemsControl.ItemTemplate}"
                             ItemTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}"
                             ItemStringFormat="{TemplateBinding ItemsControl.ItemStringFormat}"
                             ItemContainerStyle="{TemplateBinding ItemsControl.ItemContainerStyle}"
                             ItemContainerStyleSelector="{TemplateBinding ItemsControl.ItemContainerStyleSelector}"
                             ItemsSource="{TemplateBinding ItemsControl.ItemsSource}"
                             IsOpen="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
              </FrameworkElement.ContextMenu>
            </Button>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Value="{x:Null}" Property="Controls:DropDownButton.Content">
              <Setter TargetName="PART_ButtonContent" Property="FrameworkElement.Margin" Value="0"/>
            </Trigger>
            <Trigger Property="Controls:DropDownButton.Orientation" Value="Vertical">
              <Setter TargetName="PART_Rectangle" Property="DockPanel.Dock" Value="Bottom"/>
              <Setter TargetName="PART_Rectangle" Property="FrameworkElement.Margin" Value="0,0,0,3"/>
              <Setter TargetName="PART_ContentOrientation" Property="StackPanel.Orientation" Value="Vertical"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="UIElement.IsMouseOver" Value="true">
        <Setter Property="Controls:DropDownButton.ArrowBrush" Value="{DynamicResource AccentColorBrush}"/>
      </Trigger>
      <Trigger Property="UIElement.IsFocused" Value="true">
        <Setter Property="Control.BorderBrush" Value="{DynamicResource AccentColorBrush}"/>
      </Trigger>
      <Trigger Property="UIElement.IsKeyboardFocusWithin" Value="true">
        <Setter Property="Control.BorderBrush" Value="{DynamicResource AccentColorBrush}"/>
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="false">
        <Setter Property="UIElement.Opacity" Value=".55"/>
      </Trigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>