<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Controls="clr-namespace:MahApps.Metro.Controls">
  <Style TargetType="{x:Type Controls:ToggleSwitchButton}">
    <Setter Property="Control.IsTabStop" Value="false"/>
    <Setter Property="Controls:ToggleSwitchButton.OnSwitchBrush" Value="{DynamicResource AccentColorBrush}"/>
    <Setter Property="Controls:ToggleSwitchButton.OffSwitchBrush" Value="{DynamicResource GrayBrush4}"/>
    <Setter Property="Controls:ToggleSwitchButton.ThumbIndicatorBrush" Value="{DynamicResource BlackBrush}"/>
    <Setter Property="Controls:ToggleSwitchButton.ThumbIndicatorDisabledBrush"
            Value="{DynamicResource GrayBrush4}"/>
    <Setter Property="Controls:ToggleSwitchButton.ThumbIndicatorWidth" Value="13"/>
    <Setter Property="Control.BorderThickness" Value="2"/>
    <Setter Property="Control.BorderBrush" Value="{DynamicResource GrayBrush4}"/>
    <Setter Property="FrameworkElement.Width" Value="70"/>
    <Setter Property="Control.Padding" Value="2"/>
    <Setter Property="FrameworkElement.Height" Value="35"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Controls:ToggleSwitchButton}">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_BackgroundOverlay">
                      <DiscreteDoubleKeyFrame KeyTime="0" Value="0.5"/>
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_BackgroundOverlay">
                      <DiscreteDoubleKeyFrame KeyTime="0" Value="0.2"/>
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_BackgroundOverlay">
                      <DiscreteDoubleKeyFrame KeyTime="0" Value="0.4"/>
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="PART_SwitchTrack" Margin="5">
              <Border BorderThickness="{TemplateBinding Control.BorderThickness}"
                      BorderBrush="{TemplateBinding Control.BorderBrush}"
                      Background="{TemplateBinding Control.Background}">
                <Grid Margin="{TemplateBinding Control.Padding}" ClipToBounds="true">
                  <Rectangle Fill="{TemplateBinding Controls:ToggleSwitchButton.OnSwitchBrush}"/>
                  <Rectangle Fill="{TemplateBinding Controls:ToggleSwitchButton.OffSwitchBrush}" RenderTransformOrigin="0.5,0.5">
                    <UIElement.RenderTransform>
                      <TranslateTransform x:Name="PART_BackgroundTranslate"/>
                    </UIElement.RenderTransform>
                  </Rectangle>
                  <Rectangle x:Name="PART_BackgroundOverlay" Fill="{DynamicResource WhiteBrush}" Opacity="0"/>
                </Grid>
              </Border>
              <Rectangle x:Name="PART_ThumbIndicator"
                         Fill="{TemplateBinding Controls:ToggleSwitchButton.ThumbIndicatorBrush}"
                         Width="{TemplateBinding Controls:ToggleSwitchButton.ThumbIndicatorWidth}"
                         HorizontalAlignment="Left">
                <UIElement.RenderTransform>
                  <TranslateTransform x:Name="PART_ThumbTranslate"/>
                </UIElement.RenderTransform>
              </Rectangle>
            </Grid>
            <Thumb x:Name="PART_DraggingThumb">
              <Control.Template>
                <ControlTemplate>
                  <Rectangle Fill="Transparent"/>
                </ControlTemplate>
              </Control.Template>
            </Thumb>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="PART_ThumbIndicator"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ThumbIndicatorDisabledBrush}"
                      Property="Shape.Fill"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type Controls:ToggleSwitch}">
    <Setter Property="Control.IsTabStop" Value="true"/>
    <Setter Property="Controls:ToggleSwitch.ToggleSwitchButtonStyle"
            Value="{StaticResource {x:Type Controls:ToggleSwitchButton}}"/>
    <Setter Property="Controls:ToggleSwitch.OnSwitchBrush" Value="{DynamicResource AccentColorBrush}"/>
    <Setter Property="Controls:ToggleSwitch.OffSwitchBrush" Value="{DynamicResource GrayBrush4}"/>
    <Setter Property="Controls:ToggleSwitch.ThumbIndicatorBrush" Value="{DynamicResource BlackBrush}"/>
    <Setter Property="Controls:ToggleSwitch.ThumbIndicatorDisabledBrush" Value="{DynamicResource GrayBrush4}"/>
    <Setter Property="Controls:ToggleSwitch.ThumbIndicatorWidth" Value="13"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Left"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Foreground" Value="{DynamicResource BlackBrush}"/>
    <Setter Property="Control.FontFamily" Value="{DynamicResource ToggleSwitchFontFamily}"/>
    <Setter Property="Control.FontSize" Value="{DynamicResource ToggleSwitchFontSize}"/>
    <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
    <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationErrorTemplate}"/>
    <Setter Property="Controls:ToggleSwitch.HeaderTemplate">
      <Setter.Value>
        <DataTemplate>
          <TextBlock TextWrapping="Wrap" FontWeight="Normal" HorizontalAlignment="Left" VerticalAlignment="Top"
                     Margin="0,0,0,5" Opacity="0.65" FontFamily="{DynamicResource ToggleSwitchHeaderFontFamily}"
                     FontSize="{DynamicResource ToggleSwitchHeaderFontSize}" Text="{Binding Mode=OneWay}"/>
        </DataTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Controls:ToggleSwitch}">
          <Border BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Padding="{TemplateBinding Control.Padding}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="Header" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="0"
                                     To="0.3"/>
                    <DoubleAnimation Storyboard.TargetName="Content" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="0"
                                     To="0.3"/>
                    <DoubleAnimation Storyboard.TargetName="Switch" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="0"
                                     To="0.75"/>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid Background="Transparent">
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="firstCol" Width="*"/>
                <ColumnDefinition x:Name="secCol" Width="Auto"/>
              </Grid.ColumnDefinitions>
              <ContentControl x:Name="Header" Grid.ColumnSpan="2" Content="{TemplateBinding Controls:ToggleSwitch.Header}"
                              ContentTemplate="{TemplateBinding Controls:ToggleSwitch.HeaderTemplate}" IsTabStop="false"/>
              <ContentControl x:Name="Content" Grid.Row="1" Content="{TemplateBinding ContentControl.Content}"
                              ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" IsTabStop="false"
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              FontFamily="{TemplateBinding Control.FontFamily}" FontSize="{TemplateBinding Control.FontSize}"/>
              <Controls:ToggleSwitchButton x:Name="Switch" Grid.Column="1" Grid.Row="1"
                                           SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                           Style="{TemplateBinding Controls:ToggleSwitch.ToggleSwitchButtonStyle}"
                                           Background="{TemplateBinding Control.Background}"
                                           OnSwitchBrush="{TemplateBinding Controls:ToggleSwitch.OnSwitchBrush}"
                                           OffSwitchBrush="{TemplateBinding Controls:ToggleSwitch.OffSwitchBrush}"
                                           ThumbIndicatorBrush="{TemplateBinding Controls:ToggleSwitch.ThumbIndicatorBrush}"
                                           ThumbIndicatorDisabledBrush="{TemplateBinding Controls:ToggleSwitch.ThumbIndicatorDisabledBrush}"
                                           ThumbIndicatorWidth="{TemplateBinding Controls:ToggleSwitch.ThumbIndicatorWidth}"
                                           VerticalAlignment="Center" FocusVisualStyle="{x:Null}"
                                           IsChecked="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="Controls:ToggleSwitch.IsChecked" Value="True"/>
                <Condition Value="{x:Null}" Property="ContentControl.Content"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="Content" Property="ContentControl.Content"
                      Value="{Binding Path=OnLabel, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="Controls:ToggleSwitch.IsChecked" Value="False"/>
                <Condition Value="{x:Null}" Property="ContentControl.Content"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="Content" Property="ContentControl.Content"
                      Value="{Binding Path=OffLabel, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
            </MultiTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Header}" Value="{x:Null}">
              <Setter TargetName="Header" Property="UIElement.Visibility" Value="Collapsed"/>
            </DataTrigger>
            <Trigger Property="Controls:ToggleSwitch.ContentDirection" Value="RightToLeft">
              <Setter Property="Control.HorizontalContentAlignment" Value="Right"/>
              <Setter TargetName="firstCol" Property="ColumnDefinition.Width" Value="Auto"/>
              <Setter TargetName="secCol" Property="ColumnDefinition.Width" Value="*"/>
              <Setter TargetName="Content" Property="Grid.Column" Value="1"/>
              <Setter TargetName="Switch" Property="Grid.Column" Value="0"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>